{
  "comments": [
    {
      "key": {
        "uuid": "602f3821_9ee80dff",
        "filename": "test/iscsi_tgt/qos/qos.sh",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1014536
      },
      "writtenOn": "2019-05-08T04:37:51Z",
      "side": 1,
      "message": "hi Gang,\nwhat about here?  this line lists a range , is there any case leads to exit 1?",
      "revId": "64411769e0c74f5cc17f1209a8f5bc55a9d67e1a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "014006aa_bc4c28e7",
        "filename": "test/iscsi_tgt/qos/qos.sh",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2019-05-08T04:55:59Z",
      "side": 1,
      "message": "Got it. So that for the below else \"enable_limit \u003d false\", it shall always return (exit 0) successfully, either to ENBALE_QOS or not.\n\nIn this case, what if just removed lines 47-50 for the \"check_qos \u003d false\" case.\n\nOn the other hand, to get less impact from the performance variation, may check limit with 0.75 actual result as mentioned in other comments. and the overall change after line 41 could be:\n\nelse\n    if [ check_qos \u003d true ]; then\n        read_result \u003d 0.75 * read_result\n        retval\u003dread_result \u003e qos_limit...\n        if [ retval -eq \u003d 0 ]; then\n                echo\n                ENABL_QOS\u003dfalse\n        fi\n    fi\nfi",
      "parentUuid": "602f3821_9ee80dff",
      "revId": "64411769e0c74f5cc17f1209a8f5bc55a9d67e1a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0123a0c8_fc2f0bfa",
        "filename": "test/iscsi_tgt/qos/qos.sh",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2019-05-08T04:13:46Z",
      "side": 1,
      "message": "If I understand the intermediate issue here correctly, the problem is that the performance is variant so that the QoS goal could not achieve.\n\nWe may add below before this line. If it is to \"check_qos\", make the limit compare with half of the measured performance without QoS.\n\n               if [ $check_qos \u003d true ]; then\n                       # to avoid the performance variation, compare the limit with half of the\n                       # measured actual performacne without QoS.\n                       read_result\u003d$((read_result/2))\n               fi\n\nWhat\u0027s Darek\u0027s comment, especially for the noticed issue and why we comment out this QoS testing before.\n\nThanks, Gang",
      "range": {
        "startLine": 42,
        "startChar": 2,
        "endLine": 42,
        "endChar": 49
      },
      "revId": "64411769e0c74f5cc17f1209a8f5bc55a9d67e1a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8335e174_4909fb30",
        "filename": "test/iscsi_tgt/qos/qos.sh",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2019-05-08T04:25:08Z",
      "side": 1,
      "message": "Looking at the build result https://dqtibwqq6s6ux.cloudfront.net/results/autotest-per-patch/builds/30415/archive/iscsi_autotest/build.log\n\n05:03:30\t# echo \u002729819 \u003e 20000\u0027 \u003c\u003c\u003c\u003c\n\nThe actual result is 29819 without QoS. Maybe we could compare Limit with actual * 0.75. Or we could increase the queue depth of the FIO or create a RAID0 bdev to increase the actual IOPS.\n\nThe purpose is to avoid that each time limit \u003e actual * 0.5 and not QoS testing run at all.\n\nThanks, Gang",
      "parentUuid": "0123a0c8_fc2f0bfa",
      "range": {
        "startLine": 42,
        "startChar": 2,
        "endLine": 42,
        "endChar": 49
      },
      "revId": "64411769e0c74f5cc17f1209a8f5bc55a9d67e1a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "178552bc_242ffa8e",
        "filename": "test/iscsi_tgt/qos/qos.sh",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2019-05-08T04:13:46Z",
      "side": 1,
      "message": "This looks like not a correct change to return successful even limit is not achieved.",
      "range": {
        "startLine": 49,
        "startChar": 4,
        "endLine": 51,
        "endChar": 9
      },
      "revId": "64411769e0c74f5cc17f1209a8f5bc55a9d67e1a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dcdbb23f_bbcca557",
        "filename": "test/iscsi_tgt/qos/qos.sh",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1014536
      },
      "writtenOn": "2019-05-08T04:37:51Z",
      "side": 1,
      "message": "I use VM to run this case, sometimes echo \"$read_result less than $qos_limit - expected greater than\".",
      "parentUuid": "178552bc_242ffa8e",
      "range": {
        "startLine": 49,
        "startChar": 4,
        "endLine": 51,
        "endChar": 9
      },
      "revId": "64411769e0c74f5cc17f1209a8f5bc55a9d67e1a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}