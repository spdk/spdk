{
  "comments": [
    {
      "key": {
        "uuid": "29265f97_e78e148a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1015763
      },
      "writtenOn": "2019-01-23T23:56:48Z",
      "side": 1,
      "message": "Typo: s/strol/strtol/",
      "revId": "7903100807e0fa66f28c6e2c16dc973daf79d7a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "977a7687_1ee99592",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-01-24T01:36:05Z",
      "side": 1,
      "message": "Thank you Arshad, I\u0027ll surely do if I update this patch.",
      "parentUuid": "29265f97_e78e148a",
      "revId": "7903100807e0fa66f28c6e2c16dc973daf79d7a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "371ae407_78631047",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 1014600
      },
      "writtenOn": "2019-01-25T06:46:06Z",
      "side": 1,
      "message": "So, the user should use spdk_strtol*() only for parsing positive numbers (include zero)?",
      "range": {
        "startLine": 18,
        "startChar": 50,
        "endLine": 19,
        "endChar": 55
      },
      "revId": "7903100807e0fa66f28c6e2c16dc973daf79d7a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f435adcf_a196eba2",
        "filename": "include/spdk/string.h",
        "patchSetId": 5
      },
      "lineNbr": 243,
      "author": {
        "id": 1014600
      },
      "writtenOn": "2019-01-25T06:46:06Z",
      "side": 1,
      "message": "Same with comment in commit message.",
      "range": {
        "startLine": 243,
        "startChar": 12,
        "endLine": 243,
        "endChar": 77
      },
      "revId": "7903100807e0fa66f28c6e2c16dc973daf79d7a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "880ec372_76b88a66",
        "filename": "include/spdk/string.h",
        "patchSetId": 5
      },
      "lineNbr": 248,
      "author": {
        "id": 1014600
      },
      "writtenOn": "2019-01-25T06:46:06Z",
      "side": 1,
      "message": "0 or positive number.",
      "range": {
        "startLine": 248,
        "startChar": 11,
        "endLine": 248,
        "endChar": 12
      },
      "revId": "7903100807e0fa66f28c6e2c16dc973daf79d7a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3688e13b_615bd60a",
        "filename": "include/spdk/string.h",
        "patchSetId": 5
      },
      "lineNbr": 256,
      "author": {
        "id": 1014600
      },
      "writtenOn": "2019-01-25T06:46:06Z",
      "side": 1,
      "message": "Same with comment in commit message.",
      "range": {
        "startLine": 256,
        "startChar": 12,
        "endLine": 256,
        "endChar": 77
      },
      "revId": "7903100807e0fa66f28c6e2c16dc973daf79d7a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6aecea56_3a87a100",
        "filename": "include/spdk/string.h",
        "patchSetId": 5
      },
      "lineNbr": 261,
      "author": {
        "id": 1014600
      },
      "writtenOn": "2019-01-25T06:46:06Z",
      "side": 1,
      "message": "0 or positive number.",
      "range": {
        "startLine": 261,
        "startChar": 11,
        "endLine": 261,
        "endChar": 12
      },
      "revId": "7903100807e0fa66f28c6e2c16dc973daf79d7a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97d506d3_ea75a0eb",
        "filename": "lib/bdev/null/bdev_null.c",
        "patchSetId": 5
      },
      "lineNbr": 333,
      "author": {
        "id": 1011792
      },
      "writtenOn": "2019-01-24T04:07:13Z",
      "side": 1,
      "message": "int and long may vary on different platforms. Are we just omitting this?",
      "range": {
        "startLine": 333,
        "startChar": 15,
        "endLine": 333,
        "endChar": 21
      },
      "revId": "7903100807e0fa66f28c6e2c16dc973daf79d7a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77abe25a_7fa0ad53",
        "filename": "lib/bdev/null/bdev_null.c",
        "patchSetId": 5
      },
      "lineNbr": 333,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-01-24T04:25:20Z",
      "side": 1,
      "message": "I did drop-in-replacement in this patch. Removing this is not related directly with the purpose.\n\nSo I want to take your these feedback after patch series.\n\nI hope it\u0027s OK for you.",
      "parentUuid": "97d506d3_ea75a0eb",
      "range": {
        "startLine": 333,
        "startChar": 15,
        "endLine": 333,
        "endChar": 21
      },
      "revId": "7903100807e0fa66f28c6e2c16dc973daf79d7a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dacf92cc_cf1ba03e",
        "filename": "lib/bdev/null/bdev_null.c",
        "patchSetId": 5
      },
      "lineNbr": 334,
      "author": {
        "id": 1014600
      },
      "writtenOn": "2019-01-25T06:46:06Z",
      "side": 1,
      "message": "\u003c\u003d, because we will use block_size as divisor in line 340",
      "range": {
        "startLine": 334,
        "startChar": 18,
        "endLine": 334,
        "endChar": 19
      },
      "revId": "7903100807e0fa66f28c6e2c16dc973daf79d7a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6936f39_d2dc2491",
        "filename": "lib/bdev/null/bdev_null.c",
        "patchSetId": 5
      },
      "lineNbr": 334,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-01-25T07:28:49Z",
      "side": 1,
      "message": "Nice catch. should be \u003c\u003d 0",
      "parentUuid": "dacf92cc_cf1ba03e",
      "range": {
        "startLine": 334,
        "startChar": 18,
        "endLine": 334,
        "endChar": 19
      },
      "revId": "7903100807e0fa66f28c6e2c16dc973daf79d7a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8da0510_5e7a8f3f",
        "filename": "lib/conf/conf.c",
        "patchSetId": 5
      },
      "lineNbr": 422,
      "author": {
        "id": 1011792
      },
      "writtenOn": "2019-01-24T04:07:13Z",
      "side": 1,
      "message": "Same here",
      "range": {
        "startLine": 422,
        "startChar": 9,
        "endLine": 422,
        "endChar": 14
      },
      "revId": "7903100807e0fa66f28c6e2c16dc973daf79d7a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ec4a097_7d4634e0",
        "filename": "lib/conf/conf.c",
        "patchSetId": 5
      },
      "lineNbr": 477,
      "author": {
        "id": 1011792
      },
      "writtenOn": "2019-01-24T04:07:13Z",
      "side": 1,
      "message": "and here",
      "range": {
        "startLine": 477,
        "startChar": 9,
        "endLine": 477,
        "endChar": 14
      },
      "revId": "7903100807e0fa66f28c6e2c16dc973daf79d7a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92fb9670_ad26f7ac",
        "filename": "lib/util/string.c",
        "patchSetId": 5
      },
      "lineNbr": 421,
      "author": {
        "id": 1014600
      },
      "writtenOn": "2019-01-25T06:46:06Z",
      "side": 1,
      "message": "I don\u0027t know what the manual that you are reading, but in my system, the manual of strtol says:\n\n\u003e The  strtol()  function returns the result of the conversion, unless the value would underflow\n\u003e or overflow. If an underflow occurs, strtol() returns LONG_MIN.  If an overflow occurs, \n\u003e strtol() returns  LONG_MAX.\n\nSo strtol will return numbers between LONG_MIN and LONG_MAX.",
      "range": {
        "startLine": 420,
        "startChar": 1,
        "endLine": 421,
        "endChar": 32
      },
      "revId": "7903100807e0fa66f28c6e2c16dc973daf79d7a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82b801aa_7d9e85d1",
        "filename": "lib/util/string.c",
        "patchSetId": 5
      },
      "lineNbr": 421,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-01-25T07:28:49Z",
      "side": 1,
      "message": "This is derived from http://man7.org/linux/man-pages/man3/strtol.3.html.\n\nPlease see the NOTE section.\n\nSample code based on the NOTE section is also found as follows.\n \n           if ((errno \u003d\u003d ERANGE \u0026\u0026 (val \u003d\u003d LONG_MAX || val \u003d\u003d LONG_MIN))\n                   || (errno !\u003d 0 \u0026\u0026 val \u003d\u003d 0)) {\n               perror(\"strtol\");\n               exit(EXIT_FAILURE);\n           }",
      "parentUuid": "92fb9670_ad26f7ac",
      "range": {
        "startLine": 420,
        "startChar": 1,
        "endLine": 421,
        "endChar": 32
      },
      "revId": "7903100807e0fa66f28c6e2c16dc973daf79d7a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be2cccd9_2937e993",
        "filename": "lib/util/string.c",
        "patchSetId": 5
      },
      "lineNbr": 426,
      "author": {
        "id": 1014600
      },
      "writtenOn": "2019-01-25T06:46:06Z",
      "side": 1,
      "message": "The strtol() may return negative number, so does spdk_strtol(). How do we distinguish spdk_strtol(\"-22\") and -EINVAL?",
      "revId": "7903100807e0fa66f28c6e2c16dc973daf79d7a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "987c914b_e73ff512",
        "filename": "lib/util/string.c",
        "patchSetId": 5
      },
      "lineNbr": 426,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-01-25T07:28:49Z",
      "side": 1,
      "message": "You are right.\n\nHow about the following?\n\nI haven\u0027t found any use case of negative number in SPDK but it will be better if we can handle negative number in spdk_strtol and spdk_strtoll.\n\nSo how about the following?\n\n- the caller passes the pointer to value in which the result of strtol is stored.\n- spdk_strtol returns 0 if success, negative errno otherwise.",
      "parentUuid": "be2cccd9_2937e993",
      "revId": "7903100807e0fa66f28c6e2c16dc973daf79d7a2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}