{
  "comments": [
    {
      "key": {
        "uuid": "1d81b5bb_bb7397db",
        "filename": "test/lvol/common.sh",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1011223
      },
      "writtenOn": "2019-07-08T07:48:44Z",
      "side": 1,
      "message": "I like this. It\u0027s a succinct way of doing it.",
      "revId": "0cc8d800b7a81ad65d563d60c4b26d84a94dfff8",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24118617_4696196b",
        "filename": "test/lvol/common.sh",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1011223
      },
      "writtenOn": "2019-07-08T07:48:44Z",
      "side": 1,
      "message": "This is a bit of a side note, do we want to try to delete any stray lvols before failing out? I am just imagining the case where we fail a test with lvols still intact on the drive, then get through this portion and next time a user runs a test the drive is in a weird state. I\u0027m not thinking so much in terms of autotest here, but in terms of people running these tests in isolation at their desks.\nBut if we are just using malloc as the backend we don\u0027t really have to worry about this. Also handling that here might not be the best thing since it\u0027s possible that the app is hung and we can\u0027t do anything about it inside of the script anyways.",
      "revId": "0cc8d800b7a81ad65d563d60c4b26d84a94dfff8",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}