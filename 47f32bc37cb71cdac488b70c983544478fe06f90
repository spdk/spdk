{
  "comments": [
    {
      "key": {
        "uuid": "6ec15a46_9355e383",
        "filename": "lib/ftl/ftl_core.c",
        "patchSetId": 5
      },
      "lineNbr": 813,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2020-01-31T09:50:55Z",
      "side": 1,
      "message": "What about user IO channels? I think we should also check those. Or make sure all of them were freed.",
      "range": {
        "startLine": 813,
        "startChar": 39,
        "endLine": 813,
        "endChar": 70
      },
      "revId": "47f32bc37cb71cdac488b70c983544478fe06f90",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff30e161_df92a98a",
        "filename": "lib/ftl/ftl_core.c",
        "patchSetId": 5
      },
      "lineNbr": 813,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2020-01-31T14:47:55Z",
      "side": 1,
      "message": "I think that user are not allow to start shutdown sequence until all user IO is finished. In such case those queues must be empty.",
      "parentUuid": "6ec15a46_9355e383",
      "range": {
        "startLine": 813,
        "startChar": 39,
        "endLine": 813,
        "endChar": 70
      },
      "revId": "47f32bc37cb71cdac488b70c983544478fe06f90",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c133ac6d_cf4ad162",
        "filename": "lib/ftl/ftl_core.c",
        "patchSetId": 5
      },
      "lineNbr": 813,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2020-02-03T12:49:37Z",
      "side": 1,
      "message": "In that case, perhaps we should assert that all the user\u0027s IO channels have been freed?",
      "parentUuid": "ff30e161_df92a98a",
      "range": {
        "startLine": 813,
        "startChar": 39,
        "endLine": 813,
        "endChar": 70
      },
      "revId": "47f32bc37cb71cdac488b70c983544478fe06f90",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1315cdd_55b6d405",
        "filename": "lib/ftl/ftl_core.c",
        "patchSetId": 5
      },
      "lineNbr": 813,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2020-02-05T14:12:29Z",
      "side": 1,
      "message": "I see that bdev logic is checking this during io_channel destroy.",
      "parentUuid": "c133ac6d_cf4ad162",
      "range": {
        "startLine": 813,
        "startChar": 39,
        "endLine": 813,
        "endChar": 70
      },
      "revId": "47f32bc37cb71cdac488b70c983544478fe06f90",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8dc7b20c_780b3863",
        "filename": "lib/ftl/ftl_core.c",
        "patchSetId": 5
      },
      "lineNbr": 2235,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2020-01-31T09:50:55Z",
      "side": 1,
      "message": "Again, I don\u0027t really see the point in doing this swap. Perhaps if we instead used ftl_io_write/ftl_io_read instead of ftl_rwb_fill/ftl_submit_read it\u0027d make some sense, as we could get rid of the lines 2246-2250 and rely on the submit functions doing putting the requests on the retry queues.",
      "range": {
        "startLine": 2233,
        "startChar": 0,
        "endLine": 2235,
        "endChar": 64
      },
      "revId": "47f32bc37cb71cdac488b70c983544478fe06f90",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed54ac0b_40d68dc9",
        "filename": "lib/ftl/ftl_core.c",
        "patchSetId": 5
      },
      "lineNbr": 2235,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2020-01-31T14:47:55Z",
      "side": 1,
      "message": "This local copy of IO queue prevents from adding new items to processed queue when IO callback issue another IO operation. Also ftl_io_write do not return value so we will lost stop condition  for retrying.",
      "parentUuid": "8dc7b20c_780b3863",
      "range": {
        "startLine": 2233,
        "startChar": 0,
        "endLine": 2235,
        "endChar": 64
      },
      "revId": "47f32bc37cb71cdac488b70c983544478fe06f90",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a068f1b_7de4593a",
        "filename": "lib/ftl/ftl_core.c",
        "patchSetId": 5
      },
      "lineNbr": 2235,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2020-02-03T12:49:37Z",
      "side": 1,
      "message": "I don\u0027t think this is correct. Let\u0027s say you have two writes on the retry queue. You\u0027re swapping the queues, so ioch-\u003eretry_queue becomes empty. You take the first request one and retry it, which completes it and causes an additional write to be scheduled by the user. This request cannot be completed though, so it\u0027s put on the ioch-\u003eretry_queue. Then the second request from the local retry_queue is retried, but it\u0027s not possible, so it\u0027s put back on the local retry_queue. Then the ioch-\u003eretry_queue and local retry_queue are swapped causing the user request to be removed from retry_queue, which should not happen.",
      "parentUuid": "ed54ac0b_40d68dc9",
      "range": {
        "startLine": 2233,
        "startChar": 0,
        "endLine": 2235,
        "endChar": 64
      },
      "revId": "47f32bc37cb71cdac488b70c983544478fe06f90",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}