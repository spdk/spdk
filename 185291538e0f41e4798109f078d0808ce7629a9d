{
  "comments": [
    {
      "key": {
        "uuid": "e0378205_9cace2f5",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 1140,
      "author": {
        "id": 1011204
      },
      "writtenOn": "2019-07-15T09:04:20Z",
      "side": 1,
      "message": "This should work, how about moving line 959: g_resume_bdev_module \u003d module; after line 970 ?",
      "revId": "185291538e0f41e4798109f078d0808ce7629a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3de97e98_6b3e97a2",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 1140,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2019-07-16T07:00:15Z",
      "side": 1,
      "message": "Current behavior doesn\u0027t work. In fact, it\u0027s utterly broken. There\u0027s a github issue for it: https://github.com/spdk/spdk/issues/739 (\"SPDK subsystems don\u0027t handle initialization failures very well\").\n\nSome bdev modules expect their fini() callback to be fired even if that module failed to init, other modules don\u0027t expect that and crash on double free or something similar. It\u0027s a mess.\n\nI think this patch is good. Not even trying to cleanup after failed initialization is the best we can do. At least we won\u0027t crash. Although could we add a FIXME comment here?\n\ne.g. \"FIXME: Handling initialization failures is broken now, so we won\u0027t even try cleaning up after successfully initialized modules\"\n\nLater on we should actually do the same for spdk subsystem initialization.",
      "parentUuid": "e0378205_9cace2f5",
      "revId": "185291538e0f41e4798109f078d0808ce7629a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e5680a5_1c24cefe",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 1140,
      "author": {
        "id": 1011204
      },
      "writtenOn": "2019-07-16T07:08:31Z",
      "side": 1,
      "message": "if g_resume_bdev_module can\u0027t work with all the modules, we should remove the code.",
      "parentUuid": "3de97e98_6b3e97a2",
      "revId": "185291538e0f41e4798109f078d0808ce7629a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0eb7dd3f_a3701e52",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 1140,
      "author": {
        "id": 1015685
      },
      "writtenOn": "2019-07-16T07:17:49Z",
      "side": 1,
      "message": "There are two scenes. One sub-bdev module init() failed, g_resume_bdev_module is working fine.  Another all sub-bdev modules don\u0027t call init(), g_resume_bdev_module will be null and the same time it will lead to repeate all bdev fini()",
      "parentUuid": "2e5680a5_1c24cefe",
      "revId": "185291538e0f41e4798109f078d0808ce7629a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}