{
  "comments": [
    {
      "key": {
        "uuid": "53ed4d88_607c736b",
        "filename": "include/spdk/blob.h",
        "patchSetId": 5
      },
      "lineNbr": 193,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-07-03T18:08:49Z",
      "side": 1,
      "message": "Is just a multiple OK?  Meaning will sector size 1536 work?  I think it needs to be power of 2 multiple of the backing device sector size.\n\nI\u0027m wondering if there\u0027s a better name than \"sector\" to use here.  This is really a virtual sector size - i.e. the size of a blob\u0027s I/O unit.  Maybe io_unit_size would be better?\n\nOtherwise I think it will be confusing when blobstore sector size does not equal the backing device\u0027s sector size.",
      "revId": "1594bd4015405fe2ba7b8a67f49954bd7db3f5cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03e8731a_619d7489",
        "filename": "include/spdk/blob.h",
        "patchSetId": 5
      },
      "lineNbr": 195,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-07-03T18:08:49Z",
      "side": 1,
      "message": "I\u0027m wondering if the default should be the backing device\u0027s sector size.  That way logical volume stores will \"just work\" with QEMU as a boot device.  But then the default can\u0027t be set the same way.\n\nWhat if we just restricted this to *either* page size or the backing store size?  Then this variable can just be a boolean.  So by default we just use the backing store size.",
      "revId": "1594bd4015405fe2ba7b8a67f49954bd7db3f5cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31ca9fe4_1eacac7d",
        "filename": "include/spdk/blob.h",
        "patchSetId": 5
      },
      "lineNbr": 195,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-07-03T18:12:17Z",
      "side": 1,
      "message": "Thinking about this more - maybe defaulting to page_size is OK for this patch.  Next/future patch with lvol support could change the default.",
      "parentUuid": "03e8731a_619d7489",
      "revId": "1594bd4015405fe2ba7b8a67f49954bd7db3f5cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4aa42428_bf42865f",
        "filename": "include/spdk/blob.h",
        "patchSetId": 5
      },
      "lineNbr": 195,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-07-03T18:32:46Z",
      "side": 1,
      "message": "I vote that we don\u0027t make this configurable at all and always use the backing block device\u0027s sector size. The user can query the size using the new function you\u0027re adding below.\n\nYou\u0027ll still need to store the io_unit size in the blobstore metadata. On start up, if the io_unit size is 0, default it to 4k to remain backward compatible with existing blobstores. On new blobstores, set it to the backing block device\u0027s sector size.",
      "parentUuid": "31ca9fe4_1eacac7d",
      "revId": "1594bd4015405fe2ba7b8a67f49954bd7db3f5cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6259db30_ae5df7a7",
        "filename": "include/spdk/blob.h",
        "patchSetId": 5
      },
      "lineNbr": 330,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-07-03T18:32:46Z",
      "side": 1,
      "message": "I think we should call this the \"io_unit\" size",
      "revId": "1594bd4015405fe2ba7b8a67f49954bd7db3f5cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9902e106_cba966ea",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 5
      },
      "lineNbr": 3559,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-07-03T18:08:49Z",
      "side": 1,
      "message": "I think specifying sector_sz \u003d\u003d 0 should be an error.  Make the user specify a correct value.",
      "revId": "1594bd4015405fe2ba7b8a67f49954bd7db3f5cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}