{
  "comments": [
    {
      "key": {
        "uuid": "54294f32_66339e84",
        "filename": "lib/util/dif.c",
        "patchSetId": 1
      },
      "lineNbr": 726,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2019-06-24T01:14:03Z",
      "side": 1,
      "message": "had you thought about making data_len and int and check \u003e\u003d0 here to avoid an infinite loop if there\u0027s a bug elsewhere that causes data_len to be decremented too far?",
      "revId": "c3b94211f1102cd64e89ae2e78428a7f17cd2780",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "019cbe10_82e1c079",
        "filename": "lib/util/dif.c",
        "patchSetId": 1
      },
      "lineNbr": 726,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-06-24T01:44:28Z",
      "side": 1,
      "message": "Hi Paul, thanks for nice suggestion. Yes, I haven\u0027t do anything but that idea always sits in my head :-)\n\nbuf_len \u003d min(buf_len, data_len) and data_len -\u003d buf_len. and so there is not probable now. \n\nOf course I will do immediately if required but that idea affects all of DIF library and so I want to do all at once after completing these changes.",
      "parentUuid": "54294f32_66339e84",
      "revId": "c3b94211f1102cd64e89ae2e78428a7f17cd2780",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43c5dc91_ea1f5811",
        "filename": "lib/util/dif.c",
        "patchSetId": 1
      },
      "lineNbr": 726,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-06-24T01:50:50Z",
      "side": 1,
      "message": "using spdk_min avoids that type of error and most variables are unsigned now. So I think using signed is not critical. _dif_verify_split and _dif_generate_split have used spdk_min too.",
      "parentUuid": "019cbe10_82e1c079",
      "revId": "c3b94211f1102cd64e89ae2e78428a7f17cd2780",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}