{
  "comments": [
    {
      "key": {
        "uuid": "dd7b08e3_238bc184",
        "filename": "lib/bdev/raid/bdev_raid.c",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1011204
      },
      "writtenOn": "2019-07-30T09:02:34Z",
      "side": 1,
      "message": "You are describing the issue very clear in the commit message, instead of using a global variable here, can you try to move line 249: spdk_io_device_unregister(raid_bdev, NULL);\nin line 251:\nif (raid_bdev-\u003enum_base_bdevs_discovered \u003d\u003d 0) {\n    spdk_io_device_unregister(raid_bdev, NULL);\n}\n\nAnd you can use a callback here to call raid_bdev_cleanup() finally, I think it\u0027s more clear to me by this way.",
      "revId": "a0d73e0a1696a7603f3275ebc35199153f2d2627",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b983b8e9_9bd1c965",
        "filename": "lib/bdev/raid/bdev_raid.c",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1014536
      },
      "writtenOn": "2019-08-01T02:29:07Z",
      "side": 1,
      "message": "hi Changpeng,\n  sorry for response this late.\n  Could you please help to make it more clear, now these two lines are both running in callbacks.\none is raid_bdev_destroy_cb, another is spdk_bdev_destroy_cb.\nas I known, there are two methods to in queue messages:\none is cb_fn(cb_arg,rc), using raid_bdev_destruct_cb cb_fn; how to launch this cb_fn?\nIt brings up other issues. \nanother is spdk_thread_send_msg. raid_bdev_ut.c redefines spdk_thread_send_msg. that in raid_bdev.c using this leads conflicts. \n\nThanks.",
      "parentUuid": "dd7b08e3_238bc184",
      "revId": "a0d73e0a1696a7603f3275ebc35199153f2d2627",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4873807e_069cfc88",
        "filename": "lib/bdev/raid/bdev_raid.c",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1011204
      },
      "writtenOn": "2019-08-01T02:41:04Z",
      "side": 1,
      "message": "static unregister_cb(void *io_device) {\n    raid_bdev_cleanup(raid_bdev);\n}\n\nif (raid_bdev-\u003enum_base_bdevs_discovered \u003d\u003d 0) {\n    spdk_io_device_unregister(raid_bdev, unregister_cb);\n}\n\nCan you have a try to see the result, and what\u0027s the error from UT?",
      "parentUuid": "b983b8e9_9bd1c965",
      "revId": "a0d73e0a1696a7603f3275ebc35199153f2d2627",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5edcbfb1_c55f1958",
        "filename": "lib/bdev/raid/bdev_raid.c",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1014536
      },
      "writtenOn": "2019-08-01T03:01:33Z",
      "side": 1,
      "message": "edit:\n+static void  unregister_cb(void *ctxt)\n+{\n+\n+       struct raid_bdev *raid_bdev \u003d ctxt;\n+\n+       raid_bdev_cleanup(raid_bdev);\n+}\n+\n /*\n  * brief:\n  * raid_bdev_destruct is the destruct function table pointer for raid bdev\n@@ -228,6 +236,7 @@ raid_bdev_destruct(void *ctxt)\n        SPDK_DEBUGLOG(SPDK_LOG_BDEV_RAID, \"raid_bdev_destruct\\n\");\n\n        raid_bdev-\u003edestruct_called \u003d true;\n+\n        for (uint16_t i \u003d 0; i \u003c raid_bdev-\u003enum_base_bdevs; i++) {\n                /*\n                 * Close all base bdev descriptors for which call has come from below\n@@ -246,12 +255,10 @@ raid_bdev_destruct(void *ctxt)\n                TAILQ_INSERT_TAIL(\u0026g_raid_bdev_offline_list, raid_bdev, state_link);\n        }\n\n-       spdk_io_device_unregister(raid_bdev, NULL);\n-\n        if (raid_bdev-\u003enum_base_bdevs_discovered \u003d\u003d 0) {\n                /* Free raid_bdev when there are no base bdevs left */\n                SPDK_DEBUGLOG(SPDK_LOG_BDEV_RAID, \"raid bdev base bdevs is 0, going to free all in destruct\\n\");\n-               raid_bdev_cleanup(raid_bdev);\n+               spdk_io_device_unregister(raid_bdev, unregister_cb);\n        }\n\ntest result/unittest:\nSuite: raid\n  Test: test_construct_raid ...passed\n  Test: test_destroy_raid ...\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\u003d\u003d424732\u003d\u003dERROR: AddressSanitizer: heap-use-after-free on address 0x604000000518 at pc 0x00000040b56e bp 0x7fff5213cb40 sp 0x7fff5213cb30\nREAD of size 8 at 0x604000000518 thread T0\n    #0 0x40b56d in verify_raid_bdev /home/vagrant/spdk_repo/spdk/test/unit/lib/bdev/bdev_raid.c/bdev_raid_ut.c:908\n    #1 0x40ba74 in test_destroy_raid /home/vagrant/spdk_repo/spdk/test/unit/lib/bdev/bdev_raid.c/bdev_raid_ut.c:1153\n    #2 0x7f42fbfb848a  (/lib64/libcunit.so.1+0x448a)\n    #3 0x7f42fbfb8720  (/lib64/libcunit.so.1+0x4720)\n    #4 0x7f42fbfb8b35 in CU_run_all_tests (/lib64/libcunit.so.1+0x4b35)\n    #5 0x401bc1 in main /home/vagrant/spdk_repo/spdk/test/unit/lib/bdev/bdev_raid.c/bdev_raid_ut.c:2453\n    #6 0x7f42fb15a11a in __libc_start_main (/lib64/libc.so.6+0x2311a)\n    #7 0x401cf9 in _start (/home/vagrant/spdk_repo/spdk/test/unit/lib/bdev/bdev_raid.c/bdev_raid_ut+0x401cf9)\n\n0x604000000518 is located 8 bytes inside of 48-byte region [0x604000000510,0x604000000540)\nfreed by thread T0 here:\n    #0 0x7f42fc2b1c40 in __interceptor_free (/lib64/libasan.so.5+0xeec40)\n    #1 0x4090ff in destroy_raid_bdev_done /home/vagrant/spdk_repo/spdk/lib/bdev/raid/bdev_raid_rpc.c:357\n\npreviously allocated by thread T0 here:\n    #0 0x7f42fc2b2210 in calloc (/lib64/libasan.so.5+0xef210)\n    #1 0x404695 in raid_bdev_config_add /home/vagrant/spdk_repo/spdk/lib/bdev/raid/bdev_raid.c:1151\n\nSUMMARY: AddressSanitizer: heap-use-after-free /home/vagrant/spdk_repo/spdk/test/unit/lib/bdev/bdev_raid.c/bdev_raid_ut.c:908 in verify_raid_bdev\nShadow bytes around the buggy address:\n  0x0c087fff8050: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 00\n  0x0c087fff8060: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 00\n  0x0c087fff8070: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 00\n  0x0c087fff8080: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 04\n  0x0c087fff8090: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 00\n\u003d\u003e0x0c087fff80a0: fa fa fd[fd]fd fd fd fd fa fa 00 00 00 00 00 00\n  0x0c087fff80b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c087fff80c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c087fff80d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c087fff80e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c087fff80f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07\n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb",
      "parentUuid": "4873807e_069cfc88",
      "revId": "a0d73e0a1696a7603f3275ebc35199153f2d2627",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}