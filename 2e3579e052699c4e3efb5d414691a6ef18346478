{
  "comments": [
    {
      "key": {
        "uuid": "01f21de8_cdbfcd6d",
        "filename": "lib/bdev/aio/bdev_aio.c",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2018-10-25T05:49:37Z",
      "side": 1,
      "message": "By the way, there is API bdev_aio_flush() that supplied for the fsync() operation.",
      "range": {
        "startLine": 84,
        "startChar": 44,
        "endLine": 84,
        "endChar": 53
      },
      "revId": "2e3579e052699c4e3efb5d414691a6ef18346478",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7407ca2_d3d67440",
        "filename": "lib/bdev/aio/bdev_aio.c",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-10-25T23:33:37Z",
      "side": 1,
      "message": "This was right previously and there is no bug. There\u0027s two scenarios to consider when reading the documentation for these.\n\nThe first is that the user is writing to a file, in which case when data is written there may be associated metadata. O_SYNC will do two things in this case. It will guarantee that any filesystem metadata is written prior to this operating completing. Second, it will also send a flush command and wait for it to complete prior to returning. SPDK never maps files though, so none of this applies.\n\nThe second is that the user is writing to a raw block device. In this case, there is no associated metadata, so that part can be ignored. Therefore, all this does is also issue a flush after the data completes. However, the SPDK API is able to report whether the drive is performing write caching and requires explicit flushing already. So returning once the data finishes the DMA to the drive, regardless of whether the driver is doing internal caching, is the right behavior.",
      "parentUuid": "01f21de8_cdbfcd6d",
      "range": {
        "startLine": 84,
        "startChar": 44,
        "endLine": 84,
        "endChar": 53
      },
      "revId": "2e3579e052699c4e3efb5d414691a6ef18346478",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8f83c37_8b5bf65a",
        "filename": "lib/bdev/aio/bdev_aio.c",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2018-10-25T23:48:52Z",
      "side": 1,
      "message": "Thanks for this explanation. It is clear now. Thanks.",
      "parentUuid": "f7407ca2_d3d67440",
      "range": {
        "startLine": 84,
        "startChar": 44,
        "endLine": 84,
        "endChar": 53
      },
      "revId": "2e3579e052699c4e3efb5d414691a6ef18346478",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ca96082_3a3428be",
        "filename": "lib/bdev/aio/bdev_aio.c",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2018-10-26T00:03:59Z",
      "side": 1,
      "message": "Also this means that user needs to call the \"flush\" API to make sure the data is really written to the drive if there is internal caching there?",
      "parentUuid": "f7407ca2_d3d67440",
      "range": {
        "startLine": 84,
        "startChar": 44,
        "endLine": 84,
        "endChar": 53
      },
      "revId": "2e3579e052699c4e3efb5d414691a6ef18346478",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd4bc450_dac7ec5e",
        "filename": "lib/bdev/aio/bdev_aio.c",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2018-10-26T03:26:21Z",
      "side": 1,
      "message": "It seems in our latest Qemu and vhost, the Flush command is disabled and never sent down to SPDK bdev stack. So this behavior relies on how the Disk operates after data has been written to the RAM on Disk. Either flush by the Disk itself, or the data is dropped? If we add the O_SYNC flag, this could guarantee the data if there is no explicit Flush received? Any more suggestion? Thanks.",
      "parentUuid": "2ca96082_3a3428be",
      "range": {
        "startLine": 84,
        "startChar": 44,
        "endLine": 84,
        "endChar": 53
      },
      "revId": "2e3579e052699c4e3efb5d414691a6ef18346478",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}