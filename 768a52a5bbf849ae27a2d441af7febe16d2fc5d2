{
  "comments": [
    {
      "key": {
        "uuid": "d7830c28_f47a8297",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 10
      },
      "lineNbr": 140,
      "author": {
        "id": 1015365
      },
      "writtenOn": "2018-11-06T20:17:56Z",
      "side": 1,
      "message": "Paul, quick thought - is it possible to implement this if one does not want to take the dpdk route? Would it be possible to have the interface at this point generic or abstracted so to enable one to directly offload to a different device from here? Is it possible to keep the dependency on dpdk minimal at this point to make this more generally usable with say other devices that come with their own eal etc. (Was looking at the Oracle ORAENV and no telling when that approach could be useful for others as well). So maybe if there was a general abstraction for the functions before branching into dpdk, maybe it would be possible for one to branch off from here into a different device env if needed. I think that approach would surely help us and make this really generic. Wanted to hear your thoughts while I chew on these calls a bit more.",
      "revId": "768a52a5bbf849ae27a2d441af7febe16d2fc5d2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d4ba8f4_6c8731d0",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 10
      },
      "lineNbr": 140,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2018-11-07T16:34:45Z",
      "side": 1,
      "message": "Hi Anand,\n\nThanks for the comment! So we\u0027re doing here what we did in crypto - rely on DPDK to provide a generic abstraction for the interfaces (CryptoDev and CompressDev) so that SPDK only has one interface and can take advantage of multiple different SW and HW solutions for either crypto or compression with little effort. It sounds like you are suggesting essentially moving that layer into SPDK and have DPDK and its set of abstraction as one option. I think in general a better course of action for wanting to add a new HW or SW crypto or compression engine would be to write a DPDK driver for it and then we (a) take advantage of all the goodness and testing in that open source community and (b) minimize the effort for SPDK to adopt new drivers, offload engines, etc. \n\nHere\u0027s the compressdev info: https://doc.dpdk.org/guides/prog_guide/compressdev.html \nand here\u0027s their current list of drivers that we can get for very little cost to this vbdev module per driver: https://doc.dpdk.org/guides/compressdevs/index.html",
      "parentUuid": "d7830c28_f47a8297",
      "revId": "768a52a5bbf849ae27a2d441af7febe16d2fc5d2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}