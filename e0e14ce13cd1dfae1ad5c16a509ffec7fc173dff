{
  "comments": [
    {
      "key": {
        "uuid": "c0ed90ba_60c7e00a",
        "filename": "include/spdk/bdev.h",
        "patchSetId": 14
      },
      "lineNbr": 54,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-10-23T19:26:56Z",
      "side": 1,
      "message": "Does this need to be in the public header?",
      "revId": "e0e14ce13cd1dfae1ad5c16a509ffec7fc173dff",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d17d488_d1fee2eb",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 14
      },
      "lineNbr": 426,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-10-23T19:26:56Z",
      "side": 1,
      "message": "I think you want 1ULL instead of 1U.  Adding the \"U\" by itself doesn\u0027t really help much - it doesn\u0027t extend the size of the \"1\" literal any more than if the U was left off.\n\nOr just change it to 1 \u003c\u003c bdev_io-\u003einternal.alignment, but put this assert before it:\nassert(bdev_io-\u003einternal.alignment \u003c 32);\n\nAnd then make alignment a uint32_t.",
      "revId": "e0e14ce13cd1dfae1ad5c16a509ffec7fc173dff",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "844f1f82_941dfb2d",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 14
      },
      "lineNbr": 472,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-10-23T19:26:56Z",
      "side": 1,
      "message": "let\u0027s make the changes we talked about earlier in our 1x1 - put the alignment as a number of bits in the bdev itself, so that the module using it (i.e. aio) doesn\u0027t have to pass the alignment every time to io_get_buf() - then spdk_bdev_register can also take care of any extra split requirements\n\nwe need that change in this patch, so that we aren\u0027t switching between passing number of bits and number of bytes in these functions",
      "revId": "e0e14ce13cd1dfae1ad5c16a509ffec7fc173dff",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}