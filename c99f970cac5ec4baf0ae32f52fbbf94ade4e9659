{
  "comments": [
    {
      "key": {
        "uuid": "20b4f04e_617be5a2",
        "filename": "include/spdk/bdev.h",
        "patchSetId": 41
      },
      "lineNbr": 127,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-04-24T17:00:53Z",
      "side": 1,
      "message": "Right now you return a pointer to the stat object that you allocated internally. The pointer is only valid within the context of this callback. I think it might be better to have the user pass in the spdk_bdev_io_stat structure, this call then fills it out and passes it back in the callback. Then the memory is owned by the caller.\n\nI\u0027m open to other opinions though, and I don\u0027t necessarily think we have to do this for the 18.04 release.",
      "revId": "c99f970cac5ec4baf0ae32f52fbbf94ade4e9659",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "787a7b3f_e8d7c9c9",
        "filename": "include/spdk/bdev.h",
        "patchSetId": 41
      },
      "lineNbr": 127,
      "author": {
        "id": 1012701
      },
      "writtenOn": "2018-04-25T00:31:46Z",
      "side": 1,
      "message": "OK, got it. You are right.",
      "parentUuid": "20b4f04e_617be5a2",
      "revId": "c99f970cac5ec4baf0ae32f52fbbf94ade4e9659",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "999cbe3f_218b9d93",
        "filename": "lib/bdev/rpc/bdev_rpc.c",
        "patchSetId": 41
      },
      "lineNbr": 95,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-04-24T17:00:53Z",
      "side": 1,
      "message": "This event is not necessary (plus the bdev layer doesn\u0027t directly depend on the event library). This callback will always be called on the same thread that originally called spdk_bdev_get_device_stat, which means two of these callbacks cannot be executing at the same time.",
      "revId": "c99f970cac5ec4baf0ae32f52fbbf94ade4e9659",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4cefb7cc_b02e5128",
        "filename": "lib/bdev/rpc/bdev_rpc.c",
        "patchSetId": 41
      },
      "lineNbr": 95,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-04-24T22:59:34Z",
      "side": 1,
      "message": "Hi Ben,\n\nAre you saying spdk_thread_send_msg() can be used here instead? Or previous Gang\u0027s proposal is better?\n\nYou will know that but this event call is to defer all callback calls until all spdk_bdev_get_device_stat are called to detect final call of callback.",
      "parentUuid": "999cbe3f_218b9d93",
      "revId": "c99f970cac5ec4baf0ae32f52fbbf94ade4e9659",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9bfa25d_4383178c",
        "filename": "lib/bdev/rpc/bdev_rpc.c",
        "patchSetId": 41
      },
      "lineNbr": 95,
      "author": {
        "id": 1012701
      },
      "writtenOn": "2018-04-25T00:16:30Z",
      "side": 1,
      "message": "Hi Ben,\n\nAs Shuhei mentioned, this is used to defer decreasing the ctx-\u003ebdev_count. If we decrease bdev_count before next bdev_count++, it will close the RPC request and cause core\ndump. Hence I think Shuhei\u0027s suggestion here is well.\n\nOr we can remain ctx-\u003ebdev_count \u003d bdev_num, and decrease the ctx_bdev_count in callback, that can get rid of spdk_event_allocate.\n\nThanks\nYanbo",
      "parentUuid": "999cbe3f_218b9d93",
      "revId": "c99f970cac5ec4baf0ae32f52fbbf94ade4e9659",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f3b3229_714c2d69",
        "filename": "lib/bdev/rpc/bdev_rpc.c",
        "patchSetId": 41
      },
      "lineNbr": 181,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2018-04-24T04:55:09Z",
      "side": 1,
      "message": "is this the reason why we defer iostat_dec_cnt()?\nCould we use additional local variable here instead of ctx-\u003ebdev_count, and then call iostat_dec_cnt inline within iostat_cb?",
      "range": {
        "startLine": 176,
        "startChar": 1,
        "endLine": 181,
        "endChar": 0
      },
      "revId": "c99f970cac5ec4baf0ae32f52fbbf94ade4e9659",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d364378_926b1e17",
        "filename": "lib/bdev/rpc/bdev_rpc.c",
        "patchSetId": 41
      },
      "lineNbr": 181,
      "author": {
        "id": 1012701
      },
      "writtenOn": "2018-04-24T06:12:53Z",
      "side": 1,
      "message": "If we don\u0027t have any bdev required, we can close the request directly.\n\nHence line 176-180 is used to check this situation.\n\nThanks\nYanbo",
      "parentUuid": "2f3b3229_714c2d69",
      "range": {
        "startLine": 176,
        "startChar": 1,
        "endLine": 181,
        "endChar": 0
      },
      "revId": "c99f970cac5ec4baf0ae32f52fbbf94ade4e9659",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dd1c629_175dbcbf",
        "filename": "lib/bdev/rpc/bdev_rpc.c",
        "patchSetId": 41
      },
      "lineNbr": 181,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2018-04-24T08:38:39Z",
      "side": 1,
      "message": "Ahh, I missed a comment on a previous review:\n\"In some cases, spdk_get_device_iostat_cb will execute \"--bdev-\u003ecount\" before the next ctx-\u003ebdev_count++.  \"\n\nEverything is fine then. Maybe we could set the bdev_count to 1 initially, then decrement it after the iteration. But it\u0027s not crucial for now. \n\nA short comment explaining this behavior would be helpful, though.",
      "parentUuid": "5d364378_926b1e17",
      "range": {
        "startLine": 176,
        "startChar": 1,
        "endLine": 181,
        "endChar": 0
      },
      "revId": "c99f970cac5ec4baf0ae32f52fbbf94ade4e9659",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}