{
  "comments": [
    {
      "key": {
        "uuid": "58cbed5d_da705b21",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 3
      },
      "lineNbr": 1565,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-08-27T02:07:55Z",
      "side": 1,
      "message": "Please insert a line after variable definition.",
      "range": {
        "startLine": 1563,
        "startChar": 0,
        "endLine": 1565,
        "endChar": 0
      },
      "revId": "be874bd9828086a00608599b8ac3a31b7e55d9a6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6452551_10d6a211",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 3
      },
      "lineNbr": 1565,
      "author": {
        "id": 1016482
      },
      "writtenOn": "2019-08-27T09:01:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "58cbed5d_da705b21",
      "range": {
        "startLine": 1563,
        "startChar": 0,
        "endLine": 1565,
        "endChar": 0
      },
      "revId": "be874bd9828086a00608599b8ac3a31b7e55d9a6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae80acf2_bd40ecf2",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 3
      },
      "lineNbr": 1581,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-08-27T02:07:55Z",
      "side": 1,
      "message": "Could we simplify as follows?\n\nremaining_io_buffer_length \u003d spdk_min(remaining_length, rtransport-\u003etransport.opts.io_unit_size);\nrdma_req-\u003ereq.iov[iov_count].iov_len \u003d remaining_io_buffer_length;\nremaining_io_buffer_length -\u003d offset;\n++rdma_req-\u003ereq.iovcnt;\n\nThen can we remove io_buffer_length?",
      "range": {
        "startLine": 1575,
        "startChar": 0,
        "endLine": 1581,
        "endChar": 0
      },
      "revId": "be874bd9828086a00608599b8ac3a31b7e55d9a6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ff2d3d1_1eec40c6",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 3
      },
      "lineNbr": 1581,
      "author": {
        "id": 1016482
      },
      "writtenOn": "2019-08-27T09:01:27Z",
      "side": 1,
      "message": "Thanks, good suggestion",
      "parentUuid": "ae80acf2_bd40ecf2",
      "range": {
        "startLine": 1575,
        "startChar": 0,
        "endLine": 1581,
        "endChar": 0
      },
      "revId": "be874bd9828086a00608599b8ac3a31b7e55d9a6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8fe3a4b_bb57f8c5",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 3
      },
      "lineNbr": 1609,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-08-26T10:34:26Z",
      "side": 1,
      "message": "Will you add UT especially for this part? Performance is very important but DIF is for data protection. I hope you may find any help from UT for DIF library",
      "revId": "be874bd9828086a00608599b8ac3a31b7e55d9a6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7473063_88450f27",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 3
      },
      "lineNbr": 1609,
      "author": {
        "id": 1016482
      },
      "writtenOn": "2019-08-26T12:10:58Z",
      "side": 1,
      "message": "This part is a common case of SGL parsing, the condition tracks the end of the data block. It is covered by several tests added in https://review.gerrithub.io/c/spdk/spdk/+/465253",
      "parentUuid": "a8fe3a4b_bb57f8c5",
      "revId": "be874bd9828086a00608599b8ac3a31b7e55d9a6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e25ba96a_27451181",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 3
      },
      "lineNbr": 1614,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-08-27T02:07:55Z",
      "side": 1,
      "message": "should be remaining_io_buffer_length -\u003d spdk_min(remaining_io_buffer_length, md_size) ?\n\nIf not, remaining_io_buffer_length never become zero when remaining_io_buffer_length \u003c md_size.",
      "range": {
        "startLine": 1612,
        "startChar": 4,
        "endLine": 1614,
        "endChar": 5
      },
      "revId": "be874bd9828086a00608599b8ac3a31b7e55d9a6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a31f422_5ec4fc94",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 3
      },
      "lineNbr": 1614,
      "author": {
        "id": 1016482
      },
      "writtenOn": "2019-08-27T09:01:27Z",
      "side": 1,
      "message": "This condition has been added to catch the case when rtransport-\u003etransport.opts.io_unit_size \u003d\u003d data_block_size, so we allocate 2 io_buffer - the 1st holds data block and the 2nd holds metadata (only 8 bytes). In that case remaining_io_buffer_length might already be 0 as it was decremented on line 1604",
      "parentUuid": "e25ba96a_27451181",
      "range": {
        "startLine": 1612,
        "startChar": 4,
        "endLine": 1614,
        "endChar": 5
      },
      "revId": "be874bd9828086a00608599b8ac3a31b7e55d9a6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02fd3032_f7af2526",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 3
      },
      "lineNbr": 1614,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-08-27T09:13:48Z",
      "side": 1,
      "message": "Thank you Alexey.\n\nMy intention was that if io_unit_size (buffer_size) is 516, data_block_size is 512, and md_size is 8, then the first 4 bytes of metadata is in the first buffer and the last 4 bytes of metadata is in the second buffer. In this case, remaining_io_buffer_length is still 4. Hence remaining_io_buffer_length must be zeroed at the line 1612 to 1614. Hence I proposed remaining_io_buffer_length -\u003d spdk_min(remaining_io_buffer_length, md_size).\n\nSplitting metadata into two buffers is unlikely if we set io_unit_size reasonably. However we should not expect such assumption.\n\nI believe this change will be no harm and fix the split case.",
      "parentUuid": "3a31f422_5ec4fc94",
      "range": {
        "startLine": 1612,
        "startChar": 4,
        "endLine": 1614,
        "endChar": 5
      },
      "revId": "be874bd9828086a00608599b8ac3a31b7e55d9a6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34fecaab_b454f1a6",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 3
      },
      "lineNbr": 2145,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-08-27T04:17:32Z",
      "side": 1,
      "message": "Will you move the definition of num_blocks to the top of this function? Then you can share num_blocks in the next two patch",
      "revId": "be874bd9828086a00608599b8ac3a31b7e55d9a6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36ee83bd_567fb1be",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 3
      },
      "lineNbr": 2145,
      "author": {
        "id": 1016482
      },
      "writtenOn": "2019-08-27T09:01:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "34fecaab_b454f1a6",
      "revId": "be874bd9828086a00608599b8ac3a31b7e55d9a6",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}