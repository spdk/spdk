{
  "comments": [
    {
      "key": {
        "uuid": "10acf423_5ffea284",
        "filename": "test/common/lib/test_env.c",
        "patchSetId": 52
      },
      "lineNbr": 303,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-01-14T22:33:02Z",
      "side": 1,
      "message": "The changes in this file shouldn\u0027t be needed, now that FTL doesn\u0027t create its own threads?\n\nBut I\u0027d be OK adding this.  I just think it should be a separate patch, before any FTL UT code that uses it.",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7346284f_a8b9eab8",
        "filename": "test/common/lib/test_env.c",
        "patchSetId": 52
      },
      "lineNbr": 303,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2019-01-15T15:18:46Z",
      "side": 1,
      "message": "FTL RWB (write buffer) unit tests requires this change. We are spawning several threads to stress write buffer and because of fact that implementation of RWB is made on spdk_ring we need that spdk_ring mock will be thread safe (please look at test_rwb_parallel in ftl_rwb_ut.c). I will make separate patch for this changes as you suggested.",
      "parentUuid": "10acf423_5ffea284",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e42c55b1_b0aa23c1",
        "filename": "test/spdk_cunit.h",
        "patchSetId": 52
      },
      "lineNbr": 72,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-01-14T22:33:02Z",
      "side": 1,
      "message": "I\u0027d prefer not adding this.  I see how some of the FTL unit tests are using this - but other modules in SPDK don\u0027t try to test invalid inputs like this - meaning we don\u0027t check that an assert fires if an invalid input is provided.\n\nJust focus on testing inputs that could cause errors or corner cases, but not ones that we say are completely invalid.\n\nSame for SPDK_EXPECT_ASSERT_FAIL above.\n\nMaybe this means we need to scrub functions that are doing asserts.  I haven\u0027t looked at all of them yet.",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b073a33b_60bd940d",
        "filename": "test/spdk_cunit.h",
        "patchSetId": 52
      },
      "lineNbr": 72,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2019-01-15T15:18:46Z",
      "side": 1,
      "message": "This was added because some of unit tests libraries like cmocka has such features: https://api.cmocka.org/group__cmocka__mock__assert.html (originally our unit test were based on that lib). I wouldn\u0027t insist that this feature is critical for us but if we have this already implemented maybe we should consider to keep it. This could be potentially useful in some cases where assertion is the only check that function could made and we want to check such corner cases in unit tests?",
      "parentUuid": "e42c55b1_b0aa23c1",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5eab046_91025158",
        "filename": "test/spdk_cunit.h",
        "patchSetId": 52
      },
      "lineNbr": 83,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-01-14T22:33:02Z",
      "side": 1,
      "message": "I\u0027d prefer to just do the memcmp inline in the two places in ftl_rwb_ut.c that need this.  We have other places in SPDK unit tests that do memory comparisons - they just do the memcmp inline in the ASSERT.\n\nCan you explain why the memcmps in ftl_rwb_ut.c need to be FATAL - meaning abort immediately?  Typically we do that to avoid dereferencing null pointers but that doesn\u0027t seem to be the case here.",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18bc6289_6f5dc52a",
        "filename": "test/spdk_cunit.h",
        "patchSetId": 52
      },
      "lineNbr": 83,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2019-01-15T15:18:46Z",
      "side": 1,
      "message": "Ok, I will remove those macros. I don\u0027t think that there is some special need that those memcmps need to be fatal.",
      "parentUuid": "d5eab046_91025158",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8275bb41_2d4c4101",
        "filename": "test/unit/lib/ftl/common/utils.c",
        "patchSetId": 52
      },
      "lineNbr": 44,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-01-14T22:33:02Z",
      "side": 1,
      "message": "in the unit tests, we should assume that calloc always succeeds - the static analyzers will complain if we don\u0027t check the return value, so just do an SPDK_CU_ASSERT_FATAL(dev !\u003d NULL).  It makes the unit test code a lot simpler.\n\nApplies to rest of this file as well.",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cdfdc93_e10f2d01",
        "filename": "test/unit/lib/ftl/common/utils.c",
        "patchSetId": 52
      },
      "lineNbr": 44,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2019-01-16T15:22:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8275bb41_2d4c4101",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c64805f_9444be0b",
        "filename": "test/unit/lib/ftl/common/utils.c",
        "patchSetId": 52
      },
      "lineNbr": 87,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-01-14T22:33:02Z",
      "side": 1,
      "message": "if id \u003e\u003d dev-\u003egeo.num_chk, doesn\u0027t that mean the unit test is bad?  if so, we should just SPDK_CU_ASSERT_FATAL instead of returning NULL",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7418a92_57015a49",
        "filename": "test/unit/lib/ftl/common/utils.c",
        "patchSetId": 52
      },
      "lineNbr": 87,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2019-01-16T15:22:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c64805f_9444be0b",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64496c9a_4c569a47",
        "filename": "test/unit/lib/ftl/common/utils.c",
        "patchSetId": 52
      },
      "lineNbr": 128,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-01-14T22:33:02Z",
      "side": 1,
      "message": "SPDK_CU_ASSERT_FATAL instead, if dev \u003d\u003d NULL?",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f300c6b_dccd8fcf",
        "filename": "test/unit/lib/ftl/common/utils.c",
        "patchSetId": 52
      },
      "lineNbr": 128,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2019-01-16T15:22:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "64496c9a_4c569a47",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbfc7568_e138feff",
        "filename": "test/unit/lib/ftl/common/utils.c",
        "patchSetId": 52
      },
      "lineNbr": 140,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-01-14T22:33:02Z",
      "side": 1,
      "message": "same here",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1831abfe_5ec50b42",
        "filename": "test/unit/lib/ftl/common/utils.c",
        "patchSetId": 52
      },
      "lineNbr": 140,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2019-01-16T15:22:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dbfc7568_e138feff",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5cae7bc5_ef7a0f83",
        "filename": "test/unit/lib/ftl/ftl_band.c/Makefile",
        "patchSetId": 52
      },
      "lineNbr": 39,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-01-14T22:33:02Z",
      "side": 1,
      "message": "this line can be removed",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "281f519c_8527f6ef",
        "filename": "test/unit/lib/ftl/ftl_band.c/Makefile",
        "patchSetId": 52
      },
      "lineNbr": 39,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2019-01-16T15:22:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5cae7bc5_ef7a0f83",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ec42099_8777ba5f",
        "filename": "test/unit/lib/ftl/ftl_band.c/ftl_band_ut.c",
        "patchSetId": 52
      },
      "lineNbr": 39,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-01-14T22:33:02Z",
      "side": 1,
      "message": "this line can be removed",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e939e0a_e475e179",
        "filename": "test/unit/lib/ftl/ftl_band.c/ftl_band_ut.c",
        "patchSetId": 52
      },
      "lineNbr": 39,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2019-01-16T15:22:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ec42099_8777ba5f",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5362aabe_dc3d2a77",
        "filename": "test/unit/lib/ftl/ftl_band.c/ftl_band_ut.c",
        "patchSetId": 52
      },
      "lineNbr": 156,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-01-14T22:33:02Z",
      "side": 1,
      "message": "variable declarations should be at beginning of function",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb38ddb7_a0a9a97a",
        "filename": "test/unit/lib/ftl/ftl_band.c/ftl_band_ut.c",
        "patchSetId": 52
      },
      "lineNbr": 156,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2019-01-16T15:22:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5362aabe_dc3d2a77",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7bc11c87_0554ff37",
        "filename": "test/unit/lib/ftl/ftl_band.c/ftl_band_ut.c",
        "patchSetId": 52
      },
      "lineNbr": 170,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-01-14T22:33:02Z",
      "side": 1,
      "message": "newline after declarations are done",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17d26ad6_606482ab",
        "filename": "test/unit/lib/ftl/ftl_band.c/ftl_band_ut.c",
        "patchSetId": 52
      },
      "lineNbr": 170,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2019-01-16T15:22:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7bc11c87_0554ff37",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a363cd5f_f004c7a5",
        "filename": "test/unit/lib/ftl/ftl_band.c/ftl_band_ut.c",
        "patchSetId": 52
      },
      "lineNbr": 180,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-01-14T22:33:02Z",
      "side": 1,
      "message": "this is ok for now - but we should change ftl_ppa_flatten_punit to return a uint32_t instead of unsigned int - that fits with other SPDK modules",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "456b0e90_a114ae78",
        "filename": "test/unit/lib/ftl/ftl_band.c/ftl_band_ut.c",
        "patchSetId": 52
      },
      "lineNbr": 180,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2019-01-16T15:22:40Z",
      "side": 1,
      "message": "ok, so I will add TODO fot this",
      "parentUuid": "a363cd5f_f004c7a5",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e11f6044_4415e2a6",
        "filename": "test/unit/lib/ftl/ftl_band.c/ftl_band_ut.c",
        "patchSetId": 52
      },
      "lineNbr": 183,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-01-14T22:33:02Z",
      "side": 1,
      "message": "CU_ASSERT?",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1fc1521_5b99d88d",
        "filename": "test/unit/lib/ftl/ftl_band.c/ftl_band_ut.c",
        "patchSetId": 52
      },
      "lineNbr": 183,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2019-01-16T15:22:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e11f6044_4415e2a6",
      "revId": "cb73aa1399cf2f2f20e164559ede4c386166e0a1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}