{
  "comments": [
    {
      "key": {
        "uuid": "c4875a22_b6efb514",
        "filename": "lib/nvmf/ctrlr.c",
        "patchSetId": 18
      },
      "lineNbr": 1377,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-03-29T06:18:41Z",
      "side": 1,
      "message": "what we should do if offset + length \u003e avail_log_len ?",
      "range": {
        "startLine": 1377,
        "startChar": 5,
        "endLine": 1377,
        "endChar": 28
      },
      "revId": "9e89170def7ce9a3ec3b971f4c47a62841390b38",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef2c55e3_b5db01cc",
        "filename": "lib/nvmf/ctrlr.c",
        "patchSetId": 18
      },
      "lineNbr": 1377,
      "author": {
        "id": 1011204
      },
      "writtenOn": "2019-03-29T06:56:02Z",
      "side": 1,
      "message": "Thanks Shuhei, I think copy_len from line 1393-1399 covered the case, if offset is in middle of one log page, spdk_min(next_pos - offset, length) will do the right calculation.",
      "parentUuid": "c4875a22_b6efb514",
      "range": {
        "startLine": 1377,
        "startChar": 5,
        "endLine": 1377,
        "endChar": 28
      },
      "revId": "9e89170def7ce9a3ec3b971f4c47a62841390b38",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c903509_849ce545",
        "filename": "lib/nvmf/ctrlr.c",
        "patchSetId": 18
      },
      "lineNbr": 1377,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-03-29T07:32:36Z",
      "side": 1,
      "message": "Thank you, Changpeng. Now I understood the logic by comparing the source code and the NVMe specification.",
      "parentUuid": "ef2c55e3_b5db01cc",
      "range": {
        "startLine": 1377,
        "startChar": 5,
        "endLine": 1377,
        "endChar": 28
      },
      "revId": "9e89170def7ce9a3ec3b971f4c47a62841390b38",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}