{
  "comments": [
    {
      "key": {
        "uuid": "a27b2a0f_8a9ae91c",
        "filename": "lib/nvme/nvme_qpair.c",
        "patchSetId": 3
      },
      "lineNbr": 450,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-12-04T20:40:54Z",
      "side": 1,
      "message": "is it OK to remove this?  if we\u0027re replacing transport_qp_is_failed with the nvme qpair state instead, then I would think we\u0027d want a check like if (!nvme_qpair_state_equals(qpair, NVME_QPAIR_CONNECTED)) to replace the old one\n\nif there\u0027s some other reason it\u0027s ok to remove this, then we should remove that in a separate patch and explain why it\u0027s ok to remove it",
      "revId": "c6520bd03eb23a166e57847a8403e40f552db0a5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55732cec_eb910760",
        "filename": "lib/nvme/nvme_qpair.c",
        "patchSetId": 3
      },
      "lineNbr": 450,
      "author": {
        "id": 1011223
      },
      "writtenOn": "2019-12-05T15:37:01Z",
      "side": 1,
      "message": "Yeah, it is OK to remove it. The check is actually redundant because nvme_qpair_check_enabled performs the exact same check against the qpair state. That is called on the next line. I agree that this looks confusing though. I will update the commit message to be more explicit about why the transport_qp_is_failed object was redundant.",
      "parentUuid": "a27b2a0f_8a9ae91c",
      "revId": "c6520bd03eb23a166e57847a8403e40f552db0a5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2559ecb9_6b1afa42",
        "filename": "lib/nvme/nvme_qpair.c",
        "patchSetId": 3
      },
      "lineNbr": 706,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-12-04T20:40:54Z",
      "side": 1,
      "message": "same as above",
      "revId": "c6520bd03eb23a166e57847a8403e40f552db0a5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ac6b780_e393bd0d",
        "filename": "lib/nvme/nvme_qpair.c",
        "patchSetId": 3
      },
      "lineNbr": 706,
      "author": {
        "id": 1011223
      },
      "writtenOn": "2019-12-05T15:37:01Z",
      "side": 1,
      "message": "This is another example where this check was just redundant. The same check is being performed on the qpair state later on.",
      "parentUuid": "2559ecb9_6b1afa42",
      "revId": "c6520bd03eb23a166e57847a8403e40f552db0a5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74d6d965_8e9d49a8",
        "filename": "lib/nvme/nvme_rdma.c",
        "patchSetId": 3
      },
      "lineNbr": 1897,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-12-04T20:40:54Z",
      "side": 1,
      "message": "we should consider just having nvme_qpair_get_state() instead of nvme_qpair_state_equals() - I think the former is more consistent with what we have elsewhere in SPDK\n\nseparate patch of course",
      "revId": "c6520bd03eb23a166e57847a8403e40f552db0a5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cda1ab1d_6164c6ba",
        "filename": "lib/nvme/nvme_rdma.c",
        "patchSetId": 3
      },
      "lineNbr": 1897,
      "author": {
        "id": 1011223
      },
      "writtenOn": "2019-12-05T15:37:01Z",
      "side": 1,
      "message": "I\u0027m good with that. I\u0027ll do it in a separate change.",
      "parentUuid": "74d6d965_8e9d49a8",
      "revId": "c6520bd03eb23a166e57847a8403e40f552db0a5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}