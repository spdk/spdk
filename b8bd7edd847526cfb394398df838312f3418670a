{
  "comments": [
    {
      "key": {
        "uuid": "5eb5ba1d_69a9e344",
        "filename": "lib/reduce/reduce.c",
        "patchSetId": 2
      },
      "lineNbr": 1014,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-06-19T02:20:55Z",
      "side": 1,
      "message": "Hi Paul, is this correct? Please see the line 925 to 927.",
      "range": {
        "startLine": 1013,
        "startChar": 2,
        "endLine": 1014,
        "endChar": 86
      },
      "revId": "b8bd7edd847526cfb394398df838312f3418670a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0827265_af97f091",
        "filename": "lib/reduce/reduce.c",
        "patchSetId": 2
      },
      "lineNbr": 1014,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2019-06-19T17:13:33Z",
      "side": 1,
      "message": "So here we are writing a chunk but not using all of the backing IO units. Jim was already setting the unused io_unit_index entries to FF. I don\u0027t believe its an issue to not clear the corresponding array bits because they weren\u0027t set. The lines you reference are for overwrites so yes any overwrite will correctly set both the io_unit_index as well as the array bits. Actually I don\u0027t see the need to set the io_unit_index values to FF here but Jim had it in here so to make sure things are consistent I added the clearing of them in the array.  Make sense? I can\u0027t prove that this is needed, I just think it\u0027s clearer.",
      "parentUuid": "5eb5ba1d_69a9e344",
      "range": {
        "startLine": 1013,
        "startChar": 2,
        "endLine": 1014,
        "endChar": 86
      },
      "revId": "b8bd7edd847526cfb394398df838312f3418670a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "397d9b1c_c71bd1ac",
        "filename": "lib/reduce/reduce.c",
        "patchSetId": 2
      },
      "lineNbr": 1014,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-06-19T23:05:34Z",
      "side": 1,
      "message": "Thanks Paul. Now I could understand your intention. Following the usual pattern will be helpful to avoid error and refactor.",
      "parentUuid": "e0827265_af97f091",
      "range": {
        "startLine": 1013,
        "startChar": 2,
        "endLine": 1014,
        "endChar": 86
      },
      "revId": "b8bd7edd847526cfb394398df838312f3418670a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d84d9dc8_7cc577ea",
        "filename": "lib/reduce/reduce.c",
        "patchSetId": 2
      },
      "lineNbr": 1014,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2019-06-24T13:17:41Z",
      "side": 1,
      "message": "The second argument here is the bit index - not the value. This will always set the bit at the maximum index to 0. Instead, I think you want to flip this line around with the one above it. Maybe there is some way we can expose this via a test?",
      "parentUuid": "397d9b1c_c71bd1ac",
      "range": {
        "startLine": 1013,
        "startChar": 2,
        "endLine": 1014,
        "endChar": 86
      },
      "revId": "b8bd7edd847526cfb394398df838312f3418670a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98650bba_8bb0ca86",
        "filename": "lib/reduce/reduce.c",
        "patchSetId": 2
      },
      "lineNbr": 1014,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2019-06-24T15:47:25Z",
      "side": 1,
      "message": "I\u0027m not sure I follow, can you paste it in here what you believe is needed;",
      "parentUuid": "d84d9dc8_7cc577ea",
      "range": {
        "startLine": 1013,
        "startChar": 2,
        "endLine": 1014,
        "endChar": 86
      },
      "revId": "b8bd7edd847526cfb394398df838312f3418670a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}