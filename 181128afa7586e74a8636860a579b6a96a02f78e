{
  "comments": [
    {
      "key": {
        "uuid": "be487e16_e3be766e",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 46
      },
      "lineNbr": 173,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-03-15T00:00:12Z",
      "side": 1,
      "message": "if we have 8 compressed bdevs, we won\u0027t need to funnel I/O for all 8 to the same thread - we just need to funnel all I/O for any one compressed bdev to the same thread\n\nthis is really important for the ISAL case - we don\u0027t want to get completely bottlenecked on just one core\n\nI\u0027m ok with doing this for now to keep the initial patch simpler, but we\u0027ll need to rethink later.",
      "revId": "181128afa7586e74a8636860a579b6a96a02f78e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "662729ae_6ec787c2",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 46
      },
      "lineNbr": 173,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2019-03-15T17:55:36Z",
      "side": 1,
      "message": "Yeah OK, this should be easy to add as a follow-on.  I just need to allocate the same # of qpairs as I have lcores and then associate them round robin with a bdev. This is basically what cryto does When you made this comment before I only took it to mean that I should have the reduce_thread stuff per bdev but I also need a qpair as well",
      "parentUuid": "be487e16_e3be766e",
      "revId": "181128afa7586e74a8636860a579b6a96a02f78e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22eb301f_699f9764",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 46
      },
      "lineNbr": 252,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-03-15T00:00:12Z",
      "side": 1,
      "message": "I know this is a total nit, but this doesn\u0027t initialize ISAL, it initializes the DPDK isal_compress module",
      "revId": "181128afa7586e74a8636860a579b6a96a02f78e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7202525a_2651d206",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 46
      },
      "lineNbr": 252,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2019-03-15T17:55:36Z",
      "side": 1,
      "message": "always better to be perfectly clear :)",
      "parentUuid": "22eb301f_699f9764",
      "revId": "181128afa7586e74a8636860a579b6a96a02f78e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8496e2f9_a85519a7",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 46
      },
      "lineNbr": 439,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-03-15T00:00:12Z",
      "side": 1,
      "message": "let\u0027s add an assert(false) here - this should never happen",
      "revId": "181128afa7586e74a8636860a579b6a96a02f78e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc7d4268_b4a27797",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 46
      },
      "lineNbr": 439,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2019-03-15T17:55:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8496e2f9_a85519a7",
      "revId": "181128afa7586e74a8636860a579b6a96a02f78e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2771051_5b6ecf54",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 46
      },
      "lineNbr": 553,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-03-15T00:00:12Z",
      "side": 1,
      "message": "this won\u0027t work like this - comp_ch is the ctx_buf, so this can get freed later if the channels are deleted out of order - for example:\n\nthread 0: create ch_count \u003d\u003d 1 (ch0 becomes the reduce-\u003ech)\nthread 1: create ch_count \u003d\u003d 2\nthread 0: delete ch_count \u003d\u003d 1 (but ch0 is still the reduce-\u003ech)\n\nnow I/O on thread 1 will not work\n\nNote in the bdev/iscsi driver, it only saves off the thread and creates the poller.\n\nI think you need to move the base_ch and the pending_comp_ios into the comp_bdev itself.  It\u0027s only the reduce_thread that will be accessing these (I think).  So they don\u0027t need to be per-channel.",
      "revId": "181128afa7586e74a8636860a579b6a96a02f78e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "837d4e7b_bd127b71",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 46
      },
      "lineNbr": 553,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2019-03-15T17:55:36Z",
      "side": 1,
      "message": "I should have made these changes on the tip and then backported, I need to rebase the chain to fully test these so hold off on review for now...",
      "parentUuid": "c2771051_5b6ecf54",
      "revId": "181128afa7586e74a8636860a579b6a96a02f78e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d0a6e83_07ed9250",
        "filename": "lib/bdev/compress/vbdev_compress.h",
        "patchSetId": 46
      },
      "lineNbr": 51,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-03-15T00:00:12Z",
      "side": 1,
      "message": "I guess I\u0027m thinking that the PMD doesn\u0027t get persisted.  The compression algorithm needs to, but not the PMD that will perform the compression.\n\nWe should probably discuss this over IRC.  I\u0027d like to get others opinions.  I\u0027m not 100% set on dynamically choosing the PMD but that\u0027s where I\u0027m leaning.  It fits with copy_engine, where we\u0027ll use a DMA Offload engine if available, otherwise use a CPU memcpy.  The caller doesn\u0027t specify which to use - copy_engine chooses for them.\n\nMaybe we provide application startup hooks to disable QAT even if it\u0027s available.  We have something similar for CB-DMA.  I think if you have QAT offload, you want to use it, unless it\u0027s for testing/benchmarking purposes.",
      "revId": "181128afa7586e74a8636860a579b6a96a02f78e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93178cbd_46050640",
        "filename": "lib/bdev/compress/vbdev_compress.h",
        "patchSetId": 46
      },
      "lineNbr": 51,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2019-03-15T17:55:36Z",
      "side": 1,
      "message": "So what you suggest would make it totally different from crypto - the other use of DPDK framework. We let users specify the PMD there and make no effort to automatically choose QAT.",
      "parentUuid": "4d0a6e83_07ed9250",
      "revId": "181128afa7586e74a8636860a579b6a96a02f78e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4539786_3a514ff2",
        "filename": "lib/bdev/compress/vbdev_compress.h",
        "patchSetId": 46
      },
      "lineNbr": 51,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-03-15T21:24:10Z",
      "side": 1,
      "message": "Good point.  I\u0027m still concerned (even on crypto) about what happens when we try to reload later and for some reason we can\u0027t use that PMD.  Crypto is a bit different since the user is always creating the crypto bdev again explicitly on restart.  For compress, we have to persist it.\n\nI\u0027m fine with this for now.  But let\u0027s find some time next week to discuss in more depth.",
      "parentUuid": "93178cbd_46050640",
      "revId": "181128afa7586e74a8636860a579b6a96a02f78e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67a8d5ab_af91f264",
        "filename": "lib/bdev/compress/vbdev_compress.h",
        "patchSetId": 46
      },
      "lineNbr": 51,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2019-03-18T17:49:54Z",
      "side": 1,
      "message": "Sounds good",
      "parentUuid": "f4539786_3a514ff2",
      "revId": "181128afa7586e74a8636860a579b6a96a02f78e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}