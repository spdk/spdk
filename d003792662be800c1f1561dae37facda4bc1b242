{
  "comments": [
    {
      "key": {
        "uuid": "f84ae0c9_e6349dd4",
        "filename": "lib/rpc/rpc.c",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-02-26T18:16:19Z",
      "side": 1,
      "message": "Using a single lock file for all socket paths won\u0027t work - we want to be able to run multiple independent SPDK applications at once with different RPC socket paths.\n\nThe lock file path should be generated based on the UNIX domain socket path.  For example, if the socket is called /var/tmp/my_spdk_instance.sock, the lock should be called /var/tmp/my_spdk_instance.sock.lock.",
      "revId": "d003792662be800c1f1561dae37facda4bc1b242",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7ec81a5_c28250eb",
        "filename": "lib/rpc/rpc.c",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2018-02-27T01:40:51Z",
      "side": 1,
      "message": "Yes, agreed. This lock file is only for the default socket path. I\u0027ve added the check below so that other concurrently running SPDK applications will not be affected at the startup if assigning a different socket path.\n\nBut your suggestion looks like can cover a more general usage if user SPDK applications assign specified (not default) and same socket path in their scenarios.",
      "parentUuid": "f84ae0c9_e6349dd4",
      "revId": "d003792662be800c1f1561dae37facda4bc1b242",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70b1c98c_2ff5f73e",
        "filename": "lib/rpc/rpc.c",
        "patchSetId": 5
      },
      "lineNbr": 100,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-02-26T12:11:16Z",
      "side": 1,
      "message": "I think we should write the purpose of the lock file here, for example,\n\nIf the default socket path is used, the socket can be unlinked safely by using the lock file.",
      "range": {
        "startLine": 100,
        "startChar": 5,
        "endLine": 100,
        "endChar": 66
      },
      "revId": "d003792662be800c1f1561dae37facda4bc1b242",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "713a941b_162e3714",
        "filename": "lib/rpc/rpc.c",
        "patchSetId": 5
      },
      "lineNbr": 101,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2018-02-26T08:03:57Z",
      "side": 1,
      "message": "This check is to limit the lock usage only for the same (default) socket path. If application specifies different socket path, there is no need for the lock protection.",
      "range": {
        "startLine": 101,
        "startChar": 2,
        "endLine": 101,
        "endChar": 76
      },
      "revId": "d003792662be800c1f1561dae37facda4bc1b242",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c45d9de_7e048733",
        "filename": "lib/rpc/rpc.c",
        "patchSetId": 5
      },
      "lineNbr": 101,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-02-26T08:49:24Z",
      "side": 1,
      "message": "Make sense to me.\n\nIf we can specify any lock file path when the default sock path is not used, it may be helpful. Hence how about doing 1) in this patch?\n\n1) adding a variable g_rpc_listen_addr_unix_lock_file_path and copy SPDK_DEFAULT_RPC_LOCK_ADDR to it?\n2) In other patch it can be changed to not default.",
      "parentUuid": "713a941b_162e3714",
      "range": {
        "startLine": 101,
        "startChar": 2,
        "endLine": 101,
        "endChar": 76
      },
      "revId": "d003792662be800c1f1561dae37facda4bc1b242",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "092ab36a_a355d085",
        "filename": "lib/rpc/rpc.c",
        "patchSetId": 5
      },
      "lineNbr": 101,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-02-26T12:11:16Z",
      "side": 1,
      "message": "Sorry, your implementation that lock file is applied only for the default path is OK for me. I do not have any requirement to use not default path yet.",
      "parentUuid": "4c45d9de_7e048733",
      "range": {
        "startLine": 101,
        "startChar": 2,
        "endLine": 101,
        "endChar": 76
      },
      "revId": "d003792662be800c1f1561dae37facda4bc1b242",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6fdb5062_ca0ebf23",
        "filename": "lib/rpc/rpc.c",
        "patchSetId": 5
      },
      "lineNbr": 110,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-02-26T12:11:16Z",
      "side": 1,
      "message": "the default socket path is used by another application.\n\nPlease add the word \"default\"",
      "range": {
        "startLine": 110,
        "startChar": 16,
        "endLine": 110,
        "endChar": 72
      },
      "revId": "d003792662be800c1f1561dae37facda4bc1b242",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c9bcad7_b062bb8d",
        "filename": "lib/rpc/rpc.c",
        "patchSetId": 5
      },
      "lineNbr": 115,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-02-26T08:49:24Z",
      "side": 1,
      "message": "check\u0026unlink and NOTICE_LOG is more reasonable choice than unconditional unlink.",
      "range": {
        "startLine": 114,
        "startChar": 3,
        "endLine": 115,
        "endChar": 72
      },
      "revId": "d003792662be800c1f1561dae37facda4bc1b242",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68633cd2_2daa839c",
        "filename": "lib/rpc/rpc.c",
        "patchSetId": 5
      },
      "lineNbr": 115,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-02-26T12:11:16Z",
      "side": 1,
      "message": "the socket was unlinked safely because the previous socket owner exited already.",
      "range": {
        "startLine": 115,
        "startChar": 0,
        "endLine": 115,
        "endChar": 72
      },
      "revId": "d003792662be800c1f1561dae37facda4bc1b242",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}