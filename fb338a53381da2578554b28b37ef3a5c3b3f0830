{
  "comments": [
    {
      "key": {
        "uuid": "6b30bb36_ed8a90b6",
        "filename": "lib/vhost/vhost.c",
        "patchSetId": 16
      },
      "lineNbr": 507,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2020-01-21T19:59:52Z",
      "side": 1,
      "message": "I found the specific bug here. When the user calls this function, they meant to be completing the descriptor at \"req_idx\", but this line is grabbing the flags for the descriptor at \"last_used_idx\". For out of order completions, those are not the same descriptor. Right now, this will mark the next descriptor as complete, regardless of whether the caller of this function actually said to do that.\n\nNote that due to this bug, the initiator won\u0027t entirely hang like I was describing. Instead, it will believe a descriptor is complete prior to it actually being complete and possibly use corrupt data.",
      "revId": "fb338a53381da2578554b28b37ef3a5c3b3f0830",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d278b93_b8ef68ac",
        "filename": "lib/vhost/vhost.c",
        "patchSetId": 16
      },
      "lineNbr": 507,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2020-01-29T16:34:17Z",
      "side": 1,
      "message": "I went and talked to the authors of the spec and they cleared up what I didn\u0027t understand. The descriptor being completed goes into the last_used_idx slot always, even if it\u0027s an entirely different descriptor than what was submitted in that slot. I\u0027ve re-read the spec a few times and I still don\u0027t think that\u0027s clear from their wording. They are likely going to clarify the document.\n\nThat means a lot of my earlier feedback needs to be reversed. I\u0027ll try to make individual comments later today.\n\nPart of my confusion was that this particular function takes a \"req_idx\" as a parameter, presumably as the index to complete. But that\u0027s not at all what req_idx is for here - in fact it only needs req_idx and last_idx to calculate the number of descriptors it is completing so it can jump the last_used_idx forward. That\u0027s certainly something we should change - this function should just take a descriptor count.",
      "parentUuid": "6b30bb36_ed8a90b6",
      "revId": "fb338a53381da2578554b28b37ef3a5c3b3f0830",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}