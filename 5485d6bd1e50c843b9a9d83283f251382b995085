{
  "comments": [
    {
      "key": {
        "uuid": "e8c3d583_74d41ebf",
        "filename": "CHANGELOG.md",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-03-01T19:19:05Z",
      "side": 1,
      "message": "Hi Lance,\n\nYou can keep most of this description just in the commit message.  Then if readers have more questions, they can dig into the code or commit log for more details.\n\nSo basically just describe the \"what\" here, the \"how\" and \"why\" can be elsewhere.\n\nThanks,\n\n-Jim",
      "revId": "5485d6bd1e50c843b9a9d83283f251382b995085",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b8c3101_c6a7f317",
        "filename": "include/spdk/event.h",
        "patchSetId": 3
      },
      "lineNbr": 206,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2018-02-27T09:10:31Z",
      "side": 1,
      "message": "I don\u0027t think other will approve on using this macro. It seems very hacky.\nWhat if we, instead, told other apps to use spdk_app_parse_args as follows:\n\n```\nbool do_exit;\nint rc \u003d spdk_app_parse_args(int argc, char **argv, ..., bool *do_exit);\nif (do_exit) {\n  exit(rc);\n}\n```\n\nWe could also define SPDK_APP_PARSE_ARGS_SUCCESS as:\n\n```\n[....]\n#define SPDK_APP_PARSE_ARGS_SUCCESS INT_MAX\nSTATIC_ASSERT(SPDK_APP_PARSE_ARGS_SUCCESS !\u003d EXIT_FAILURE)\nSTATIC_ASSERT(SPDK_APP_PARSE_ARGS_SUCCESS !\u003d EXIT_SUCCESS)\n```\n\nand then:\n\n```\nint rc \u003d spdk_app_parse_args(...);\nif (rc !\u003d SPDK_APP_PARSE_ARGS_SUCCESS) {\n  exit(rc);\n}\n```\n\nHowever, I leave the review up to others.",
      "range": {
        "startLine": 206,
        "startChar": 16,
        "endLine": 206,
        "endChar": 35
      },
      "revId": "5485d6bd1e50c843b9a9d83283f251382b995085",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "debd3499_cc3167f6",
        "filename": "include/spdk/event.h",
        "patchSetId": 3
      },
      "lineNbr": 206,
      "author": {
        "id": 1011995
      },
      "writtenOn": "2018-02-27T16:20:54Z",
      "side": 1,
      "message": "Dariusz, my initial macro proposal seems to both eliminate explicit exit()\u0027s from within the lib code while satisfying a common design pattern for the callers, though I could understand some concerns about the nature of embedding the exit() calls in the macro.  I, myself, struggle to see the value in the first alternative you pose as the do_exit ptr and function return value are almost redundant, or otherwise more complicated than it needs to be.\n\nRegarding your other suggestion, fundamentally I\u0027m of the opinion of preferring to see any lib function returning a value of zero (0) on success, so defining SPDK_APP_PARSE_ARGS_SUCCESS with a value of INT_MAX goes against that principle.\n\nThank you for the feedback!  I\u0027m eager to see how others feel about this as well.",
      "parentUuid": "3b8c3101_c6a7f317",
      "range": {
        "startLine": 206,
        "startChar": 16,
        "endLine": 206,
        "endChar": 35
      },
      "revId": "5485d6bd1e50c843b9a9d83283f251382b995085",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "617a3971_ec7cc93e",
        "filename": "lib/event/app.c",
        "patchSetId": 3
      },
      "lineNbr": 515,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2018-02-27T09:10:31Z",
      "side": 1,
      "message": "unrelated change",
      "range": {
        "startLine": 514,
        "startChar": 1,
        "endLine": 515,
        "endChar": 2
      },
      "revId": "5485d6bd1e50c843b9a9d83283f251382b995085",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df2878b3_a9926cd3",
        "filename": "lib/event/app.c",
        "patchSetId": 3
      },
      "lineNbr": 515,
      "author": {
        "id": 1011995
      },
      "writtenOn": "2018-02-27T16:20:54Z",
      "side": 1,
      "message": "Dariusz, I think the scripts/check_format.sh performed this change automatically.",
      "parentUuid": "617a3971_ec7cc93e",
      "range": {
        "startLine": 514,
        "startChar": 1,
        "endLine": 515,
        "endChar": 2
      },
      "revId": "5485d6bd1e50c843b9a9d83283f251382b995085",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3a47aaa_c7321246",
        "filename": "lib/event/app.c",
        "patchSetId": 3
      },
      "lineNbr": 515,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-03-01T19:19:05Z",
      "side": 1,
      "message": "Hi Lance,\n\nDarek is right.  check_format.sh will not make these types of changes.  SPDK style is definitely open brace on same line as if/for/while/do (see other code in this file).  This must be a change that you accidentally made and forgot to revert before pushing your patch.\n\n-Jim",
      "parentUuid": "df2878b3_a9926cd3",
      "range": {
        "startLine": 514,
        "startChar": 1,
        "endLine": 515,
        "endChar": 2
      },
      "revId": "5485d6bd1e50c843b9a9d83283f251382b995085",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cd67378_1f46b614",
        "filename": "lib/event/app.c",
        "patchSetId": 3
      },
      "lineNbr": 521,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2018-02-27T09:10:31Z",
      "side": 1,
      "message": "^",
      "range": {
        "startLine": 520,
        "startChar": 1,
        "endLine": 521,
        "endChar": 2
      },
      "revId": "5485d6bd1e50c843b9a9d83283f251382b995085",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d671a69c_6a6982f9",
        "filename": "lib/event/app.c",
        "patchSetId": 3
      },
      "lineNbr": 521,
      "author": {
        "id": 1011995
      },
      "writtenOn": "2018-02-27T16:20:54Z",
      "side": 1,
      "message": "Dariusz, I think the scripts/check_format.sh performed this change automatically.",
      "parentUuid": "1cd67378_1f46b614",
      "range": {
        "startLine": 520,
        "startChar": 1,
        "endLine": 521,
        "endChar": 2
      },
      "revId": "5485d6bd1e50c843b9a9d83283f251382b995085",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd42c0ee_374150d8",
        "filename": "lib/event/app.c",
        "patchSetId": 3
      },
      "lineNbr": 527,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2018-02-27T09:10:31Z",
      "side": 1,
      "message": "^",
      "range": {
        "startLine": 526,
        "startChar": 1,
        "endLine": 527,
        "endChar": 2
      },
      "revId": "5485d6bd1e50c843b9a9d83283f251382b995085",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8903c434_fbe36485",
        "filename": "lib/event/app.c",
        "patchSetId": 3
      },
      "lineNbr": 527,
      "author": {
        "id": 1011995
      },
      "writtenOn": "2018-02-27T16:20:54Z",
      "side": 1,
      "message": "Dariusz, I think the scripts/check_format.sh performed this change automatically.",
      "parentUuid": "dd42c0ee_374150d8",
      "range": {
        "startLine": 526,
        "startChar": 1,
        "endLine": 527,
        "endChar": 2
      },
      "revId": "5485d6bd1e50c843b9a9d83283f251382b995085",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "573f23e6_b9c6a097",
        "filename": "lib/event/app.c",
        "patchSetId": 3
      },
      "lineNbr": 540,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2018-02-27T09:10:31Z",
      "side": 1,
      "message": "can we have a goto label for that?",
      "range": {
        "startLine": 540,
        "startChar": 3,
        "endLine": 540,
        "endChar": 20
      },
      "revId": "5485d6bd1e50c843b9a9d83283f251382b995085",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05f811a0_a48a3689",
        "filename": "lib/event/app.c",
        "patchSetId": 3
      },
      "lineNbr": 540,
      "author": {
        "id": 1011995
      },
      "writtenOn": "2018-02-27T16:20:54Z",
      "side": 1,
      "message": "Yes, we could do something like that (i.e. add a goto), and it would also serve as a place for any other clean-up in case additional error handling is subsequently needed in future changes.",
      "parentUuid": "573f23e6_b9c6a097",
      "range": {
        "startLine": 540,
        "startChar": 3,
        "endLine": 540,
        "endChar": 20
      },
      "revId": "5485d6bd1e50c843b9a9d83283f251382b995085",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ad9240f_0799d6ed",
        "filename": "lib/event/reactor.c",
        "patchSetId": 3
      },
      "lineNbr": 134,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-03-01T19:19:05Z",
      "side": 1,
      "message": "could this be an assert instead?\n\nthis seems unrelated to the rest of the patch, but am OK just adding an assert here",
      "revId": "5485d6bd1e50c843b9a9d83283f251382b995085",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32e8ccf3_e7abac6d",
        "filename": "lib/event/reactor.c",
        "patchSetId": 3
      },
      "lineNbr": 741,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-03-01T19:19:05Z",
      "side": 1,
      "message": "should this assert() instead?",
      "revId": "5485d6bd1e50c843b9a9d83283f251382b995085",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}