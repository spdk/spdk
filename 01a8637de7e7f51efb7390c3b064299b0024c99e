{
  "comments": [
    {
      "key": {
        "uuid": "64e1be1a_a866234d",
        "filename": "lib/nbd/nbd_rpc.c",
        "patchSetId": 6
      },
      "lineNbr": 50,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2019-02-15T15:43:53Z",
      "side": 1,
      "message": "can we make it `nbd_idx` or `nbd_num` or something like that?",
      "range": {
        "startLine": 50,
        "startChar": 5,
        "endLine": 50,
        "endChar": 14
      },
      "revId": "01a8637de7e7f51efb7390c3b064299b0024c99e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64ea915d_0ab07181",
        "filename": "lib/nbd/nbd_rpc.c",
        "patchSetId": 6
      },
      "lineNbr": 50,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2019-02-18T05:38:32Z",
      "side": 1,
      "message": "good point, Pawel, applied nbd_idx.",
      "parentUuid": "64e1be1a_a866234d",
      "range": {
        "startLine": 50,
        "startChar": 5,
        "endLine": 50,
        "endChar": 14
      },
      "revId": "01a8637de7e7f51efb7390c3b064299b0024c99e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10cee880_855c471e",
        "filename": "lib/nbd/nbd_rpc.c",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2019-02-15T15:43:53Z",
      "side": 1,
      "message": "pls update jsonrpc.md file.",
      "range": {
        "startLine": 64,
        "startChar": 90,
        "endLine": 64,
        "endChar": 94
      },
      "revId": "01a8637de7e7f51efb7390c3b064299b0024c99e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5aa45a2_51a55cae",
        "filename": "lib/nbd/nbd_rpc.c",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2019-02-18T05:38:32Z",
      "side": 1,
      "message": "Actually, nbd related rpc methods are not recorded in jsonrpc.md",
      "parentUuid": "10cee880_855c471e",
      "range": {
        "startLine": 64,
        "startChar": 90,
        "endLine": 64,
        "endChar": 94
      },
      "revId": "01a8637de7e7f51efb7390c3b064299b0024c99e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "798d2eb0_8c530313",
        "filename": "lib/nbd/nbd_rpc.c",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2019-02-18T08:29:11Z",
      "side": 1,
      "message": "ohhhh.... can you push separate patch that will add nbd RPC to jsonrpc.md?",
      "parentUuid": "a5aa45a2_51a55cae",
      "range": {
        "startLine": 64,
        "startChar": 90,
        "endLine": 64,
        "endChar": 94
      },
      "revId": "01a8637de7e7f51efb7390c3b064299b0024c99e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04dee22d_b36f50a8",
        "filename": "lib/nbd/nbd_rpc.c",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2019-02-18T10:04:13Z",
      "side": 1,
      "message": "sure, would like to add it into my worklist",
      "parentUuid": "798d2eb0_8c530313",
      "range": {
        "startLine": 64,
        "startChar": 90,
        "endLine": 64,
        "endChar": 94
      },
      "revId": "01a8637de7e7f51efb7390c3b064299b0024c99e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbef7a20_01aa1060",
        "filename": "lib/nbd/nbd_rpc.c",
        "patchSetId": 6
      },
      "lineNbr": 149,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2019-02-15T15:43:53Z",
      "side": 1,
      "message": "spdk_nbd_start() will check device for you. There no need to do twice the same work. Just do\n\n\n  ...\n  if (rc \u003d\u003d -EBUSY \u0026\u0026 req-\u003estart_idx !\u003d USER_SPECIFIED_NBD_DEVICE) {\n    if (req-\u003estart_idx \u003d\u003d SOME_MAX_VALUE) {\n      fail;\n    } else {\n        free(req-\u003enbd_device);\n        req-\u003enbd_device \u003d spdk_asprintf(..., req-\u003estart_idx);\n    }\n\n    spdk_nbd_start(...).\n    return;\n  }\n  ...\n\nThis way you can remove these two new functions.\n\nAlso pls note that with this auto-dev-find feature this code is converted to use recurency. Can you change spdk_nbd_start() function to return error (-EBUSY) instead calling callback in case device is already in use?",
      "range": {
        "startLine": 148,
        "startChar": 2,
        "endLine": 149,
        "endChar": 32
      },
      "revId": "01a8637de7e7f51efb7390c3b064299b0024c99e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "839ede66_7b954f30",
        "filename": "lib/nbd/nbd_rpc.c",
        "patchSetId": 6
      },
      "lineNbr": 149,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2019-02-18T05:38:32Z",
      "side": 1,
      "message": "Added free(req-\u003enbd_device) here, thanks for notice.\n\nInside spdk_nbd_start, if ioctl(NBD_SET_SOCK) return with -EBUSY, then spdk_nbd_start won\u0027t return directly, and ioctl(NBD_SET_SOCK) will be tried several times later, then return rc by cb_fn. \n\n1. So even change spdk_nbd_start() function to return error (-EBUSY), it is still useless.\n2. If directly using spdk_nbd_start to iterate a valid nbd-device, then the rpc method may be required a long waiting time. that\u0027s the reason here still using /sys/.../pid to do a quick check, and using spdk_nbd_start() to do final verification.",
      "parentUuid": "bbef7a20_01aa1060",
      "range": {
        "startLine": 148,
        "startChar": 2,
        "endLine": 149,
        "endChar": 32
      },
      "revId": "01a8637de7e7f51efb7390c3b064299b0024c99e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c237ce64_cf44a45d",
        "filename": "lib/nbd/nbd_rpc.c",
        "patchSetId": 6
      },
      "lineNbr": 149,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2019-02-18T08:29:11Z",
      "side": 1,
      "message": "1. Ok\n2. What if we remove this wait time at all and just iterate? What I\u0027m trying to say is that the user (administrator) is creating these devices. So if some /dev/nbdX is used (EBUSY) this is a configuration issue and maybe we just should not try to solve it just return error. The same things as you are doing here user can do on it\u0027s own.",
      "parentUuid": "839ede66_7b954f30",
      "range": {
        "startLine": 148,
        "startChar": 2,
        "endLine": 149,
        "endChar": 32
      },
      "revId": "01a8637de7e7f51efb7390c3b064299b0024c99e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22129037_e68e4b01",
        "filename": "lib/nbd/nbd_rpc.c",
        "patchSetId": 6
      },
      "lineNbr": 149,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2019-02-18T10:04:13Z",
      "side": 1,
      "message": "It requires a clear way to clarify whether nbd-device is setup by others or kernel is not ready.\nEven kernel\u0027s non-ready is a small probablity event, but it should be there.\n\nSo the problem can also be turned to how to avoid kernel\u0027s non-ready in our autotest.\nI had thought to recover the change made for that issue, and fix it by some extra time-wait in test scripts. But I\u0027m sad to say I didn\u0027t success to reproduce that issue.\nThen since don\u0027t want to be blocked on it, so just trying to avoid it by the other two patches related to this patch.",
      "parentUuid": "c237ce64_cf44a45d",
      "range": {
        "startLine": 148,
        "startChar": 2,
        "endLine": 149,
        "endChar": 32
      },
      "revId": "01a8637de7e7f51efb7390c3b064299b0024c99e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}