{
  "comments": [
    {
      "key": {
        "uuid": "935b5cc8_f723ef2c",
        "filename": "test/nvme/perf/common.sh",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1011256
      },
      "writtenOn": "2018-09-20T13:06:09Z",
      "side": 1,
      "message": "suggestion: how about create_fio_filename, to better present what is going on and what is returned by this function?",
      "range": {
        "startLine": 29,
        "startChar": 9,
        "endLine": 29,
        "endChar": 21
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b1dafb0_17cd5918",
        "filename": "test/nvme/perf/common.sh",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1011256
      },
      "writtenOn": "2018-09-20T13:06:09Z",
      "side": 1,
      "message": "Since you already handle args $1 and $3 with named variables you could also do that for $2 for better readibility",
      "range": {
        "startLine": 30,
        "startChar": 1,
        "endLine": 31,
        "endChar": 10
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41ff8459_a39207fb",
        "filename": "test/nvme/perf/common.sh",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1011314
      },
      "writtenOn": "2018-09-18T14:43:40Z",
      "side": 1,
      "message": "I think this is random writes. Please note that properly in the parameter or via a comment.",
      "range": {
        "startLine": 57,
        "startChar": 16,
        "endLine": 57,
        "endChar": 21
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e317ce6a_70ff70ec",
        "filename": "test/nvme/perf/common.sh",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1011259
      },
      "writtenOn": "2018-09-19T14:57:36Z",
      "side": 1,
      "message": "ack",
      "parentUuid": "41ff8459_a39207fb",
      "range": {
        "startLine": 57,
        "startChar": 16,
        "endLine": 57,
        "endChar": 21
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d4d2a15_43387f03",
        "filename": "test/nvme/perf/common.sh",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1011256
      },
      "writtenOn": "2018-09-20T13:06:09Z",
      "side": 1,
      "message": "Why do we need \"if\" in preconditioning function?\nPrecondition is run seq writes on whole disk twice, it\u0027s not dependent on the traffic type you will run later in test.",
      "parentUuid": "41ff8459_a39207fb",
      "range": {
        "startLine": 57,
        "startChar": 16,
        "endLine": 57,
        "endChar": 21
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "350b29f2_3090f811",
        "filename": "test/nvme/perf/common.sh",
        "patchSetId": 5
      },
      "lineNbr": 61,
      "author": {
        "id": 1011314
      },
      "writtenOn": "2018-09-18T14:43:40Z",
      "side": 1,
      "message": "So this run times for preconditioning depend on the size of the disk. If this script is going to be generalized, we should looking into using some of the other fio parameters that do this automatically.\nThere was an fio script that we used for rocksdb testing that had the following settings for preconditioning sequential writes:\nrw\u003dwrite\niodepth\u003d128\nbs\u003d128K\nloops\u003d2\nThis was sufficient to precondition any capacity SSD without trying to figure out the runtime for each SSD.",
      "range": {
        "startLine": 61,
        "startChar": 44,
        "endLine": 61,
        "endChar": 58
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2ebadca_e68dc12b",
        "filename": "test/nvme/perf/common.sh",
        "patchSetId": 5
      },
      "lineNbr": 61,
      "author": {
        "id": 1011259
      },
      "writtenOn": "2018-09-19T14:57:36Z",
      "side": 1,
      "message": "Thanks for this hint!",
      "parentUuid": "350b29f2_3090f811",
      "range": {
        "startLine": 61,
        "startChar": 44,
        "endLine": 61,
        "endChar": 58
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd9e97cd_ce7f074d",
        "filename": "test/nvme/perf/common.sh",
        "patchSetId": 5
      },
      "lineNbr": 61,
      "author": {
        "id": 1011256
      },
      "writtenOn": "2018-09-20T13:06:09Z",
      "side": 1,
      "message": "John is right here. Either use size\u003d100% loops\u003d2 or size\u003d200% for precond.\nI think blocksize could be bigger too, with smaller IOdepth - bs\u003d1M iodepth\u003d32? This should go faster. John, correct me if I\u0027m wrong.",
      "parentUuid": "350b29f2_3090f811",
      "range": {
        "startLine": 61,
        "startChar": 44,
        "endLine": 61,
        "endChar": 58
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94b0aa9f_d4df697f",
        "filename": "test/nvme/perf/common.sh",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1011256
      },
      "writtenOn": "2018-09-20T13:06:09Z",
      "side": 1,
      "message": "function name not clear. get_value... of what? (I body I can see we parse json using jq, so I\u0027m nitpicking here, but you get the point:))\n\nBTW. Do we even need to create such function in this script?\nThere\u0027s already a \"parse_results\" function in scripts/perf/nvme/run_fio_test.py. YOu\u0027d just need to extract it to a separate module. Up to you.",
      "range": {
        "startLine": 66,
        "startChar": 9,
        "endLine": 66,
        "endChar": 18
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0de5f7cc_acc5a692",
        "filename": "test/nvme/perf/common.sh",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1011259
      },
      "writtenOn": "2018-09-25T15:25:27Z",
      "side": 1,
      "message": "I\u0027ll check that",
      "parentUuid": "94b0aa9f_d4df697f",
      "range": {
        "startLine": 66,
        "startChar": 9,
        "endLine": 66,
        "endChar": 18
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54deab93_a7c2949a",
        "filename": "test/nvme/perf/common.sh",
        "patchSetId": 5
      },
      "lineNbr": 76,
      "author": {
        "id": 1011314
      },
      "writtenOn": "2018-09-18T14:43:40Z",
      "side": 1,
      "message": "I think this should be a weighted average since 70% of the values have one average and 30% have another average.",
      "range": {
        "startLine": 76,
        "startChar": 10,
        "endLine": 76,
        "endChar": 23
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7dca21a_6276b038",
        "filename": "test/nvme/perf/common.sh",
        "patchSetId": 5
      },
      "lineNbr": 76,
      "author": {
        "id": 1011259
      },
      "writtenOn": "2018-09-19T14:57:36Z",
      "side": 1,
      "message": "ack",
      "parentUuid": "54deab93_a7c2949a",
      "range": {
        "startLine": 76,
        "startChar": 10,
        "endLine": 76,
        "endChar": 23
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "534a870a_df17f27d",
        "filename": "test/nvme/perf/common.sh",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1011256
      },
      "writtenOn": "2018-09-20T13:06:09Z",
      "side": 1,
      "message": "Shouldn\u0027t --ioengine have full path like on line 111?",
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a66689ae_33ad8601",
        "filename": "test/nvme/perf/common.sh",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1011259
      },
      "writtenOn": "2018-09-25T15:25:27Z",
      "side": 1,
      "message": "Readme says that it should be \"spdk\" for nvme fio_plugin and \"spdk_bdev\" for bdev fio_plugin",
      "parentUuid": "534a870a_df17f27d",
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48dad6b7_1bf86341",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1011314
      },
      "writtenOn": "2018-09-18T14:43:40Z",
      "side": 1,
      "message": "The script is for both NVMe PMD and bdev.",
      "range": {
        "startLine": 23,
        "startChar": 16,
        "endLine": 23,
        "endChar": 19
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adaccd6_da01857a",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1011259
      },
      "writtenOn": "2018-09-19T14:57:36Z",
      "side": 1,
      "message": "ack",
      "parentUuid": "48dad6b7_1bf86341",
      "range": {
        "startLine": 23,
        "startChar": 16,
        "endLine": 23,
        "endChar": 19
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1e821c6_2abce871",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1011314
      },
      "writtenOn": "2018-09-18T14:43:40Z",
      "side": 1,
      "message": "Might want to specify the time is in secs",
      "range": {
        "startLine": 26,
        "startChar": 96,
        "endLine": 26,
        "endChar": 100
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "785db05f_f181c5d1",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1011259
      },
      "writtenOn": "2018-09-19T14:57:36Z",
      "side": 1,
      "message": "ack",
      "parentUuid": "e1e821c6_2abce871",
      "range": {
        "startLine": 26,
        "startChar": 96,
        "endLine": 26,
        "endChar": 100
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38d793d3_edeafc0c",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1011314
      },
      "writtenOn": "2018-09-18T14:43:40Z",
      "side": 1,
      "message": "Consistently use underscores (_) or don\u0027t use them at all. For example in runtime there was no underscore, but you have it here.",
      "range": {
        "startLine": 27,
        "startChar": 13,
        "endLine": 27,
        "endChar": 22
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4216dd97_b5689ba5",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1011314
      },
      "writtenOn": "2018-09-18T14:43:40Z",
      "side": 1,
      "message": "Might want to specify the time is in secs",
      "range": {
        "startLine": 27,
        "startChar": 88,
        "endLine": 27,
        "endChar": 92
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7458376_7bda28a7",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1011259
      },
      "writtenOn": "2018-09-19T14:57:36Z",
      "side": 1,
      "message": "ack",
      "parentUuid": "4216dd97_b5689ba5",
      "range": {
        "startLine": 27,
        "startChar": 88,
        "endLine": 27,
        "endChar": 92
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95e45c66_d4cb3233",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1011259
      },
      "writtenOn": "2018-09-19T14:57:36Z",
      "side": 1,
      "message": "ack",
      "parentUuid": "38d793d3_edeafc0c",
      "range": {
        "startLine": 27,
        "startChar": 13,
        "endLine": 27,
        "endChar": 22
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de3310c0_b2204b30",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1011256
      },
      "writtenOn": "2018-09-20T13:06:09Z",
      "side": 1,
      "message": "I think Pawel copied options names from FIO man itself - it\u0027s \"runtime\" and \"ramp_time\" there as well:).\nI agree with John - either drop the underscores or be consistent.\nMy personal suggestion - I find it much easier to type in the options if they use dash \"-\" instead of underscore (because you have to type 2 dashes at beginning of option anyway)",
      "parentUuid": "4216dd97_b5689ba5",
      "range": {
        "startLine": 27,
        "startChar": 88,
        "endLine": 27,
        "endChar": 92
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a74fe5c_c2bf8cf3",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1011314
      },
      "writtenOn": "2018-09-18T14:43:40Z",
      "side": 1,
      "message": "Consistently use underscores (_) or don\u0027t use them at all.\nfiobin has no underscore but you have underscore for fio_plugin.",
      "range": {
        "startLine": 29,
        "startChar": 13,
        "endLine": 29,
        "endChar": 23
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00021d08_3e0c5e55",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1011259
      },
      "writtenOn": "2018-09-19T14:57:36Z",
      "side": 1,
      "message": "ack",
      "parentUuid": "3a74fe5c_c2bf8cf3",
      "range": {
        "startLine": 29,
        "startChar": 13,
        "endLine": 29,
        "endChar": 23
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9f077b8_6a1052a7",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1011314
      },
      "writtenOn": "2018-09-18T14:43:40Z",
      "side": 1,
      "message": "This needs more explanation. On a system with multiple disks are taking the first disk_no BDFs? What if they used a PCI whitelist with setup script?",
      "range": {
        "startLine": 30,
        "startChar": 33,
        "endLine": 30,
        "endChar": 59
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f158020_fc2576ad",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1011259
      },
      "writtenOn": "2018-09-19T14:57:36Z",
      "side": 1,
      "message": "Disks are taken by the number of BDF so on a setup with multiple disk and choosing not to take all of them, it takes first disks with BDFs ascending. Good point about whitelist, Fio plugin won\u0027t be able use devices that are not on the whitelist.",
      "parentUuid": "f9f077b8_6a1052a7",
      "range": {
        "startLine": 30,
        "startChar": 33,
        "endLine": 30,
        "endChar": 59
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f86c3f26_f44e2247",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 54,
      "author": {
        "id": 1011314
      },
      "writtenOn": "2018-09-18T21:49:40Z",
      "side": 1,
      "message": "Doesn\u0027t this parameter get defined in common.sh. I don\u0027t think this parameter is defined at this point.",
      "range": {
        "startLine": 54,
        "startChar": 21,
        "endLine": 54,
        "endChar": 37
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "709ca369_59b4f08a",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 54,
      "author": {
        "id": 1011259
      },
      "writtenOn": "2018-09-19T14:57:36Z",
      "side": 1,
      "message": "ack",
      "parentUuid": "f86c3f26_f44e2247",
      "range": {
        "startLine": 54,
        "startChar": 21,
        "endLine": 54,
        "endChar": 37
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "779a1fa6_95fa2b49",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 54,
      "author": {
        "id": 1011256
      },
      "writtenOn": "2018-09-20T13:06:09Z",
      "side": 1,
      "message": "If this will be a global or env variable passed between scripts then it should be in CAPITAL letters so that the name stands out.",
      "parentUuid": "f86c3f26_f44e2247",
      "range": {
        "startLine": 54,
        "startChar": 21,
        "endLine": 54,
        "endChar": 37
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01c0d4de_a399ca63",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 73,
      "author": {
        "id": 1011314
      },
      "writtenOn": "2018-09-18T14:43:40Z",
      "side": 1,
      "message": "u? caught me off-guard. Lets call this usecs.",
      "range": {
        "startLine": 73,
        "startChar": 32,
        "endLine": 73,
        "endChar": 33
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ec82f3b_eb1c4a7e",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 73,
      "author": {
        "id": 1011259
      },
      "writtenOn": "2018-09-19T14:57:36Z",
      "side": 1,
      "message": "ack",
      "parentUuid": "01c0d4de_a399ca63",
      "range": {
        "startLine": 73,
        "startChar": 32,
        "endLine": 73,
        "endChar": 33
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b841a413_4db4c68a",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 86,
      "author": {
        "id": 1011314
      },
      "writtenOn": "2018-09-18T14:43:40Z",
      "side": 1,
      "message": "get_value function returns the latency values in nanoseconds but your reporting them in usecs per your header in line 73 above.",
      "range": {
        "startLine": 86,
        "startChar": 51,
        "endLine": 86,
        "endChar": 60
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da69f141_ed5a2471",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 86,
      "author": {
        "id": 1011259
      },
      "writtenOn": "2018-09-19T14:57:36Z",
      "side": 1,
      "message": "value conversion to microseconds is done below but as You mentioned it, it would be better if get_value returned values in microseconds",
      "parentUuid": "b841a413_4db4c68a",
      "range": {
        "startLine": 86,
        "startChar": 51,
        "endLine": 86,
        "endChar": 60
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "018ab6dd_38c2654f",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 101,
      "author": {
        "id": 1011314
      },
      "writtenOn": "2018-09-18T14:43:40Z",
      "side": 1,
      "message": "When your printing the test results, it is usually a good to have the workload info like block size, QD, how long the test ran? It makes it easier to read the results.",
      "range": {
        "startLine": 101,
        "startChar": 2,
        "endLine": 101,
        "endChar": 78
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d23b56bf_f8ff73c6",
        "filename": "test/nvme/perf/perf_tc1.sh",
        "patchSetId": 5
      },
      "lineNbr": 101,
      "author": {
        "id": 1011259
      },
      "writtenOn": "2018-09-19T14:57:36Z",
      "side": 1,
      "message": "ack",
      "parentUuid": "018ab6dd_38c2654f",
      "range": {
        "startLine": 101,
        "startChar": 2,
        "endLine": 101,
        "endChar": 78
      },
      "revId": "4c7c74888f9b81be7bd1f89c7a01d8e70a5eefcf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}