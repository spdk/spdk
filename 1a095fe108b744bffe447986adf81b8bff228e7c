{
  "comments": [
    {
      "key": {
        "uuid": "cc8fdb28_775b80ab",
        "filename": "lib/nvme/nvme_rdma.c",
        "patchSetId": 9
      },
      "lineNbr": 284,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-11-07T17:25:57Z",
      "side": 1,
      "message": "This context is shared between all devices, so technically you only need to do this one time when the transport is initialized. But I think this will work.",
      "revId": "1a095fe108b744bffe447986adf81b8bff228e7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "525f591f_8f2e140b",
        "filename": "lib/nvme/nvme_rdma.c",
        "patchSetId": 9
      },
      "lineNbr": 284,
      "author": {
        "id": 1011262
      },
      "writtenOn": "2018-11-09T10:40:38Z",
      "side": 1,
      "message": "I had trouble to find a good place to put this. We cannot do this earlier as we count on blocking mode when connecting. I also cannot do this later as we start pulling events before we get out of nvme_rdma_qpair_connect function and that will cause event read to block further processing.",
      "parentUuid": "cc8fdb28_775b80ab",
      "revId": "1a095fe108b744bffe447986adf81b8bff228e7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a5b5a83_8b2302dc",
        "filename": "lib/nvme/nvme_rdma.c",
        "patchSetId": 9
      },
      "lineNbr": 1602,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-11-07T17:25:57Z",
      "side": 1,
      "message": "I don\u0027t think you need to get the flags here - the fd is always in NONBLOCK mode.",
      "revId": "1a095fe108b744bffe447986adf81b8bff228e7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59351558_9ca831ee",
        "filename": "lib/nvme/nvme_rdma.c",
        "patchSetId": 9
      },
      "lineNbr": 1602,
      "author": {
        "id": 1011262
      },
      "writtenOn": "2018-11-09T10:40:38Z",
      "side": 1,
      "message": "At first I wanted to remove it after previous code changes, but then I realized that someone may want to use event handler on separate thread in initiator. But with current code it won\u0027t be possible, so I will remove this.",
      "parentUuid": "6a5b5a83_8b2302dc",
      "revId": "1a095fe108b744bffe447986adf81b8bff228e7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a969f1ed_59d9a6f9",
        "filename": "lib/nvme/nvme_rdma.c",
        "patchSetId": 9
      },
      "lineNbr": 1602,
      "author": {
        "id": 1014643
      },
      "writtenOn": "2018-11-15T05:57:06Z",
      "side": 1,
      "message": "Using event handler in separate thread in only right way to add handling events.\nAPI should prevent fetching events in \"Data path\"",
      "parentUuid": "59351558_9ca831ee",
      "revId": "1a095fe108b744bffe447986adf81b8bff228e7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5210cc10_9e4f63a5",
        "filename": "lib/nvme/nvme_rdma.c",
        "patchSetId": 9
      },
      "lineNbr": 1602,
      "author": {
        "id": 1011262
      },
      "writtenOn": "2018-12-03T13:12:43Z",
      "side": 1,
      "message": "We have some single thread applications in SPDK example directory that use this code and I\u0027m trying to make it work with out remodeling them to use many threads. I\u0027m still searching for a right way to do this.",
      "parentUuid": "a969f1ed_59d9a6f9",
      "revId": "1a095fe108b744bffe447986adf81b8bff228e7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c07d233d_b04d13c7",
        "filename": "lib/nvme/nvme_rdma.c",
        "patchSetId": 9
      },
      "lineNbr": 1658,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-11-07T17:25:57Z",
      "side": 1,
      "message": "You only want to do this if it\u0027s an admin queue (nvme_qpair_is_admin_queue())",
      "revId": "1a095fe108b744bffe447986adf81b8bff228e7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29575856_2fc7a0ac",
        "filename": "lib/nvme/nvme_rdma.c",
        "patchSetId": 9
      },
      "lineNbr": 1658,
      "author": {
        "id": 1011262
      },
      "writtenOn": "2018-11-09T10:40:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c07d233d_b04d13c7",
      "revId": "1a095fe108b744bffe447986adf81b8bff228e7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c3f7831_8c267a78",
        "filename": "lib/nvme/nvme_rdma.c",
        "patchSetId": 9
      },
      "lineNbr": 1658,
      "author": {
        "id": 1011262
      },
      "writtenOn": "2018-12-03T13:12:43Z",
      "side": 1,
      "message": "I found out that disconnect related events don’t come on admin queue. Both CM events (when I pull out a cable) and IBV events (when I turn down network interface) are not present for admin queue, but instead I’m getting them for other qpairs. Because of that I actually have to check it for all qpairs. Any suggestions how can I do this on single thread so that we won\u0027t loose a performance?",
      "parentUuid": "29575856_2fc7a0ac",
      "revId": "1a095fe108b744bffe447986adf81b8bff228e7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8226d317_1fdf0554",
        "filename": "lib/nvme/nvme_rdma.c",
        "patchSetId": 9
      },
      "lineNbr": 1658,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-12-06T17:08:14Z",
      "side": 1,
      "message": "The events come in on the event channel which can be shared across all of the queue pairs for a given controller or on the ibv_async_event call which is based on a file descriptor in the ibv_context which is again shared across all qpairs. You should be able to poll these two mechanisms just when the admin queue is polled and receive events for all qpairs in the system.",
      "parentUuid": "6c3f7831_8c267a78",
      "revId": "1a095fe108b744bffe447986adf81b8bff228e7c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}