{
  "comments": [
    {
      "key": {
        "uuid": "279c941a_9a0ee2d4",
        "filename": "scripts/rpc.py",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-03-10T11:13:14Z",
      "side": 1,
      "message": "subsystems?",
      "range": {
        "startLine": 28,
        "startChar": 66,
        "endLine": 28,
        "endChar": 77
      },
      "revId": "63114041c07c10b134a915f724eb5c4e2a348340",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f91e9bba_867c1d70",
        "filename": "scripts/rpc/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-03-10T11:28:51Z",
      "side": 1,
      "message": "For example, concatenate \"initialize_\", elem[\u0027subsystem\u0027], and \"_subsystem\" into a string ?",
      "range": {
        "startLine": 27,
        "startChar": 20,
        "endLine": 27,
        "endChar": 37
      },
      "revId": "63114041c07c10b134a915f724eb5c4e2a348340",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b59fd3e_6b07e6c0",
        "filename": "scripts/rpc/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-03-10T11:28:51Z",
      "side": 1,
      "message": "Is this \"method\"?",
      "range": {
        "startLine": 27,
        "startChar": 12,
        "endLine": 27,
        "endChar": 18
      },
      "revId": "63114041c07c10b134a915f724eb5c4e2a348340",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d1dce81_82f7521d",
        "filename": "scripts/rpc/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-03-10T17:19:12Z",
      "side": 1,
      "message": "No, this is subsystem name for \u0027get_subsystem_config\u0027 in line 31. Tge python JSON RPC lack of needed API so I need to craft RPC commands by hand. Such API should be added in separate patch.",
      "parentUuid": "3b59fd3e_6b07e6c0",
      "range": {
        "startLine": 27,
        "startChar": 12,
        "endLine": 27,
        "endChar": 18
      },
      "revId": "63114041c07c10b134a915f724eb5c4e2a348340",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9731b115_3aaff856",
        "filename": "scripts/rpc/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-03-11T03:45:55Z",
      "side": 1,
      "message": "Thank you so much, Pawel, I understood.\n\nThe format of save_config will be the following?\n\n\"subsystems\": {\n  {\n    \"subsystem\": name,\n    \"config\": {\"method\": method, \"params\": { }}\n  },\n  {\n    \"subsystem\": name,\n    \"config\": {\"method\": method, \"params\": { }}\n  }\n}\n\nAnd creating the following will be the role of the handler of get_subsystems() RPC?\n\n  {\n    \"subsystem\": name,\n    \"config\": {\"method\": method, \"params\": { }}\n  }\n\nIt will be great if so. Otherwise please revise my understanding.",
      "parentUuid": "3d1dce81_82f7521d",
      "range": {
        "startLine": 27,
        "startChar": 12,
        "endLine": 27,
        "endChar": 18
      },
      "revId": "63114041c07c10b134a915f724eb5c4e2a348340",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1d55fd5_99b174c7",
        "filename": "scripts/rpc/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-03-11T10:45:53Z",
      "side": 1,
      "message": "\u003e \"config\": {\"method\": method, \"params\": { }}\n\u003e ...\n\u003e And creating the following will be the role of the handler of get_subsystems() RPC?\n\nYes, with the diff that \u0027config\u0027 is an list not an object (you can see that load_config function iterate over \u0027config\u0027).",
      "parentUuid": "9731b115_3aaff856",
      "range": {
        "startLine": 27,
        "startChar": 12,
        "endLine": 27,
        "endChar": 18
      },
      "revId": "63114041c07c10b134a915f724eb5c4e2a348340",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f70b044_d3583ca4",
        "filename": "scripts/rpc/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-03-12T00:45:04Z",
      "side": 1,
      "message": "I can see it, thank you.",
      "parentUuid": "f1d55fd5_99b174c7",
      "range": {
        "startLine": 27,
        "startChar": 12,
        "endLine": 27,
        "endChar": 18
      },
      "revId": "63114041c07c10b134a915f724eb5c4e2a348340",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6f646f2_76033662",
        "filename": "scripts/rpc/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-03-11T03:45:55Z",
      "side": 1,
      "message": "We should be able to use the pretty print function. How about adding the following?\n\n    if args.indent:\n        ind \u003d int(args.indent)\n    else:\n        ind \u003d None\n    if args.key_sep and args.item_sep:\n        ksep \u003d args.key_sep\n        isep \u003d args.item_sep\n        seps \u003d (ksep, isep)\n    else:\n        seps \u003d None\n    with open(filename, \u0027w\u0027) as json_file:\n        json.dump(conf, json_file, indent\u003dind, separators\u003dseps)",
      "range": {
        "startLine": 36,
        "startChar": 8,
        "endLine": 36,
        "endChar": 41
      },
      "revId": "63114041c07c10b134a915f724eb5c4e2a348340",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28be4a66_4ae600a9",
        "filename": "scripts/rpc/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-03-11T10:45:53Z",
      "side": 1,
      "message": "Sure, this is a good idea.",
      "parentUuid": "f6f646f2_76033662",
      "range": {
        "startLine": 36,
        "startChar": 8,
        "endLine": 36,
        "endChar": 41
      },
      "revId": "63114041c07c10b134a915f724eb5c4e2a348340",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7dc212f6_f650ad5c",
        "filename": "scripts/rpc/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-03-12T14:11:22Z",
      "side": 1,
      "message": "Do we realy need custom separators here?",
      "parentUuid": "28be4a66_4ae600a9",
      "range": {
        "startLine": 36,
        "startChar": 8,
        "endLine": 36,
        "endChar": 41
      },
      "revId": "63114041c07c10b134a915f724eb5c4e2a348340",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42962165_de1a1ba4",
        "filename": "scripts/rpc/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-03-12T16:09:25Z",
      "side": 1,
      "message": "indent\u003d2 + default separators are fine for me.\nI will be positive even if you don\u0027t provide any options to pretty print\n\nI think if indent is optional, it may be useful for someone.\nBut if indent is None, we may expect (\u0027,\u0027, \u0027:\u0027) but actually (\u0027,\u0027, \u0027: \u0027) will be set.\nHence if we want to get the most compact representation, we have to specify both indent and separators.\n\nThat is why I proposed adding options.\nI hope these make sense to you.",
      "parentUuid": "7dc212f6_f650ad5c",
      "range": {
        "startLine": 36,
        "startChar": 8,
        "endLine": 36,
        "endChar": 41
      },
      "revId": "63114041c07c10b134a915f724eb5c4e2a348340",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30f1ea0b_cf727ec5",
        "filename": "scripts/rpc/__init__.py",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-03-11T07:40:46Z",
      "side": 1,
      "message": "Thank you, this iteration is very nice!",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 48,
        "endChar": 40
      },
      "revId": "63114041c07c10b134a915f724eb5c4e2a348340",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}