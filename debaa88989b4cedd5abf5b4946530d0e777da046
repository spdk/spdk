{
  "comments": [
    {
      "key": {
        "uuid": "fe01eb59_147c3e29",
        "filename": "include/spdk/stdinc.h",
        "patchSetId": 7
      },
      "lineNbr": 48,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2017-11-13T18:14:18Z",
      "side": 1,
      "message": "aio.h is a POSIX header, not standard C, so this is in the wrong section.\n\nHowever, see my comment in the other file - I don\u0027t think we want to include aio.h at all, since that is the POSIX AIO interface, rather than Linux AIO.",
      "revId": "debaa88989b4cedd5abf5b4946530d0e777da046",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1090a53d_65806c4b",
        "filename": "lib/bdev/aio/bdev_aio.c",
        "patchSetId": 7
      },
      "lineNbr": 245,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2017-11-13T18:14:18Z",
      "side": 1,
      "message": "Does aio_cancel() actually work in this case? We are using Linux AIO (libaio), not POSIX AIO, so I would have expected  io_cancel() to be the correct call.",
      "revId": "debaa88989b4cedd5abf5b4946530d0e777da046",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e27b2611_50944d91",
        "filename": "lib/bdev/aio/bdev_aio.c",
        "patchSetId": 7
      },
      "lineNbr": 245,
      "author": {
        "id": 1011231
      },
      "writtenOn": "2017-11-14T00:46:18Z",
      "side": 1,
      "message": "thanks Daniel for the detail, actually it make no difference if we add this function here or not, it will resolve the issue anyway, I just suppose we should do the work cancel the pending IO and reset the controller here later.",
      "parentUuid": "1090a53d_65806c4b",
      "revId": "debaa88989b4cedd5abf5b4946530d0e777da046",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13fc1fa0_0142baa8",
        "filename": "lib/bdev/aio/bdev_aio.c",
        "patchSetId": 7
      },
      "lineNbr": 247,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2017-11-14T00:53:14Z",
      "side": 1,
      "message": "I think Daniel is right and you should use io_cancel().\n\n\nAt first I feedback to your code by code reading.\n\n- If you use io_cancel(), you should invoke io_cancel() per AIO block.\n\n- If aio_cancel() successfully cancels a block, the block will never be placed into the completion queue even if io_getevents() infinitely.\n- Hence fdisk-\u003eio_inflight will never become 0 for some cases.\n\nThen, I feedback to your code by evaluation and investigation.\n\n- As long as I know, io_cancel() is not implemented in block and most file systems yet. (For block devices we confirmed/evaluated it a few months ago.\n\n- If this is still correct, aio_cancel() will be NOP.\nHence this code will not cause any error.\n\n- However, your code may misleading.",
      "range": {
        "startLine": 246,
        "startChar": 0,
        "endLine": 247,
        "endChar": 30
      },
      "revId": "debaa88989b4cedd5abf5b4946530d0e777da046",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}