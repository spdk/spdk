{
  "comments": [
    {
      "key": {
        "uuid": "94b0ed0c_207ed478",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 41
      },
      "lineNbr": 1495,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2017-09-20T00:34:51Z",
      "side": 1,
      "message": "You can skip this step - the masks will get flushed out when the user does the next clean shutdown.",
      "revId": "e0a8ef6d005838255162673a475f13fde347f79f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62c151f0_6facbd0d",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 41
      },
      "lineNbr": 1495,
      "author": {
        "id": 1011231
      },
      "writtenOn": "2017-09-21T00:00:34Z",
      "side": 1,
      "message": "but the mask will be modified in the running time, so I suppose we still need set the mask correctly.",
      "parentUuid": "94b0ed0c_207ed478",
      "revId": "e0a8ef6d005838255162673a475f13fde347f79f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16ed47c9_7654e090",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 41
      },
      "lineNbr": 1524,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2017-09-20T00:34:51Z",
      "side": 1,
      "message": "You don\u0027t need to do this step here. This will get written out when the user does the next clean shutdown anyway.",
      "revId": "e0a8ef6d005838255162673a475f13fde347f79f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af0a995d_076b630c",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 41
      },
      "lineNbr": 1524,
      "author": {
        "id": 1011231
      },
      "writtenOn": "2017-09-21T00:00:34Z",
      "side": 1,
      "message": "but the mask will be modified in the following running time, so I suppose we still need set the mask correctly.",
      "parentUuid": "16ed47c9_7654e090",
      "revId": "e0a8ef6d005838255162673a475f13fde347f79f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "707c7a8d_ffd86fd8",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 41
      },
      "lineNbr": 1555,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2017-09-20T00:34:51Z",
      "side": 1,
      "message": "I don\u0027t think you need the \u0027page\u0027 argument here. It\u0027s ctx-\u003ecur_page.",
      "revId": "e0a8ef6d005838255162673a475f13fde347f79f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95993438_df867f7a",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 41
      },
      "lineNbr": 1578,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2017-09-20T00:34:51Z",
      "side": 1,
      "message": "The CRC matching doesn\u0027t necessarily mean the page is valid. The CRC not matching means the data corrupted, but we could get fluke CRC matches on invalid pages. Basically, the CRC detects bit rot, but not validity.\n\nThere are two parts to checking if a page is valid. First, you have to verify that the blobid in the page is the expected value. The blobid is calculated with this formula:\n\nid \u003d (1ULL \u003c\u003c 32) | page_idx;\n\nYou know the page index (page_num in your code), so verify that it is correct. Second, one of two conditions must also be true:\n\n1) sequence_num is 0 (indicating this page is the start of a metadata page chain)\n2) sequence_num is non-zero and a known valid page\u0027s next pointer is pointing at it.\n\nIt\u0027s easy to verify #1, but hard to work out case #2. Your code below is mostly doing the right thing though - when you hit condition #1, chase the chain until it ends, then go back to reading the pages in order.",
      "revId": "e0a8ef6d005838255162673a475f13fde347f79f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e7abfa5_c7dfda9e",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 41
      },
      "lineNbr": 1578,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2017-09-20T01:51:08Z",
      "side": 1,
      "message": "So if you\u0027re still reading these Ben I\u0027m curious about these additional checks. How could they *not* match other than a page being incomplete (torn)? SW bug? Then asserts would be more appropriate. Or, is there another way something could get messed up? We could cross check al sorts of things all over the place but that doesn\u0027t seem like it\u0027d make any sense for \u0027production\u0027 code.",
      "parentUuid": "95993438_df867f7a",
      "revId": "e0a8ef6d005838255162673a475f13fde347f79f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d252f0a_50fdf32b",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 41
      },
      "lineNbr": 1578,
      "author": {
        "id": 1011231
      },
      "writtenOn": "2017-09-21T01:25:32Z",
      "side": 1,
      "message": "Hi Ben, yes, previously I also tried the method you mentioned about 2), make the md pages chain as double linked and go through all md pages in order, and if the md is not 0, try to find all the upstream md pages until the first md page(sequence num is 0), but it seems make the logic too complex, the logic now is much more simple and also do the same work. for the md page valid check, I use the reserved field before, Paul\u0027s comments is the crc is make more sense, I am OK with your propose to use the page id. So I will leave both CRC check and page id check in the code, you can discuss about this little more.",
      "parentUuid": "95993438_df867f7a",
      "revId": "e0a8ef6d005838255162673a475f13fde347f79f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "044c20c4_8f792762",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 41
      },
      "lineNbr": 1580,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2017-09-20T00:34:51Z",
      "side": 1,
      "message": "Can you use the regular page parsing function here?",
      "revId": "e0a8ef6d005838255162673a475f13fde347f79f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1bd783c_a8df35f0",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 41
      },
      "lineNbr": 1580,
      "author": {
        "id": 1011231
      },
      "writtenOn": "2017-09-21T00:27:50Z",
      "side": 1,
      "message": "you mean the function _spdk_blob_parse_page()? the function here is not exactly the same as _spdk_blob_parse_page().",
      "parentUuid": "044c20c4_8f792762",
      "revId": "e0a8ef6d005838255162673a475f13fde347f79f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5596327_e07a3e19",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 41
      },
      "lineNbr": 1581,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2017-09-20T00:34:51Z",
      "side": 1,
      "message": "Maybe name \"md_page_valid\" \"in_page_chain\"",
      "revId": "e0a8ef6d005838255162673a475f13fde347f79f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04d208cc_73b8a87b",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 41
      },
      "lineNbr": 1760,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2017-09-20T00:34:51Z",
      "side": 1,
      "message": "To make it clear that the logic is forking here, I would put the code from lines 1787 to 1801 in an \u0027else\u0027 clause with this if statement.",
      "revId": "e0a8ef6d005838255162673a475f13fde347f79f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6014d34_48351532",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 41
      },
      "lineNbr": 1836,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2017-09-20T00:34:51Z",
      "side": 1,
      "message": "If clean is 0 here, you don\u0027t need to write it to 0 on line 1840. Just skip that step.",
      "revId": "e0a8ef6d005838255162673a475f13fde347f79f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}