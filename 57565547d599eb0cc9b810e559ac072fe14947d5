{
  "comments": [
    {
      "key": {
        "uuid": "a983bafd_defe824f",
        "filename": "lib/bdev/rpc/bdev_rpc.c",
        "patchSetId": 7
      },
      "lineNbr": 593,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-07-10T21:12:52Z",
      "side": 1,
      "message": "We\u0027ve been going back and forth on this, but I think ultimately we should only add one RPC to configure QoS. In that RPC, the user can specify each type of limit they want, all at once, as a JSON dictionary. That will remove a lot of the repeated boilerplate code in this patch series.",
      "revId": "57565547d599eb0cc9b810e559ac072fe14947d5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0954ea9_e3011c7e",
        "filename": "lib/bdev/rpc/bdev_rpc.c",
        "patchSetId": 7
      },
      "lineNbr": 593,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2018-07-10T22:46:40Z",
      "side": 1,
      "message": "Agreed. So in this way, I will modify the current RPC methon (set_bdev_qos_limit_iops) to set_bdev_qos_limit and add some optional parameters like (-l IOPS or -l BPS) where l stands for limit. The default can be IOPS limit. This can eliminate much duplicated code here. Is this proposal OK for you. Thanks, Gang.\nMy current change is try to backward compatibility and not modify the existing set_bdev_qos_limit_iops RPC method. So that to introduce this new one. If it\u0027s no problem to update the existing method, I will start to change it.",
      "parentUuid": "a983bafd_defe824f",
      "revId": "57565547d599eb0cc9b810e559ac072fe14947d5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ea9e2fc_a1e21749",
        "filename": "lib/bdev/rpc/bdev_rpc.c",
        "patchSetId": 7
      },
      "lineNbr": 593,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-07-11T00:55:19Z",
      "side": 1,
      "message": "Yes - let\u0027s add a new one, and mark the old/existing one as deprecated in the CHANGELOG.  Then next release we will remove it.\n\nThe RPC should allow the caller to specify multiple limits at once.  The rpc.py script can use the optional parameters like you describe.  Maybe rpc.py only sets one limit at a time, but the RPC itself should support multiple.",
      "parentUuid": "b0954ea9_e3011c7e",
      "revId": "57565547d599eb0cc9b810e559ac072fe14947d5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}