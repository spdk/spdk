{
  "comments": [
    {
      "key": {
        "uuid": "b5afff23_e1512460",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 2300,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-12-28T09:11:29Z",
      "side": 1,
      "message": "Hi, if num_bytes is 513 and bdev-\u003eblocklen is 512, this API should return error. Hence I think just rightshift is OK too.\n\nI may be wrong but this is bdev layer and current bdev layer and bdev modules may not work as expected if num_bytes is not power of bdev-\u003eblocklen and I don\u0027t know such a use case yet (of course could be).",
      "range": {
        "startLine": 2300,
        "startChar": 30,
        "endLine": 2300,
        "endChar": 97
      },
      "revId": "7e9c09bdb879cb1e53d920ae73b1879766efb038",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4e78228_abe68e39",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 2300,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-12-28T09:29:05Z",
      "side": 1,
      "message": "NVMe might be formatted that block size is not a power of two but I don\u0027t know if we support this in SPDK.",
      "parentUuid": "b5afff23_e1512460",
      "range": {
        "startLine": 2300,
        "startChar": 30,
        "endLine": 2300,
        "endChar": 97
      },
      "revId": "7e9c09bdb879cb1e53d920ae73b1879766efb038",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b9dff40_4c5c8afd",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 2300,
      "author": {
        "id": 1015656
      },
      "writtenOn": "2018-12-28T09:34:51Z",
      "side": 1,
      "message": "Oh I see. The semanteme of this function is returning error if offset_bytes and num_bytes not aligned. Currently all the calls of this function are in bdev/bdev.c and all of them check its return code. There\u0027s no need to guarantee the correctness of num_blocks if the function returns error. So I think just right shift is appropriate due to its semanteme. \n\nI\u0027ll change the two points exposed in review and re-post my patch later.",
      "parentUuid": "b5afff23_e1512460",
      "range": {
        "startLine": 2300,
        "startChar": 30,
        "endLine": 2300,
        "endChar": 97
      },
      "revId": "7e9c09bdb879cb1e53d920ae73b1879766efb038",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65477979_c3bf92aa",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 2311,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-12-27T17:40:11Z",
      "side": 1,
      "message": "I\u0027m not sure if this is needed. Like in line 2315 this should just rightshift.",
      "range": {
        "startLine": 2311,
        "startChar": 26,
        "endLine": 2311,
        "endChar": 43
      },
      "revId": "7e9c09bdb879cb1e53d920ae73b1879766efb038",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33f2374b_6ddcab54",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 2311,
      "author": {
        "id": 1015656
      },
      "writtenOn": "2018-12-28T04:32:42Z",
      "side": 1,
      "message": "I think the original line 2315 `*num_blocks \u003d num_bytes / block_size;`\t\ncan\u0027t calculate the num_blocks right if num_bytes isn\u0027t divided exactly by the block size.\n\nFor example, if blocklen is 512 bytes and shift_cnt is 9,\nfor num_bytes from 1 to 512, num_blocks should be 1,\nfor num_bytes from 513 to 1024, num_blocks should be 2.\n\n# Use directly shift `num_bytes \u003e\u003e block_shift` or `num_bytes / block_size` in div format:\n1\u003e\u003e9\u003d0, 2\u003e\u003e9\u003d0, ..., 511\u003e\u003e9\u003d0, 512\u003e\u003e9\u003d1, 513\u003e\u003e9\u003d1, ...\n\nSo the result of num_bytes in (1, 2, .., 511, 513) is wrong.\n\n# Use `(num_bytes + block_size - 1) \u003e\u003e block_shift`:\n(1+511)\u003e\u003e9\u003d1, (2+511)\u003e\u003e9\u003d1, ..., (511+511)\u003e\u003e9\u003d1, (512+511)\u003e\u003e9\u003d1, (513+511)\u003e\u003e9\u003d2, ...\n\nSo we could get the right num_blocks from any input num_bytes in this way.\n\nTraditionally num_bytes of a request to block device should be divided exactly by the block size. But as a new comer I don\u0027t know if there\u0027s any special case in SPDK\u0027s application.",
      "parentUuid": "65477979_c3bf92aa",
      "range": {
        "startLine": 2311,
        "startChar": 26,
        "endLine": 2311,
        "endChar": 43
      },
      "revId": "7e9c09bdb879cb1e53d920ae73b1879766efb038",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92781853_330e6ed3",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 2311,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-12-28T09:29:05Z",
      "side": 1,
      "message": "This function serves two purposes:\n\nfirst: convert from bytes to blocks\n\nsecond: return value !\u003d 0 if offset_bytes or num_bytes is not exact multiple of block_size (see spdk_bdev_read). In this case IO is aborted anyway so no rounding up is needed nor it is desired as buffer provided by user might be too small to hold whole additional block.",
      "parentUuid": "33f2374b_6ddcab54",
      "range": {
        "startLine": 2311,
        "startChar": 26,
        "endLine": 2311,
        "endChar": 43
      },
      "revId": "7e9c09bdb879cb1e53d920ae73b1879766efb038",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b401272_ac32db4c",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 2311,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-12-28T09:29:05Z",
      "side": 1,
      "message": "This function serves two purposes:\n\nfirst: convert from bytes to blocks\n\nsecond: return value !\u003d 0 if offset_bytes or num_bytes is not exact multiple of block_size (see spdk_bdev_read). In this case IO is aborted anyway so no rounding up is needed nor it is desired as buffer provided by user might be too small to hold whole additional block.",
      "parentUuid": "33f2374b_6ddcab54",
      "range": {
        "startLine": 2311,
        "startChar": 26,
        "endLine": 2311,
        "endChar": 43
      },
      "revId": "7e9c09bdb879cb1e53d920ae73b1879766efb038",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93133ec9_3e7bc794",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 2317,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-12-27T17:40:11Z",
      "side": 1,
      "message": "I think this should be moved into \u0027else { }\u0027 block.\n\nIf block_size is pow2 this should be implemented using left shift like\n\n  uint8_t shift_cnt \u003d spdk_u32log2(block_size);\n  ...\n  return (offset_bytes - (*offset_blocks \u003c\u003c shift_cnt)) | (num_bytes - (*num_blocks \u003c\u003c shift_cnt));\n\nOtherwise if \u0027%\u0027 is used the compiler most likely will do the division to get the remainder anyway.",
      "range": {
        "startLine": 2317,
        "startChar": 1,
        "endLine": 2317,
        "endChar": 63
      },
      "revId": "7e9c09bdb879cb1e53d920ae73b1879766efb038",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6056d27d_044e8fa0",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 2317,
      "author": {
        "id": 1015656
      },
      "writtenOn": "2018-12-28T04:32:42Z",
      "side": 1,
      "message": "I agree with your excellent solution.",
      "parentUuid": "93133ec9_3e7bc794",
      "range": {
        "startLine": 2317,
        "startChar": 1,
        "endLine": 2317,
        "endChar": 63
      },
      "revId": "7e9c09bdb879cb1e53d920ae73b1879766efb038",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}