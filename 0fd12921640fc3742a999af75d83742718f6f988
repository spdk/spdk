{
  "comments": [
    {
      "key": {
        "uuid": "fd6052f1_a612f025",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 29
      },
      "lineNbr": 1052,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2018-01-29T11:07:16Z",
      "side": 1,
      "message": "Updated UT code has covered this new code path at http://spdk.intel.com/public/spdk/builds/review/9398cebaba6cc2fb6e1519c8b685d39d68f64437.1517203926/coverage/lib/bdev/bdev.c.gcov.html",
      "range": {
        "startLine": 1052,
        "startChar": 0,
        "endLine": 1052,
        "endChar": 34
      },
      "revId": "0fd12921640fc3742a999af75d83742718f6f988",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2516beda_9b940fb2",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 29
      },
      "lineNbr": 1052,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-01-29T13:16:16Z",
      "side": 1,
      "message": "Thank you so much.",
      "parentUuid": "fd6052f1_a612f025",
      "range": {
        "startLine": 1052,
        "startChar": 0,
        "endLine": 1052,
        "endChar": 34
      },
      "revId": "0fd12921640fc3742a999af75d83742718f6f988",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b26a762_b88895a9",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 29
      },
      "lineNbr": 1068,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-01-29T23:31:40Z",
      "side": 1,
      "message": "This block is as same as the following block, line 1089 to 1107.\nIs it better to extract this block into a function and apply it to the following block too? New function name is _spdk_bdev_qos_channel_create()?",
      "range": {
        "startLine": 1056,
        "startChar": 0,
        "endLine": 1068,
        "endChar": 2
      },
      "revId": "0fd12921640fc3742a999af75d83742718f6f988",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e534874_a13a4a3a",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 29
      },
      "lineNbr": 1068,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2018-01-30T03:58:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b26a762_b88895a9",
      "range": {
        "startLine": 1056,
        "startChar": 0,
        "endLine": 1068,
        "endChar": 2
      },
      "revId": "0fd12921640fc3742a999af75d83742718f6f988",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8eaf12d_15ba439a",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 29
      },
      "lineNbr": 1263,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-01-29T23:31:40Z",
      "side": 1,
      "message": "It looks that \nfunc() calls _func1() may be better than _func1() calls func1(). \n\nno_underscore_prefix function calling underscore_prefix function may be better hierarchy.\n\nHow do you think removing \u0027_\u0027 from the line 1256 and adding \u0027_\u0027 to the line 1113?",
      "range": {
        "startLine": 1263,
        "startChar": 1,
        "endLine": 1263,
        "endChar": 30
      },
      "revId": "0fd12921640fc3742a999af75d83742718f6f988",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c41dfe2_645bfcd6",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 29
      },
      "lineNbr": 1263,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2018-01-30T03:58:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d8eaf12d_15ba439a",
      "range": {
        "startLine": 1263,
        "startChar": 1,
        "endLine": 1263,
        "endChar": 30
      },
      "revId": "0fd12921640fc3742a999af75d83742718f6f988",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b028b52_b1afee7a",
        "filename": "test/unit/lib/bdev/mt/bdev.c/bdev_ut.c",
        "patchSetId": 29
      },
      "lineNbr": 785,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-01-29T23:31:40Z",
      "side": 1,
      "message": "Can you test\n- first io was submitted\n- second io was still queued in the qos_io queue?\n\nYou says \"only 1 IO allowed per msec. More IOs will be queued.\" but it looks that both IOs completes successfully.",
      "range": {
        "startLine": 784,
        "startChar": 1,
        "endLine": 785,
        "endChar": 51
      },
      "revId": "0fd12921640fc3742a999af75d83742718f6f988",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69dd26e8_86ee2a44",
        "filename": "test/unit/lib/bdev/mt/bdev.c/bdev_ut.c",
        "patchSetId": 29
      },
      "lineNbr": 785,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2018-01-30T04:03:26Z",
      "side": 1,
      "message": "Good question. This kind of testing is added at https://review.gerrithub.io/#/c/396531/5/test/unit/lib/bdev/mt/bdev.c/bdev_ut.c where I added a new change on poll_threads().\n\nThanks.",
      "parentUuid": "7b028b52_b1afee7a",
      "range": {
        "startLine": 784,
        "startChar": 1,
        "endLine": 785,
        "endChar": 51
      },
      "revId": "0fd12921640fc3742a999af75d83742718f6f988",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "643da010_7c306e94",
        "filename": "test/unit/lib/bdev/mt/bdev.c/bdev_ut.c",
        "patchSetId": 29
      },
      "lineNbr": 785,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2018-01-30T04:06:49Z",
      "side": 1,
      "message": "Also here I\u0027ve added the comment \"execute the QoS poller\", it will run in each \"poll_threads()\" operation to invoke the QoS poller and sends the queued IO on the list. So in the other patch, I\u0027ve added a parameter for poll_threads() to not invoke the QoS poller to handle the queued IOs.\n\nThanks for mentioning this.",
      "parentUuid": "7b028b52_b1afee7a",
      "range": {
        "startLine": 784,
        "startChar": 1,
        "endLine": 785,
        "endChar": 51
      },
      "revId": "0fd12921640fc3742a999af75d83742718f6f988",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}