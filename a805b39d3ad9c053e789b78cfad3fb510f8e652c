{
  "comments": [
    {
      "key": {
        "uuid": "79dfab78_5b227e88",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 31
      },
      "lineNbr": 1281,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-01-16T19:34:43Z",
      "side": 1,
      "message": "in general - the lba_count variables in this patch are confusing\n\nsometimes it means lba_count in the blob, other times it is the converted lba_count to the backing bs_dev\n\nthe names really need to clarify this - something like lba_count_blob and lba_count_back_dev",
      "revId": "a805b39d3ad9c053e789b78cfad3fb510f8e652c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8eb9655_4da44c21",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 31
      },
      "lineNbr": 1281,
      "author": {
        "id": 1011262
      },
      "writtenOn": "2018-01-19T13:02:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "79dfab78_5b227e88",
      "revId": "a805b39d3ad9c053e789b78cfad3fb510f8e652c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86a17f80_aa75c62e",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 31
      },
      "lineNbr": 1294,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-01-16T19:34:43Z",
      "side": 1,
      "message": "The name of this function (and also writev and write_zeroes variants below) do not really match what this function does.\n\nHow about _spdk_blob_write_after_allocate or _spdk_blob_write_after_copy?",
      "revId": "a805b39d3ad9c053e789b78cfad3fb510f8e652c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97df38be_c1af2dd9",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 31
      },
      "lineNbr": 1294,
      "author": {
        "id": 1011262
      },
      "writtenOn": "2018-01-19T13:02:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "86a17f80_aa75c62e",
      "revId": "a805b39d3ad9c053e789b78cfad3fb510f8e652c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "463da144_8ea6ab89",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 31
      },
      "lineNbr": 1305,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-01-16T19:34:43Z",
      "side": 1,
      "message": "comment is incorrect",
      "revId": "a805b39d3ad9c053e789b78cfad3fb510f8e652c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24f0b172_b8d3f048",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 31
      },
      "lineNbr": 1305,
      "author": {
        "id": 1011262
      },
      "writtenOn": "2018-01-19T13:02:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "463da144_8ea6ab89",
      "revId": "a805b39d3ad9c053e789b78cfad3fb510f8e652c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf5f11a2_cf0a2340",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 31
      },
      "lineNbr": 1322,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-01-16T19:34:43Z",
      "side": 1,
      "message": "comment is incorrect",
      "revId": "a805b39d3ad9c053e789b78cfad3fb510f8e652c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89d05db8_f080442f",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 31
      },
      "lineNbr": 1322,
      "author": {
        "id": 1011262
      },
      "writtenOn": "2018-01-19T13:02:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf5f11a2_cf0a2340",
      "revId": "a805b39d3ad9c053e789b78cfad3fb510f8e652c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c4bc2b6_ce1d77b6",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 31
      },
      "lineNbr": 1340,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-01-16T19:34:43Z",
      "side": 1,
      "message": "comment is incorrect",
      "revId": "a805b39d3ad9c053e789b78cfad3fb510f8e652c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbb1d0cd_880653e7",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 31
      },
      "lineNbr": 1340,
      "author": {
        "id": 1011262
      },
      "writtenOn": "2018-01-19T13:02:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3c4bc2b6_ce1d77b6",
      "revId": "a805b39d3ad9c053e789b78cfad3fb510f8e652c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45c8e82a_5fcd5b2f",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 31
      },
      "lineNbr": 1402,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-01-16T19:34:43Z",
      "side": 1,
      "message": "_spdk_bs_allocate_cluster() will put the new cluster immediately into the blob\u0027s cluster array.  What happens if user issues a read to this cluster before the backing device data has been read and written to this cluster?  I think we would return invalid data to the user.",
      "revId": "a805b39d3ad9c053e789b78cfad3fb510f8e652c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "676093de_17e2a1b9",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 31
      },
      "lineNbr": 1402,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-01-16T22:12:43Z",
      "side": 1,
      "message": "Let\u0027s keep this code as you have it for now.  I\u0027m working on a blobstore patch that would enable queuing of user requests.  Once we have that in place, we can do the following:\n\nif cluster is not allocated\n  if a cluster allocation is already in progress on this channel\n    queue the user request\n  else\n    allocate a cluster but do *not* put it in the blob\u0027s cluster array\n    set a flag in the channel that an allocation is in progress\n\nThen after the updated cluster has been written out, grab a lock and update the blob\u0027s cluster array.  If that cluster has already been allocated by another channel, throw away the allocated cluster and redo the operation on the other cluster instead.",
      "parentUuid": "45c8e82a_5fcd5b2f",
      "revId": "a805b39d3ad9c053e789b78cfad3fb510f8e652c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e74505cb_f3696200",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 31
      },
      "lineNbr": 1422,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-01-16T19:34:43Z",
      "side": 1,
      "message": "does it need to be aligned like this (second parameter)?\n\nrequesting a bigger alignment than necessary can waste memory",
      "revId": "a805b39d3ad9c053e789b78cfad3fb510f8e652c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2fa07149_88408bfe",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 31
      },
      "lineNbr": 1422,
      "author": {
        "id": 1011262
      },
      "writtenOn": "2018-01-19T13:02:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e74505cb_f3696200",
      "revId": "a805b39d3ad9c053e789b78cfad3fb510f8e652c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "044b5e4c_388a5b07",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 31
      },
      "lineNbr": 1475,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-01-16T19:34:43Z",
      "side": 1,
      "message": "We should not increment outstanding_ops directly here.  This should be done through a request.h interface instead.",
      "revId": "a805b39d3ad9c053e789b78cfad3fb510f8e652c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a7481fc_c3046cad",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 31
      },
      "lineNbr": 1475,
      "author": {
        "id": 1011262
      },
      "writtenOn": "2018-01-19T13:02:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "044b5e4c_388a5b07",
      "revId": "a805b39d3ad9c053e789b78cfad3fb510f8e652c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f5cbe2c_64048cd3",
        "filename": "test/unit/lib/blob/blob.c/blob_ut.c",
        "patchSetId": 31
      },
      "lineNbr": 2831,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-01-16T19:34:43Z",
      "side": 1,
      "message": "should be 10 * 4096",
      "revId": "a805b39d3ad9c053e789b78cfad3fb510f8e652c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a4cdfa1_3d5e9a55",
        "filename": "test/unit/lib/blob/blob.c/blob_ut.c",
        "patchSetId": 31
      },
      "lineNbr": 2831,
      "author": {
        "id": 1011262
      },
      "writtenOn": "2018-01-19T13:02:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f5cbe2c_64048cd3",
      "revId": "a805b39d3ad9c053e789b78cfad3fb510f8e652c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06cd44f8_32c65985",
        "filename": "test/unit/lib/blob/blob.c/blob_ut.c",
        "patchSetId": 31
      },
      "lineNbr": 2839,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-01-16T19:34:43Z",
      "side": 1,
      "message": "10 * 4096",
      "revId": "a805b39d3ad9c053e789b78cfad3fb510f8e652c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31c7eceb_cab590a0",
        "filename": "test/unit/lib/blob/blob.c/blob_ut.c",
        "patchSetId": 31
      },
      "lineNbr": 2839,
      "author": {
        "id": 1011262
      },
      "writtenOn": "2018-01-19T13:02:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "06cd44f8_32c65985",
      "revId": "a805b39d3ad9c053e789b78cfad3fb510f8e652c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}