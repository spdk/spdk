{
  "comments": [
    {
      "key": {
        "uuid": "f2137542_06eb865d",
        "filename": "lib/nvme/nvme_internal.h",
        "patchSetId": 5
      },
      "lineNbr": 334,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-10-08T23:14:48Z",
      "side": 1,
      "message": "Please let\u0027s find a way to fix this without adding this status field.  This will have a major impact on performance. \n\nAt the very least, it needs to be put immediately after cpl, so that it fills the 4 byte hole there (and then won\u0027t dirty an extra cache line).\n\nBut it still adds extra logic on each I/O which would be nice to avoid if possible.",
      "revId": "7993aaee44866b88e74fbfecd85442b227868640",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e68e476_37d2db9e",
        "filename": "lib/nvme/nvme_qpair.c",
        "patchSetId": 5
      },
      "lineNbr": 678,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-10-08T23:18:58Z",
      "side": 1,
      "message": "what is the case where nvme_qpair_submit_request() is called with a req that has status !\u003d NEW?",
      "revId": "7993aaee44866b88e74fbfecd85442b227868640",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dacf43ee_ff3123a9",
        "filename": "lib/nvme/nvme_qpair.c",
        "patchSetId": 5
      },
      "lineNbr": 678,
      "author": {
        "id": 1011275
      },
      "writtenOn": "2019-10-08T23:25:24Z",
      "side": 1,
      "message": "nvme_qpair_submit_request can be called by _nvme_qpair_submit_request. So If a request is queued, then resubmit again, then \nnvme_qpair_resubmit_quest -\u003e _nvme_qpair_submit_quest -\u003e nvme_qpair_submit_request.\nThus, the req status could not be new.",
      "parentUuid": "5e68e476_37d2db9e",
      "revId": "7993aaee44866b88e74fbfecd85442b227868640",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a111c08a_56a19a5a",
        "filename": "lib/nvme/nvme_qpair.c",
        "patchSetId": 5
      },
      "lineNbr": 678,
      "author": {
        "id": 1011223
      },
      "writtenOn": "2019-10-09T16:11:46Z",
      "side": 1,
      "message": "That\u0027s not possible. The only time that we call nvme_qpair_submit_request from _nvme_qpair_submit_request is when a request is split into children. This only happens when submitting a new request.\n\nI believe you could accomplish this same thing with a local boolean in nvme_qpair_submit_request. This boolean could be called _req_requeue and you could rely on that when trying to determine if a request should be queued at the front or back of the queue.\n\nI also don\u0027t really agree with the idea of pulling something off the front of the queue and submitting it if we find the queue not empty. That\u0027s what the queueing in process_completions is for.",
      "parentUuid": "dacf43ee_ff3123a9",
      "revId": "7993aaee44866b88e74fbfecd85442b227868640",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}