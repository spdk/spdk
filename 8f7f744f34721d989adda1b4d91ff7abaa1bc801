{
  "comments": [
    {
      "key": {
        "uuid": "074c6701_ebd91592",
        "filename": "include/spdk/bdev.h",
        "patchSetId": 4
      },
      "lineNbr": 435,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2018-07-23T15:57:46Z",
      "side": 1,
      "message": "get --\u003e Get",
      "revId": "8f7f744f34721d989adda1b4d91ff7abaa1bc801",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef062210_78db2e68",
        "filename": "include/spdk/bdev.h",
        "patchSetId": 4
      },
      "lineNbr": 440,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-07-18T02:32:21Z",
      "side": 1,
      "message": "I think accumulated elapsed time is necessary if io_processing_time is added.",
      "revId": "8f7f744f34721d989adda1b4d91ff7abaa1bc801",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72b031ea_58f65b0c",
        "filename": "include/spdk/bdev.h",
        "patchSetId": 4
      },
      "lineNbr": 453,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-07-18T02:32:21Z",
      "side": 1,
      "message": "weighted_io_processing_time can be used to get average queue depth from the last call to this call?\nIf so, will you add any tips about how to use here?",
      "revId": "8f7f744f34721d989adda1b4d91ff7abaa1bc801",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7fbfea0f_b026d540",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 4
      },
      "lineNbr": 1681,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2018-07-23T15:57:46Z",
      "side": 1,
      "message": "would it be possible to (equivalent) to do this:\n\nif (time_differnce\u003e\u003d0)\n  return diff\nelse\n return UINT64_MAX",
      "revId": "8f7f744f34721d989adda1b4d91ff7abaa1bc801",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}