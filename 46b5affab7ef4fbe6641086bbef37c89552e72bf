{
  "comments": [
    {
      "key": {
        "uuid": "fd8853c2_1ed7b926",
        "filename": "test/app/fuzz/iscsi_fuzz/iscsi_fuzz.c",
        "patchSetId": 32
      },
      "lineNbr": 78,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-12-12T00:32:20Z",
      "side": 1,
      "message": "Maybe char *g_tgt_port \u003d \"3260\";",
      "revId": "46b5affab7ef4fbe6641086bbef37c89552e72bf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60ae103a_90a2ce08",
        "filename": "test/app/fuzz/iscsi_fuzz/iscsi_fuzz.c",
        "patchSetId": 32
      },
      "lineNbr": 126,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-12-12T00:32:20Z",
      "side": 1,
      "message": "What is the role of this flag?",
      "range": {
        "startLine": 126,
        "startChar": 10,
        "endLine": 126,
        "endChar": 19
      },
      "revId": "46b5affab7ef4fbe6641086bbef37c89552e72bf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7240aebc_0c1ed7d5",
        "filename": "test/app/fuzz/iscsi_fuzz/iscsi_fuzz.c",
        "patchSetId": 32
      },
      "lineNbr": 180,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-12-12T00:32:20Z",
      "side": 1,
      "message": "We can replace malloc + memset by calloc.",
      "revId": "46b5affab7ef4fbe6641086bbef37c89552e72bf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95687da1_9e898ece",
        "filename": "test/app/fuzz/iscsi_fuzz/iscsi_fuzz.c",
        "patchSetId": 32
      },
      "lineNbr": 184,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-12-12T00:32:20Z",
      "side": 1,
      "message": "These two lines are not necessary?",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 184,
        "endChar": 0
      },
      "revId": "46b5affab7ef4fbe6641086bbef37c89552e72bf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47e4d3a3_0010279d",
        "filename": "test/app/fuzz/iscsi_fuzz/iscsi_fuzz.c",
        "patchSetId": 32
      },
      "lineNbr": 196,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-12-12T00:32:20Z",
      "side": 1,
      "message": "we can skip creating stubs for mempool?",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 196,
        "endChar": 27
      },
      "revId": "46b5affab7ef4fbe6641086bbef37c89552e72bf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30e186a6_3459b638",
        "filename": "test/app/fuzz/iscsi_fuzz/iscsi_fuzz.c",
        "patchSetId": 32
      },
      "lineNbr": 240,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-12-12T00:32:20Z",
      "side": 1,
      "message": "free(task) is enough here? Then can we remove spdk_iscsi_fuzz_mempool_put() ?",
      "range": {
        "startLine": 240,
        "startChar": 1,
        "endLine": 240,
        "endChar": 28
      },
      "revId": "46b5affab7ef4fbe6641086bbef37c89552e72bf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e99fb6ac_c116bdc6",
        "filename": "test/app/fuzz/iscsi_fuzz/iscsi_fuzz.c",
        "patchSetId": 32
      },
      "lineNbr": 249,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-12-12T00:32:20Z",
      "side": 1,
      "message": "calloc(1, sizeof(*task)) is enough here? Then can we remove spdk_iscsi_fuzz_mempool_get() ?",
      "range": {
        "startLine": 249,
        "startChar": 7,
        "endLine": 249,
        "endChar": 60
      },
      "revId": "46b5affab7ef4fbe6641086bbef37c89552e72bf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d8c16c8_44e1f42e",
        "filename": "test/app/fuzz/iscsi_fuzz/iscsi_fuzz.c",
        "patchSetId": 32
      },
      "lineNbr": 388,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-12-12T00:32:20Z",
      "side": 1,
      "message": "spdk_free?",
      "range": {
        "startLine": 388,
        "startChar": 1,
        "endLine": 388,
        "endChar": 5
      },
      "revId": "46b5affab7ef4fbe6641086bbef37c89552e72bf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c98522f4_5636a733",
        "filename": "test/app/fuzz/iscsi_fuzz/iscsi_fuzz.c",
        "patchSetId": 32
      },
      "lineNbr": 472,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-12-12T00:32:20Z",
      "side": 1,
      "message": "we can use strtol(port, NULL, 10) or spdk_strtol(port, 10) here.",
      "range": {
        "startLine": 472,
        "startChar": 38,
        "endLine": 472,
        "endChar": 42
      },
      "revId": "46b5affab7ef4fbe6641086bbef37c89552e72bf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b4cd174_61bc3672",
        "filename": "test/app/fuzz/iscsi_fuzz/iscsi_fuzz.c",
        "patchSetId": 32
      },
      "lineNbr": 502,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-12-12T01:47:51Z",
      "side": 1,
      "message": "How about the code like the following?\nWe will be able to use these also for response PDUs during Full-Feature Phase.\nI got code from lib/iscsi.c.\n\n\nstatic int\niscsi_pdu_hdr_op_login_rsp(struct spdk_iscsi_conn *conn, struct spdk_iscsi_pdu *pdu)\n{\n\treturn 0;\n}\n\nstatic int\nfuzz_iscsi_pdu_hdr_handle(struct spdk_iscsi_conn *conn, struct spdk_iscsi_pdu *pdu)\n{\n\tint opcode;\n\tint rc \u003d 0;\n\n\topcode \u003d pdu-\u003ebhs.opcode;\n\n\tif (opcode \u003d\u003d ISCSI_OP_LOGIN_RSP) {\n\t\treturn iscsi_pdu_hdr_op_login_rsp(conn, pdu);\n\t}\n\n\tswitch (opcode) {\n\tcase ISCSI_OP_NOPIN:\n\tcase ISCSI_OP_SCSI_RSP:\n\tcase ISCSI_OP_TASK_RSP:\n\tcase ISCSI_OP_TEXT_RSP:\n\tcase ISCSI_OP_SCSI_DATAIN:\n\tcase ISCSI_OP_LOGOUT_RSP:\n\tcase ISCSI_OP_R2T:\n\tcase ISCSI_OP_ASYNC:\n\tcase ISCSI_OP_VENDOR_3C:\n\tcase ISCSI_OP_VENDOR_3D:\n\tcase ISCSI_OP_VENDOR_3E:\n\tcase ISCSI_OP_REJECT:\n\tdefault:\n\t\trc \u003d -1;\n\t\tbreak;\n\t}\n\n\treturn rc;\n}\n\nstatic int\niscsi_pdu_payload_op_login_rsp(struct spdk_iscsi_conn *conn, struct spdk_iscsi_pdu *pdu)\n{\n\tint rc;\n\tstruct iscsi_bhs_login_rsp *rsph;\n\n\trsph \u003d (struct iscsi_bhs_login_rsp *)\u0026pdu-\u003ebhs;\n\n\tassert(rsph-\u003etsih !\u003d 0);\n\tassert(rsph-\u003estatus_class \u003d\u003d 0);\n\tassert(ISCSI_BHS_LOGIN_GET_TBIT(rsph-\u003eflags));\n\tassert(!(rsph-\u003eflags \u0026 ISCSI_LOGIN_CONTINUE));\n\tassert((rsph-\u003eflags \u0026 ISCSI_LOGIN_NEXT_STAGE_MASK) \u003d\u003d ISCSI_LOGIN_NEXT_STAGE_3);\n\n\t/* We got the Login Final Response and move to Full-Feature Phase. */\n\n\tdev_submit_requests();\n\n\treturn 0;\n}\n\nstatic int\nfuzz_iscsi_pdu_payload_handle(struct spdk_iscsi_conn *conn, struct spdk_iscsi_pdu *pdu)\n{\n\tint opcode;\n\tint rc \u003d 0;\n\n\topcode \u003d pdu-\u003ebhs.opcode;\n\n\tswitch (opcode) {\n\tcase ISCSI_OP_LOGIN:\n\t\trc \u003d iscsi_pdu_payload_op_login_rsp(conn, pdu);\n\t\tbreak;\n\tcase ISCSI_OP_NOPIN:\n\tcase ISCSI_OP_SCSI_RSP:\n\tcase ISCSI_OP_TASK_RSP:\n\tcase ISCSI_OP_TEXT_RSP:\n\tcase ISCSI_OP_SCSI_DATAIN:\n\tcase ISCSI_OP_R2T:\n\tcase ISCSI_OP_ASYNC:\n\tcase ISCSI_OP_VENDOR_3C:\n\tcase ISCSI_OP_VENDOR_3D:\n\tcase ISCSI_OP_VENDOR_3E:\n\tcase ISCSI_OP_REJECT:\n\tdefault:\n\t\trc \u003d -1;\n\t\tbreak;\n\t}\n\n\treturn rc;\n}\n\nstatic int\niscsi_read_pdu(struct spdk_iscsi_conn *conn)\n{\n\tenum iscsi_pdu_recv_state prev_state;\n\tstruct spdk_iscsi_pdu *pdu;\n\tuint32_t data_len;\n\tint rc;\n\n\tdo {\n\t\tprev_state \u003d conn-\u003epdu_recv_state;\n\t\tpdu \u003d conn-\u003epdu_in_progress;\n\n\t\tswitch (conn-\u003epdu_recv_state) {\n\t\tcase ISCSI_PDU_RECV_STATE_AWAIT_PDU_READY:\n\t\t\tassert(conn-\u003epdu_in_progress \u003d\u003d NULL);\n\n\t\t\tconn-\u003epdu_in_progress \u003d spdk_get_pdu();\n\t\t\tif (conn-\u003epdu_in_progress \u003d\u003d NULL) {\n\t\t\t\treturn SPDK_ISCSI_CONNECTION_FATAL;\n\t\t\t}\n\t\t\tconn-\u003epdu_recv_state \u003d ISCSI_PDU_RECV_STATE_AWAIT_PDU_HDR;\n\t\t\tbreak;\n\t\tcase ISCSI_PDU_RECV_STATE_AWAIT_PDU_HDR:\n\t\t\tif (pdu-\u003ebhs_valid_bytes \u003c ISCSI_BHS_LEN) {\n\t\t\t\trc \u003d spdk_iscsi_conn_read_data(conn,\n\t\t\t\t\t\t\t       ISCSI_BHS_LEN - pdu-\u003ebhs_valid_bytes,\n\t\t\t\t\t\t\t       (uint8_t *)\u0026pdu-\u003ebhs + pdu-\u003ebhs_valid_bytes);\n\t\t\t\tif (rc \u003c 0) {\n\t\t\t\t\tconn-\u003epdu_recv_state \u003d ISCSI_PDU_RECV_STATE_ERROR;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tpdu-\u003ebhs_valid_bytes +\u003d rc;\n\t\t\t\tif (pdu-\u003ebhs_valid_bytes \u003c ISCSI_BHS_LEN) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpdu-\u003edata_segment_len \u003d ISCSI_ALIGN(DGET24(pdu-\u003ebhs.data_segment_len));\n\n\t\t\tconn-\u003epdu_recv_state \u003d ISCSI_PDU_RECV_STATE_AWAIT_PDU_PAYLOAD;\n\t\t\tbreak;\n\t\tcase ISCSI_PDU_RECV_STATE_AWAIT_PDU_PAYLOAD:\n\t\t\tdata_len \u003d pdu-\u003edata_segment_len;\n\n\t\t\tif (data_len !\u003d 0 \u0026\u0026 pdu-\u003edata_buf \u003d\u003d NULL) {\n\t\t\t\tpdu-\u003edata_buf \u003d calloc(1, data_len);\n\t\t\t\tif (pdu-\u003edata_buf \u003d\u003d NULL) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tpdu-\u003edata \u003d pdu-\u003edata_buf;\n\t\t\t}\n\n\t\t\t/* copy the actual data into local buffer */\n\t\t\tif (pdu-\u003edata_valid_bytes \u003c data_len) {\n\t\t\t\trc \u003d iscsi_conn_read_data_segment(conn, pdu, data_len);\n\t\t\t\tif (rc \u003c 0) {\n\t\t\t\t\tconn-\u003epdu_recv_state \u003d ISCSI_PDU_RECV_STATE_ERROR;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tpdu-\u003edata_valid_bytes +\u003d rc;\n\t\t\t\tif (pdu-\u003edata_valid_bytes \u003c data_len) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* All data for this PDU has now been read from the socket. */\n\t\t\tspdk_trace_record(TRACE_ISCSI_READ_PDU, conn-\u003eid, pdu-\u003edata_valid_bytes,\n\t\t\t\t\t  (uintptr_t)pdu, pdu-\u003ebhs.opcode);\n\n\t\t\tif (conn-\u003eis_logged_out) {\n\t\t\t\tSPDK_DEBUGLOG(SPDK_LOG_ISCSI, \"pdu received after logout\\n\");\n\t\t\t\tconn-\u003epdu_recv_state \u003d ISCSI_PDU_RECV_STATE_ERROR;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (!pdu-\u003eis_rejected) {\n\t\t\t\trc \u003d iscsi_pdu_payload_handle(conn, pdu);\n\t\t\t} else {\n\t\t\t\trc \u003d 0;\n\t\t\t}\n\t\t\tif (rc \u003d\u003d 0) {\n\t\t\t\tspdk_trace_record(TRACE_ISCSI_TASK_EXECUTED, 0, 0, (uintptr_t)pdu, 0);\n\t\t\t\tspdk_put_pdu(pdu);\n\t\t\t\tconn-\u003epdu_in_progress \u003d NULL;\n\t\t\t\tconn-\u003epdu_recv_state \u003d ISCSI_PDU_RECV_STATE_AWAIT_PDU_READY;\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\tconn-\u003epdu_recv_state \u003d ISCSI_PDU_RECV_STATE_ERROR;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ISCSI_PDU_RECV_STATE_ERROR:\n\t\t\treturn SPDK_ISCSI_CONNECTION_FATAL;\n\t\tdefault:\n\t\t\tassert(false);\n\t\t\tSPDK_ERRLOG(\"code should not come here\\n\");\n\t\t\tbreak;\n\t\t}\n\t} while (prev_state !\u003d conn-\u003epdu_recv_state);\n\n\treturn 0;\n}\n\n#define GET_PDU_LOOP_COUNT\t16\n\nstatic int\nfuzz_iscsi_handle_incoming_pdus(struct spdk_iscsi_conn *conn)\n{\n\tint i, rc;\n\n\t/* Read new PDUs from network */\n\tfor (i \u003d 0; i \u003c GET_PDU_LOOP_COUNT; i++) {\n\t\trc \u003d iscsi_read_pdu(conn);\n\t\tif (rc \u003d\u003d 0) {\n\t\t\tbreak;\n\t\t} else if (rc \u003c 0) {\n\t\t\treturn rc;\n\t\t}\n\n\t\tif (conn-\u003eis_stopped) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn i;\n}\n\n\tfuzz_iscsi_send_login_request(conn);\n\n\tdo {\n\t\trc \u003d fuzz_iscsi_handle_incoming_pdus(conn);\n\t} while (rc \u003d\u003d 0);",
      "revId": "46b5affab7ef4fbe6641086bbef37c89552e72bf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1953dd84_9de5a69b",
        "filename": "test/app/fuzz/iscsi_fuzz/iscsi_fuzz.c",
        "patchSetId": 32
      },
      "lineNbr": 502,
      "author": {
        "id": 1011296
      },
      "writtenOn": "2019-12-12T02:06:52Z",
      "side": 1,
      "message": "Thank you for your prompt. In this way, the previous two schemes will be integrated and the functions will be more perfect.",
      "parentUuid": "4b4cd174_61bc3672",
      "revId": "46b5affab7ef4fbe6641086bbef37c89552e72bf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}