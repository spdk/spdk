{
  "comments": [
    {
      "key": {
        "uuid": "69793013_548e99fb",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 24
      },
      "lineNbr": 332,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-07-10T21:03:43Z",
      "side": 1,
      "message": "I don\u0027t think you need these forward declarations",
      "revId": "7ba30682080d235f4789adcd536ee234eed8e5be",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7716f202_af93095e",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 24
      },
      "lineNbr": 332,
      "author": {
        "id": 1013097
      },
      "writtenOn": "2018-07-11T15:38:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69793013_548e99fb",
      "revId": "7ba30682080d235f4789adcd536ee234eed8e5be",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a5535ed_1771ae77",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 24
      },
      "lineNbr": 2315,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-07-10T21:03:43Z",
      "side": 1,
      "message": "This seems like it will just leak the rdma_recv. Where does it get re-posted after the queue recovers?",
      "revId": "7ba30682080d235f4789adcd536ee234eed8e5be",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3fc47b1_f9f1d018",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 24
      },
      "lineNbr": 2315,
      "author": {
        "id": 1013097
      },
      "writtenOn": "2018-07-11T15:38:56Z",
      "side": 1,
      "message": "Removed this if-clause. The requests then will go through NEW to COMPLETED for the QP in ERROR state.\n\nA good point about re-posting, this patch offers dropping of the outstanding requests and resource de-allocation.\n\nGetting the outstanding requests re-posted is TBD (a config option: drop/repost?).",
      "parentUuid": "8a5535ed_1771ae77",
      "revId": "7ba30682080d235f4789adcd536ee234eed8e5be",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4ae597a_1ca10821",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 24
      },
      "lineNbr": 2315,
      "author": {
        "id": 1013097
      },
      "writtenOn": "2018-07-11T16:59:17Z",
      "side": 1,
      "message": "WRT re-posting, just for memories:\nThe peer shall not see PSN discontinuity after SPDK restores its QP.\nNote: ibv_modify_qp allows setting the value of PSN.",
      "parentUuid": "f3fc47b1_f9f1d018",
      "revId": "7ba30682080d235f4789adcd536ee234eed8e5be",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6348950f_415e0e21",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 24
      },
      "lineNbr": 2315,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-07-11T17:51:49Z",
      "side": 1,
      "message": "I don\u0027t think we can just leak requests. The queue pair is supposed to guarantee a fixed queue depth when it comes back online, and the user may post a full queue depth worth of requests and shouldn\u0027t see any failures.\n\nOne option to fix this would be to modify spdk_nvmf_rdma_qpair_process_pending to skip checking rqpair-\u003eincoming_queue if the QPAIR is in the error state. That will leave the rdma_recv objects in the rqpair-\u003eincoming_queue. When the queue pair resumes, it can pick up the command, match it to a full request object and continue processing.",
      "parentUuid": "b4ae597a_1ca10821",
      "revId": "7ba30682080d235f4789adcd536ee234eed8e5be",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}