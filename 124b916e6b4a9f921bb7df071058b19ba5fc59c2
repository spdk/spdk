{
  "comments": [
    {
      "key": {
        "uuid": "e8b81d8c_49792254",
        "filename": "lib/blob/bdev/blob_bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1011221
      },
      "writtenOn": "2017-12-05T13:44:24Z",
      "side": 1,
      "message": "Can\u0027t it be left up to bdev underneath to decide what to do if it does not support unmap ? Basically removing this check and always call spdk_bdev_unmap_blocks() ?\n\nLike Jim notes below. Blobstore lib could handle it accordingly. For example if unmap is not supported when doing blobstore initialization - continue initalization, as unmap is done just for optimization.",
      "range": {
        "startLine": 146,
        "startChar": 5,
        "endLine": 146,
        "endChar": 74
      },
      "revId": "124b916e6b4a9f921bb7df071058b19ba5fc59c2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d48b7c38_a4980f0e",
        "filename": "lib/blob/bdev/blob_bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2017-12-05T18:01:35Z",
      "side": 1,
      "message": "I want this to have this specific behavior. If I leave it up to the backing bdev, that bdev gets to dictate the behavior.",
      "parentUuid": "e8b81d8c_49792254",
      "range": {
        "startLine": 146,
        "startChar": 5,
        "endLine": 146,
        "endChar": 74
      },
      "revId": "124b916e6b4a9f921bb7df071058b19ba5fc59c2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6fa0137_328671c4",
        "filename": "lib/blob/bdev/blob_bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-12-04T21:52:01Z",
      "side": 1,
      "message": "should this return 0 or a real errno?\n\nI guess I\u0027m not sure why we should treat this as a success.  It seems that blobstore should really decide whether a failed unmap should have other consequences, instead of assuming here that a failed unmap has no other consequences",
      "revId": "124b916e6b4a9f921bb7df071058b19ba5fc59c2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef89470b_255f7e7b",
        "filename": "lib/blob/bdev/blob_bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2017-12-05T18:01:35Z",
      "side": 1,
      "message": "This is mostly for practical reasons. First, this code only exists to support blobstore, so it is specific to that. Second, in blobstore the unmaps are often sent as part of a batch with other commands. In a batch, errors are aggregated across the whole batch. We don\u0027t want a failed unmap to fail the whole batch, which may include write zeroes commands that succeeded.\n\nI think eventually we\u0027re going to add a flag inside of blobstore that will instruct it to skip the unmaps entirely. We could automatically set this flag for devices that don\u0027t support unmap.",
      "parentUuid": "e6fa0137_328671c4",
      "revId": "124b916e6b4a9f921bb7df071058b19ba5fc59c2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b51b4af_a7e2444e",
        "filename": "lib/blob/bdev/blob_bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-12-05T18:07:37Z",
      "side": 1,
      "message": "OK - I\u0027m fine with this.  I agree that putting flags in spdk_bs_dev to indicate which operations are supported might be better but this will work.",
      "parentUuid": "ef89470b_255f7e7b",
      "revId": "124b916e6b4a9f921bb7df071058b19ba5fc59c2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}