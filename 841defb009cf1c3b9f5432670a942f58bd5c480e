{
  "comments": [
    {
      "key": {
        "uuid": "975e33ce_9b1b63ef",
        "filename": "lib/nvme/nvme.c",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-07-06T21:08:03Z",
      "side": 1,
      "message": "I\u0027m not sure it\u0027s safe to call spdk_nvme_ctrlr_reset() here; the user may not be expecting the controller to be reset (including tearing down of queues, etc.) inside a spdk_nvme_qpair_process_completions() call.\n\nI think the right approach would be to move this check and the reset handling into the timeout callback in bdev/nvme - if other users want this behavior, they can implement it in their timeout callback as well.",
      "revId": "841defb009cf1c3b9f5432670a942f58bd5c480e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b46a356_8f729a68",
        "filename": "lib/nvme/nvme.c",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-07-06T21:28:25Z",
      "side": 1,
      "message": "Another thing to keep in mind is that spdk_nvme_ctrlr_get_regs_csts() will result in an admin command + poll/wait sequence on NVMe-oF, which is probably not a good idea if a command has already timed out.",
      "parentUuid": "975e33ce_9b1b63ef",
      "revId": "841defb009cf1c3b9f5432670a942f58bd5c480e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0992b3d7_502656d5",
        "filename": "lib/nvme/nvme.c",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 1011204
      },
      "writtenOn": "2018-07-09T05:11:30Z",
      "side": 1,
      "message": "Agreed, the issue here is a little complicated, because the reset is controller level, there maybe many bdevs built on top of it, the safe method here is: set all the bdevs into resetting state first, and then abort all outstanding requests, and then reset the controller at last, maybe we still need to re-submit the terminated requests as a retry.",
      "parentUuid": "975e33ce_9b1b63ef",
      "revId": "841defb009cf1c3b9f5432670a942f58bd5c480e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}