{
  "comments": [
    {
      "key": {
        "uuid": "6dc094c1_caca124b",
        "filename": "module/blobfs/bdev/blobfs_bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-09-25T05:51:22Z",
      "side": 1,
      "message": "this structure is very similar to the detect/create ctx structures\n\njust thinking you should use the same structure for all three; I\u0027m hoping it can reduce code duplication especially on the unload path",
      "revId": "62bc1a073415027c4b24cb367d092cd010473c94",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a20d9f98_cd0185c3",
        "filename": "module/blobfs/bdev/blobfs_bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 304,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-09-25T05:51:22Z",
      "side": 1,
      "message": "we\u0027ve tried to move to a single callback argument as much as possible - could we save the thread in ctx, and just use ctx as the only callback argument?\n\neven better, it might be nice to move this thread logic into spdk_blobfs_fuse_start - probably most callers would want the unmount callback to get called on the same thread that called spdk_blobfs_fuse_start",
      "revId": "62bc1a073415027c4b24cb367d092cd010473c94",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7ca6c78_c4dc86e2",
        "filename": "module/blobfs/bdev/blobfs_bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-09-25T05:51:22Z",
      "side": 1,
      "message": "should we pass rc (or -rc) instead of -1?",
      "revId": "62bc1a073415027c4b24cb367d092cd010473c94",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23759a17_41ab9a7c",
        "filename": "module/blobfs/bdev/blobfs_bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 379,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-09-25T05:51:22Z",
      "side": 1,
      "message": "you need to close the descriptor if this create_bs_dev fails",
      "revId": "62bc1a073415027c4b24cb367d092cd010473c94",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "214e3131_165fea6f",
        "filename": "module/blobfs/bdev/blobfs_bdev.c",
        "patchSetId": 1
      },
      "lineNbr": 386,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-09-25T05:51:22Z",
      "side": 1,
      "message": "you need to close the descriptor\n\nalso what happens to the bs_dev?",
      "revId": "62bc1a073415027c4b24cb367d092cd010473c94",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "338f249d_2189e93e",
        "filename": "module/blobfs/bdev/blobfs_fuse.h",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-09-25T05:51:22Z",
      "side": 1,
      "message": "unmount_cb?  (instead of umount_cb)",
      "revId": "62bc1a073415027c4b24cb367d092cd010473c94",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}