{
  "comments": [
    {
      "key": {
        "uuid": "faac606d_8e66d760",
        "filename": "lib/event/reactor.c",
        "patchSetId": 6
      },
      "lineNbr": 428,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-06-08T18:11:43Z",
      "side": 1,
      "message": "What does unknown mean? Isn\u0027t the reactor either busy or idle?",
      "revId": "f1e6061a686f44a7faf4eec862d6fc2a90d2fd52",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97d9f1ac_e9aa070b",
        "filename": "lib/event/reactor.c",
        "patchSetId": 6
      },
      "lineNbr": 428,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-06-08T19:05:02Z",
      "side": 1,
      "message": "Yes - but not all pollers are plumbed yet to report busy or idle.",
      "parentUuid": "faac606d_8e66d760",
      "revId": "f1e6061a686f44a7faf4eec862d6fc2a90d2fd52",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d7934f0_328cfdf7",
        "filename": "lib/event/reactor.c",
        "patchSetId": 6
      },
      "lineNbr": 428,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-06-08T20:50:13Z",
      "side": 1,
      "message": "Sure, but this patch can\u0027t differentiate between pollers that are returning nonsense and ones whose return value is meaningful. I just scanned a few of the poller functions and some return -1 when doing real work, some return 0, and some return 1. That means these stats are meaningless. You can\u0027t do this patch until the pollers all correctly return a meaningful value of active or idle.",
      "parentUuid": "97d9f1ac_e9aa070b",
      "revId": "f1e6061a686f44a7faf4eec862d6fc2a90d2fd52",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e38466d_5f6c0b12",
        "filename": "lib/event/reactor.c",
        "patchSetId": 6
      },
      "lineNbr": 428,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-06-08T22:09:24Z",
      "side": 1,
      "message": "There\u0027s only one set of pollers that\u0027s returning the wrong thing, so we\u0027ll fix those and proceed here.",
      "parentUuid": "6d7934f0_328cfdf7",
      "revId": "f1e6061a686f44a7faf4eec862d6fc2a90d2fd52",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83e42761_4d206ab5",
        "filename": "lib/event/reactor.c",
        "patchSetId": 6
      },
      "lineNbr": 444,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-06-08T19:59:23Z",
      "side": 1,
      "message": "This is directly returning a pointer to the stats structure inside the reactor; if we want to access this from other cores, that won\u0027t be thread safe.  We should probably let the user provide a stats struct pointer and copy the current stats into it.\n\nIf we require this function to be called on the corresponding core, then it\u0027s OK, but that needs to be documented in the doc comment in event.h.  Otherwise, we need a thread-safe way to provide access to the stats.\n\nI see a few options:\n- spdk_reactor_get_tsc_stats() always returns stats for the current core, instead of taking a parameter; this makes the \"current core only\" restriction obvious.  We should still probably copy the stats so that it\u0027s not possible to accidentally access the reactor\u0027s stats pointer from another core.\n- spdk_reactor_get_tsc_stats() still takes a core parameter but becomes asynchronous (add a callback) so that we can send a message to the desired core, get its stats, then message pass back to the original core that called spdk_reactor_get_tsc_stats() to call the callback.\n\nAlternatively, if we don\u0027t care too much about thread safety and getting precise stats, it might be okay to just copy the reactor stats from any thread; this is probably workable at least on the x86 memory model.",
      "revId": "f1e6061a686f44a7faf4eec862d6fc2a90d2fd52",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ac1229b_3345d525",
        "filename": "lib/event/reactor.c",
        "patchSetId": 6
      },
      "lineNbr": 497,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-06-08T18:11:43Z",
      "side": 1,
      "message": "I think you need to do a separate patch that first changes the way \u0027took_action\u0027 is updated. It should only be set to true if the poller returns a status code that it did real work. That will simplify the math on when to update idle and when to update busy in this patch.",
      "revId": "f1e6061a686f44a7faf4eec862d6fc2a90d2fd52",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c8e5f9e_99cf6666",
        "filename": "lib/event/reactor.c",
        "patchSetId": 6
      },
      "lineNbr": 497,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-06-08T19:07:28Z",
      "side": 1,
      "message": "\u0027took_action\u0027 just means that we ran some poller - not that the poller did any real work.  It\u0027s used to decide if we should put the reactor to sleep.\n\nMaybe we need to change what all of the \"idle_started\" stuff means now that we have these stats, but I think we can do that later - after this patch.",
      "parentUuid": "2ac1229b_3345d525",
      "revId": "f1e6061a686f44a7faf4eec862d6fc2a90d2fd52",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}