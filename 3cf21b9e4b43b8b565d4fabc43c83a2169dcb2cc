{
  "comments": [
    {
      "key": {
        "uuid": "2764a3e5_2668425b",
        "filename": "include/spdk/string.h",
        "patchSetId": 15
      },
      "lineNbr": 72,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2019-01-09T20:37:17Z",
      "side": 1,
      "message": "spdk_sprintf_alloc is exactly like sprintf, except that it allocates buffers automatically. spdk_sprintf_realloc is actually like sprintf + strcat, but the name of the function doesn\u0027t really indicate that it does a concatenation. I can\u0027t really come up with a great name though. My ideas:\n\nspdk_catprintf_realloc\nspdk_strcat_sprintf_realloc\nspdk_strappend\n\n\nMaybe someone else out there has an opinion on this one.",
      "revId": "3cf21b9e4b43b8b565d4fabc43c83a2169dcb2cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "051d282f_d782f316",
        "filename": "include/spdk/string.h",
        "patchSetId": 15
      },
      "lineNbr": 72,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-01-09T23:23:00Z",
      "side": 1,
      "message": "Thank you, the name doesn\u0027t indicate the behavior at all as you say. How about spdk_sprintf_append_realloc and spdk_vsprintf_append_realloc ?",
      "parentUuid": "2764a3e5_2668425b",
      "revId": "3cf21b9e4b43b8b565d4fabc43c83a2169dcb2cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19be7aa0_30e3046b",
        "filename": "lib/util/string.c",
        "patchSetId": 15
      },
      "lineNbr": 53,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-01-09T23:23:00Z",
      "side": 1,
      "message": "I changed this to call just spdk_vsprintf_append_realloc(NULL, format, args) and then abandoned the next patch.",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 19
      },
      "revId": "3cf21b9e4b43b8b565d4fabc43c83a2169dcb2cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5abf6265_6ce58eb2",
        "filename": "lib/util/string.c",
        "patchSetId": 15
      },
      "lineNbr": 123,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2019-01-09T15:47:31Z",
      "side": 1,
      "message": "sorry, I overlooked this. \u0027return rc + 1\u0027 in get_buffer_size() . I think this should be \u0027\u003c\u003d 0\u0027 or get_buffer_size() should return\n\n  return rc \u003e\u003d 0 ? rc + 1 : rc;\n\nOr maybe you can inline get_buffer_size() ?",
      "range": {
        "startLine": 123,
        "startChar": 5,
        "endLine": 123,
        "endChar": 18
      },
      "revId": "3cf21b9e4b43b8b565d4fabc43c83a2169dcb2cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb02e2df_9c3ad909",
        "filename": "lib/util/string.c",
        "patchSetId": 15
      },
      "lineNbr": 123,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-01-09T23:23:00Z",
      "side": 1,
      "message": "Done, I inlined get_buffer_size().",
      "parentUuid": "5abf6265_6ce58eb2",
      "range": {
        "startLine": 123,
        "startChar": 5,
        "endLine": 123,
        "endChar": 18
      },
      "revId": "3cf21b9e4b43b8b565d4fabc43c83a2169dcb2cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbc4b524_88dc2b5f",
        "filename": "lib/util/string.c",
        "patchSetId": 15
      },
      "lineNbr": 124,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2019-01-09T15:47:31Z",
      "side": 1,
      "message": "As you implemented Ben\u0027s solution, this implementation might now fully conform to realloc() behaviour. I mean that you might just \u0027return NULL\u0027 without freeing passed buffer. This will also require changing documentation.",
      "range": {
        "startLine": 124,
        "startChar": 2,
        "endLine": 124,
        "endChar": 15
      },
      "revId": "3cf21b9e4b43b8b565d4fabc43c83a2169dcb2cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "373b7894_70d0332e",
        "filename": "lib/util/string.c",
        "patchSetId": 15
      },
      "lineNbr": 124,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-01-09T23:23:00Z",
      "side": 1,
      "message": "Done. I changed to conform realloc() behavior and updated the doc in the header file.",
      "parentUuid": "bbc4b524_88dc2b5f",
      "range": {
        "startLine": 124,
        "startChar": 2,
        "endLine": 124,
        "endChar": 15
      },
      "revId": "3cf21b9e4b43b8b565d4fabc43c83a2169dcb2cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29726e5e_4fd2f6d0",
        "filename": "lib/util/string.c",
        "patchSetId": 15
      },
      "lineNbr": 126,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2019-01-09T20:51:57Z",
      "side": 1,
      "message": "I tought this a while and I think this should be something like this:\n\n  ...\n  va_copy(args_copy, args);\n  new_size \u003d vsnprintf(NULL, 0, format, args_copy);\n  va_end(args_copy);\n  \n  if (new_size \u003c 0) {\n    return NULL;\n  }\n\n  new_size +\u003d orig_size + 1\n  ...\n\nOtherwise you might be unable to handle all error cases.",
      "range": {
        "startLine": 121,
        "startChar": 1,
        "endLine": 126,
        "endChar": 2
      },
      "revId": "3cf21b9e4b43b8b565d4fabc43c83a2169dcb2cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48731d65_2fcaf471",
        "filename": "lib/util/string.c",
        "patchSetId": 15
      },
      "lineNbr": 126,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-01-09T23:23:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "29726e5e_4fd2f6d0",
      "range": {
        "startLine": 121,
        "startChar": 1,
        "endLine": 126,
        "endChar": 2
      },
      "revId": "3cf21b9e4b43b8b565d4fabc43c83a2169dcb2cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "099b02d7_b071916d",
        "filename": "lib/util/string.c",
        "patchSetId": 15
      },
      "lineNbr": 136,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2019-01-09T15:47:31Z",
      "side": 1,
      "message": "You can just use args here as this is the last place where is used.",
      "range": {
        "startLine": 134,
        "startChar": 0,
        "endLine": 136,
        "endChar": 19
      },
      "revId": "3cf21b9e4b43b8b565d4fabc43c83a2169dcb2cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be5c1f48_5761ed9f",
        "filename": "lib/util/string.c",
        "patchSetId": 15
      },
      "lineNbr": 136,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-01-09T23:23:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "099b02d7_b071916d",
      "range": {
        "startLine": 134,
        "startChar": 0,
        "endLine": 136,
        "endChar": 19
      },
      "revId": "3cf21b9e4b43b8b565d4fabc43c83a2169dcb2cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}