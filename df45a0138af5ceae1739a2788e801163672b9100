{
  "comments": [
    {
      "key": {
        "uuid": "2762003b_34442855",
        "filename": "lib/ftl/ftl_core.c",
        "patchSetId": 2
      },
      "lineNbr": 955,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2019-06-25T07:11:41Z",
      "side": 1,
      "message": "You could just pass spdk_ftl_dev instead nv_cache.",
      "revId": "df45a0138af5ceae1739a2788e801163672b9100",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "093b4aac_5f65160c",
        "filename": "lib/ftl/ftl_core.c",
        "patchSetId": 2
      },
      "lineNbr": 955,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2019-06-25T07:30:48Z",
      "side": 1,
      "message": "I don\u0027t think there\u0027s any real difference. I even think it\u0027s better to pass ftl_nv_cache here, as the pattern for most of the other ftl_nv_cache* functions is to pass ftl_nv_cache.",
      "parentUuid": "2762003b_34442855",
      "revId": "df45a0138af5ceae1739a2788e801163672b9100",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e403a69_29f28992",
        "filename": "lib/ftl/ftl_core.c",
        "patchSetId": 2
      },
      "lineNbr": 1018,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2019-06-25T07:11:41Z",
      "side": 1,
      "message": "Can we just get this pool during ftl_io_alloc and put it in ftl_io_free?",
      "revId": "df45a0138af5ceae1739a2788e801163672b9100",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "995953d7_c9ad5d42",
        "filename": "lib/ftl/ftl_core.c",
        "patchSetId": 2
      },
      "lineNbr": 1018,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2019-06-25T07:30:48Z",
      "side": 1,
      "message": "No, because it\u0027s not tied to every IO. It only makes sense to do that for the IOs that go to the non-volatile cache.",
      "parentUuid": "5e403a69_29f28992",
      "revId": "df45a0138af5ceae1739a2788e801163672b9100",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87cb84d6_df2e78aa",
        "filename": "lib/ftl/ftl_core.c",
        "patchSetId": 2
      },
      "lineNbr": 1092,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2019-06-25T07:11:41Z",
      "side": 1,
      "message": "You should return md to pool here.",
      "revId": "df45a0138af5ceae1739a2788e801163672b9100",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3702834_d8cafff1",
        "filename": "lib/ftl/ftl_core.c",
        "patchSetId": 2
      },
      "lineNbr": 1092,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2019-06-25T07:14:56Z",
      "side": 1,
      "message": "Ok, I see that FTL_LBA_INVALID is return when allocation fails - but it not so intuitive.",
      "parentUuid": "87cb84d6_df2e78aa",
      "revId": "df45a0138af5ceae1739a2788e801163672b9100",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cecf4d6e_ecef32de",
        "filename": "lib/ftl/ftl_core.c",
        "patchSetId": 2
      },
      "lineNbr": 1092,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2019-06-25T07:30:48Z",
      "side": 1,
      "message": "FTL_LBA_INVALID indicates that the function wasn\u0027t able to reserve space within the non-volatile cache. It\u0027s a pretty standard behavior not to allocate anything in case of failure.",
      "parentUuid": "c3702834_d8cafff1",
      "revId": "df45a0138af5ceae1739a2788e801163672b9100",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}