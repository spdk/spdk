{
  "comments": [
    {
      "key": {
        "uuid": "dd5be9f2_3b4eb69c",
        "filename": "lib/ftl/ftl_anm.c",
        "patchSetId": 36
      },
      "lineNbr": 448,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-19T19:22:41Z",
      "side": 1,
      "message": "Can you define \"user\"?  The user in this case would be the bdev module?  If the bdev module called this function with thread \u003d\u003d NULL, I think we would want the assertion to fail - that would be a very bad condition.\n\nIf the user doesn\u0027t want to initialize anm because they don\u0027t have a valid thread, they just shouldn\u0027t call this function.\n\nThere are lots of cases in SPDK where we expect the user to pass valid objects, and if they don\u0027t, \"bad\" things will happen.  SPDK is not glibc.",
      "revId": "84604083370c40cd0b6cbaafebe803f5d5e3f0cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b871d51b_f49185af",
        "filename": "lib/ftl/ftl_anm.c",
        "patchSetId": 36
      },
      "lineNbr": 448,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2018-12-20T10:11:39Z",
      "side": 1,
      "message": "The user I had in mind was someone willing to use the ftl library directly, without bdev framework. In such case, it is responsibility of the user to provide a valid thread to use for ANM polling, so assertion failure if that thread is incorrect is unacceptable. Also, the initialization flow requires this function to be called - before using the ftl library, the user is required to call spdk_ftl_module_init(), which in turn calls ftl_anm_init().\n\nI agree that asserts are useful means to find bugs in code, but they cannot fail due to user input - whether the code is glibc or anything else.",
      "parentUuid": "dd5be9f2_3b4eb69c",
      "revId": "84604083370c40cd0b6cbaafebe803f5d5e3f0cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a43517ef_c71cc4e9",
        "filename": "lib/ftl/ftl_anm.c",
        "patchSetId": 36
      },
      "lineNbr": 448,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-20T15:39:18Z",
      "side": 1,
      "message": "No.  That\u0027s not acceptable for driver frameworks like SPDK and DPDK.  Yes, these are libraries that can get integrated into applications different than the bdev FTL module.  But SPDK and DPDK libraries are all designed for this kind of use case, and they don\u0027t check user inputs like this.\n\nI could give lots and lots of examples, look at all of the SPDK NVMe driver functions - none of them check the ctrlr, ns, or qpair objects for example.  If a user passes a NULL for one of these, the application will simply crash.  Yes - maybe we should be adding asserts here, but the point is that they don\u0027t check if the pointer is NULL and give the caller an error code if it is.  Their error code will be a segfault.\n\nSame for DPDK.  Look at rte_mempool for example.  Most (if not all) of the functions do not check if the mp pointer is NULL.",
      "parentUuid": "b871d51b_f49185af",
      "revId": "84604083370c40cd0b6cbaafebe803f5d5e3f0cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}