{
  "comments": [
    {
      "key": {
        "uuid": "e070f92c_bf3d7e48",
        "filename": "lib/bdev/ocssd/bdev_ocssd.c",
        "patchSetId": 33
      },
      "lineNbr": 121,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2018-11-28T13:10:20Z",
      "side": 1,
      "message": "Maybe we should initialize those to be consitent with other globals.",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbf3732f_ed7d445a",
        "filename": "lib/bdev/ocssd/bdev_ocssd.c",
        "patchSetId": 33
      },
      "lineNbr": 121,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2018-11-29T09:27:09Z",
      "side": 1,
      "message": "It\u0027s assured by the C standard that global variables are 0-initialized, unless they\u0027re explicitly assigned differently, so I don\u0027t see a reason to explicitly set them to 0.",
      "parentUuid": "e070f92c_bf3d7e48",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cbbca7a_e7a898b4",
        "filename": "lib/bdev/ocssd/bdev_ocssd.c",
        "patchSetId": 33
      },
      "lineNbr": 121,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2018-11-29T10:24:44Z",
      "side": 1,
      "message": "I\u0027m aware that globals are initialized to 0. I\u0027m just saying that we should be consistent with other globals initialization in this section. g_timeout is initialized to 0 so we could remove it or add initialization to all of them...",
      "parentUuid": "bbf3732f_ed7d445a",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38b1d2d8_8f0edc55",
        "filename": "lib/bdev/ocssd/bdev_ocssd.c",
        "patchSetId": 33
      },
      "lineNbr": 197,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2018-11-28T13:10:20Z",
      "side": 1,
      "message": "Should we decrease ref_cnt if fail to detach? We jump to out with decreased ref_cnt without removing it from list..",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "049df1c6_f8a36719",
        "filename": "lib/bdev/ocssd/bdev_ocssd.c",
        "patchSetId": 33
      },
      "lineNbr": 197,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2018-11-29T09:27:09Z",
      "side": 1,
      "message": "This is intentional. If detach failed, it probably means we won\u0027t be able to attach to it again via spdk_nvme_probe, so we leave it in our ctrlr lists to be able to reuse it.",
      "parentUuid": "38b1d2d8_8f0edc55",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "239df0a1_62b2cafc",
        "filename": "lib/bdev/ocssd/bdev_ocssd.c",
        "patchSetId": 33
      },
      "lineNbr": 197,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2018-11-29T10:24:44Z",
      "side": 1,
      "message": "So how we free ctrlr in this case?",
      "parentUuid": "049df1c6_f8a36719",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4108ba0e_dc1ef6f4",
        "filename": "lib/bdev/ocssd/bdev_ocssd.c",
        "patchSetId": 33
      },
      "lineNbr": 774,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2018-11-28T13:10:20Z",
      "side": 1,
      "message": "Thid should be also called in during bdev_ocssd_delete_bdev",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c03cedbf_29a26bdd",
        "filename": "lib/bdev/ocssd/bdev_ocssd.c",
        "patchSetId": 33
      },
      "lineNbr": 774,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2018-11-29T09:27:09Z",
      "side": 1,
      "message": "Are you sure? I think, once the bdev is registered, spdk_io_device_unregister will becalled by bdev.c in spdk_bdev_fini() during bdev destruction.",
      "parentUuid": "4108ba0e_dc1ef6f4",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e797b6c4_9239c3bc",
        "filename": "lib/bdev/ocssd/bdev_ocssd.c",
        "patchSetId": 33
      },
      "lineNbr": 774,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2018-11-29T10:24:44Z",
      "side": 1,
      "message": "This is called in module_finish - we should unregister device during removal?",
      "parentUuid": "c03cedbf_29a26bdd",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "646921d9_45be9ea5",
        "filename": "lib/bdev/ocssd/bdev_ocssd.c",
        "patchSetId": 33
      },
      "lineNbr": 857,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2018-11-28T14:08:03Z",
      "side": 1,
      "message": "In same cases (depends on which point bdev_ocssd_create fails) we need to call spdk_nvme_detach also?",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30a59b6a_eac79019",
        "filename": "lib/bdev/ocssd/bdev_ocssd.c",
        "patchSetId": 33
      },
      "lineNbr": 857,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2018-11-29T09:27:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "646921d9_45be9ea5",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ea55fd2_bc5a8579",
        "filename": "lib/bdev/ocssd/bdev_ocssd.c",
        "patchSetId": 33
      },
      "lineNbr": 866,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2018-11-28T13:10:20Z",
      "side": 1,
      "message": "I think that we try to avoid using bools? I see that SPDK is using it, but if we want also do that maybe we should be consitent in it (at least at BDEV)",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1e1a337_6fda388a",
        "filename": "lib/bdev/ocssd/bdev_ocssd.c",
        "patchSetId": 33
      },
      "lineNbr": 866,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2018-11-29T09:27:09Z",
      "side": 1,
      "message": "I\u0027ve reorganized the way module_init_done is signaled and removed this function.",
      "parentUuid": "8ea55fd2_bc5a8579",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f99c8e9_2b887e29",
        "filename": "lib/bdev/ocssd/bdev_ocssd.c",
        "patchSetId": 33
      },
      "lineNbr": 875,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2018-11-28T13:10:20Z",
      "side": 1,
      "message": "I had impression that bdev_ocssd_check_init_done is called only during initialization - do we really need this flag? Isn\u0027t checking num_bdevs \u003d\u003d g_num_init_bdevs good enough?",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26dcafba_bb7e5d84",
        "filename": "lib/bdev/ocssd/bdev_ocssd.c",
        "patchSetId": 33
      },
      "lineNbr": 875,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2018-11-29T09:27:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7f99c8e9_2b887e29",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7b7c5c9_f7ead07c",
        "filename": "lib/bdev/ocssd/bdev_ocssd.c",
        "patchSetId": 33
      },
      "lineNbr": 879,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2018-11-28T13:10:20Z",
      "side": 1,
      "message": "I\u0027m not sure we we are counting fial_bdevs. If this is used only for initialization case we could only count how many bdev\u0027s done with init (regardless if it pass or fial) instead keeping in separate couter failed bdevs and counting good bdevs from the list?",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "409b3061_fc4a9573",
        "filename": "lib/bdev/ocssd/bdev_ocssd.c",
        "patchSetId": 33
      },
      "lineNbr": 879,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2018-11-29T09:27:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7b7c5c9_f7ead07c",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89876d64_9b465020",
        "filename": "lib/bdev/ocssd/bdev_ocssd.c",
        "patchSetId": 33
      },
      "lineNbr": 898,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2018-11-28T13:10:20Z",
      "side": 1,
      "message": "We could probably get rid of this if we count only the number of bdev_ocssd_init_cb calls?",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d94300c4_1c308c00",
        "filename": "lib/bdev/ocssd/bdev_ocssd.c",
        "patchSetId": 33
      },
      "lineNbr": 898,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2018-11-29T09:27:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "89876d64_9b465020",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0d1c3f3_7679312c",
        "filename": "lib/bdev/ocssd/bdev_ocssd.h",
        "patchSetId": 33
      },
      "lineNbr": 63,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2018-11-28T13:10:20Z",
      "side": 1,
      "message": "UUID if device state is restored from disk",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29d529d5_db9d24ce",
        "filename": "lib/bdev/ocssd/bdev_ocssd.h",
        "patchSetId": 33
      },
      "lineNbr": 63,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2018-11-29T09:27:09Z",
      "side": 1,
      "message": "What\u0027s the difference?",
      "parentUuid": "f0d1c3f3_7679312c",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f728a49e_78298b18",
        "filename": "lib/bdev/ocssd/bdev_ocssd.h",
        "patchSetId": 33
      },
      "lineNbr": 63,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2018-11-29T10:24:44Z",
      "side": 1,
      "message": "I was thinking to avoid using SSD term (disk or drive is better in my opinion). I also think that saying that we are restoring some state of device instead device itself is better.",
      "parentUuid": "29d529d5_db9d24ce",
      "revId": "77abfcf84d1f4f30549f35a3719e7614f9925bcd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}