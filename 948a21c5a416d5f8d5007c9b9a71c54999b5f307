{
  "comments": [
    {
      "key": {
        "uuid": "837902b8_3acacd05",
        "filename": "lib/ftl/ftl_reloc.c",
        "patchSetId": 1
      },
      "lineNbr": 786,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2019-06-12T08:54:19Z",
      "side": 1,
      "message": "So what is going to happen if prev_lbks !\u003d breloc-\u003enum_lbks, the band was on the pending queue (it already had some bits of it marked for relocation) and we\u0027re calling ftl_reloc_add with prio \u003d 1? I think we should check if the band is on either of the queues before adding it to another one.",
      "range": {
        "startLine": 783,
        "startChar": 0,
        "endLine": 786,
        "endChar": 2
      },
      "revId": "948a21c5a416d5f8d5007c9b9a71c54999b5f307",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0680fa1_282424ab",
        "filename": "lib/ftl/ftl_reloc.c",
        "patchSetId": 1
      },
      "lineNbr": 786,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2019-06-12T10:32:36Z",
      "side": 1,
      "message": "This is not intention of this patch - I\u0027ve add just simply optimization to return immideatly if no new blocks have been marked for relocation.\nCase you are discribing will add band to prio queue and process it in a first place, after that same band from pending queue will have no valid blocks - but we can add such check and remove such band from pending queue.",
      "parentUuid": "837902b8_3acacd05",
      "range": {
        "startLine": 783,
        "startChar": 0,
        "endLine": 786,
        "endChar": 2
      },
      "revId": "948a21c5a416d5f8d5007c9b9a71c54999b5f307",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fb50fec_b4bb3d6b",
        "filename": "lib/ftl/ftl_reloc.c",
        "patchSetId": 1
      },
      "lineNbr": 786,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2019-06-12T10:46:17Z",
      "side": 1,
      "message": "I know this is not directly related to this patch, but since you\u0027re working on a patch series that is supposed to enable ANM relocations this type of check need to be implemented or we\u0027ll end up with broken data structures.\nIf prev_lbks \u003e 0 \u0026\u0026 prev_lbks !\u003d num_lbks and you\u0027re calling ftl_reloc_add(prio \u003d 1), you will try to insert the band onto the prio_queue, while it is still on the pending queue. There\u0027s no guarantee that it\u0027ll have no valid blocks.",
      "parentUuid": "c0680fa1_282424ab",
      "range": {
        "startLine": 783,
        "startChar": 0,
        "endLine": 786,
        "endChar": 2
      },
      "revId": "948a21c5a416d5f8d5007c9b9a71c54999b5f307",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5a6ac94_b3771925",
        "filename": "lib/ftl/ftl_reloc.c",
        "patchSetId": 1
      },
      "lineNbr": 786,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2019-06-12T12:02:42Z",
      "side": 1,
      "message": "I will add separate patch for it.",
      "parentUuid": "8fb50fec_b4bb3d6b",
      "range": {
        "startLine": 783,
        "startChar": 0,
        "endLine": 786,
        "endChar": 2
      },
      "revId": "948a21c5a416d5f8d5007c9b9a71c54999b5f307",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}