{
	global:

	# public functions
	spdk_accel_initialize;
	spdk_accel_finish;
	spdk_accel_get_io_channel;
	spdk_accel_submit_copy;
	spdk_accel_submit_dualcast;
	spdk_accel_submit_compare;
	spdk_accel_submit_fill;
	spdk_accel_submit_crc32c;
	spdk_accel_submit_crc32cv;
	spdk_accel_submit_copy_crc32c;
	spdk_accel_submit_copy_crc32cv;
	spdk_accel_submit_compress;
	spdk_accel_submit_decompress;
	spdk_accel_submit_encrypt;
	spdk_accel_submit_decrypt;
	spdk_accel_submit_xor;
	spdk_accel_get_opc_module_name;
	spdk_accel_assign_opc;
	spdk_accel_write_config_json;
	spdk_accel_append_copy;
	spdk_accel_append_fill;
	spdk_accel_append_decompress;
	spdk_accel_append_encrypt;
	spdk_accel_append_decrypt;
	spdk_accel_sequence_finish;
	spdk_accel_sequence_abort;
	spdk_accel_sequence_reverse;
	spdk_accel_get_buf;
	spdk_accel_put_buf;
	spdk_accel_crypto_key_create;
	spdk_accel_crypto_key_destroy;
	spdk_accel_crypto_key_get;
	spdk_accel_set_driver;

	# functions needed by modules
	spdk_accel_module_list_add;
	spdk_accel_module_finish;
	spdk_accel_task_complete;
	spdk_accel_sequence_continue;
	spdk_accel_driver_register;
	spdk_accel_get_memory_domain;
	spdk_accel_alloc_sequence_buf;
	spdk_accel_sequence_first_task;
	spdk_accel_sequence_next_task;

	local: *;
};
