{
  "comments": [
    {
      "key": {
        "uuid": "e6e73b17_53220d62",
        "filename": "include/spdk/bdev.h",
        "patchSetId": 4
      },
      "lineNbr": 1369,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2019-10-10T17:05:29Z",
      "side": 1,
      "message": "You\u0027ll need to add a CHANGELOG.md entry - this is a public API change.",
      "revId": "206a4847fe424f2784dc48a35f914f5329844a9c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54aa75f7_bb94b99e",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 4
      },
      "lineNbr": 3955,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2019-10-10T17:05:29Z",
      "side": 1,
      "message": "What if a lower layer driver set a SCSI status and then an upper layer tried to get the NVMe status? In that case, bdev_io-\u003einternal.error.nvme.sct/sc may be junk. I think it needs to continue to work as before, and just make cdw0 available if it has status SPDK_BDEV_IO_STATUS_NVME_ERROR specifically.",
      "revId": "206a4847fe424f2784dc48a35f914f5329844a9c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1d1df2d_9a22efca",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 4
      },
      "lineNbr": 3955,
      "author": {
        "id": 1016048
      },
      "writtenOn": "2019-10-10T17:34:54Z",
      "side": 1,
      "message": "I can change it back.",
      "parentUuid": "54aa75f7_bb94b99e",
      "revId": "206a4847fe424f2784dc48a35f914f5329844a9c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "459daced_69b3e770",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 4
      },
      "lineNbr": 3955,
      "author": {
        "id": 1016048
      },
      "writtenOn": "2019-10-11T14:59:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1d1df2d_9a22efca",
      "revId": "206a4847fe424f2784dc48a35f914f5329844a9c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bee566e_39d99ea8",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 4
      },
      "lineNbr": 3963,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2019-10-10T17:05:29Z",
      "side": 1,
      "message": "This is only set if it\u0027s an NVMe error (i.e. SPDK_BDEV_IO_STATUS_NVME_ERROR)",
      "revId": "206a4847fe424f2784dc48a35f914f5329844a9c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba2b5994_b7f4761e",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 4
      },
      "lineNbr": 3963,
      "author": {
        "id": 1016048
      },
      "writtenOn": "2019-10-10T17:34:54Z",
      "side": 1,
      "message": "Hi Ben, are you saying that we should only set CDW0 when there\u0027s an error? Maybe the placement of the cdw0 in error.nvme is misleading but CDW0 is valid regardless of the command completion. In fact, most of the time it is probably used when there\u0027s no error for vendor specific IO commands.\nJim suggested to stick it in internal.error.",
      "parentUuid": "3bee566e_39d99ea8",
      "revId": "206a4847fe424f2784dc48a35f914f5329844a9c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e0c80ee_259b03f3",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 4
      },
      "lineNbr": 3963,
      "author": {
        "id": 1016048
      },
      "writtenOn": "2019-10-11T14:59:19Z",
      "side": 1,
      "message": "CDW0 is valid in the success case as well. Maybe we should rename the functions and get rid of the _status postfix.",
      "parentUuid": "ba2b5994_b7f4761e",
      "revId": "206a4847fe424f2784dc48a35f914f5329844a9c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}