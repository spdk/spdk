{
  "comments": [
    {
      "key": {
        "uuid": "39011839_81013306",
        "filename": "module/sock/posix/posix.c",
        "patchSetId": 7
      },
      "lineNbr": 72,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-10-16T09:40:12Z",
      "side": 1,
      "message": "I\u0027m not sure which is better, per sock pool or per sock_group pool yet.",
      "revId": "76963ae3c1fb5e6c518c05aec89c3a93def728d0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0486bdcf_95d5998b",
        "filename": "module/sock/posix/posix.c",
        "patchSetId": 7
      },
      "lineNbr": 618,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-10-16T09:40:12Z",
      "side": 1,
      "message": "can we use another variable to decide if flush starts? If we use DIF insert/strip, we will have to increase sock-\u003emax_iovcnt to cover max IO size but that value may be too large to use flush condition. I may be wrong.",
      "range": {
        "startLine": 618,
        "startChar": 27,
        "endLine": 618,
        "endChar": 43
      },
      "revId": "76963ae3c1fb5e6c518c05aec89c3a93def728d0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d7a51a8_e680a997",
        "filename": "module/sock/posix/posix.c",
        "patchSetId": 7
      },
      "lineNbr": 618,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2019-10-16T20:45:40Z",
      "side": 1,
      "message": "As I have it, I actually think I should use the hard-coded DEFAULT_MAX_IOV here instead, since that\u0027s the biggest unit that spdk_posix_sock_flush will use to pass to writev.\n\nI don\u0027t know how to make the flush size configurable here, because spdk_posix_sock_flush is allocating the iov on the stack, so it can\u0027t be variable size.",
      "parentUuid": "0486bdcf_95d5998b",
      "range": {
        "startLine": 618,
        "startChar": 27,
        "endLine": 618,
        "endChar": 43
      },
      "revId": "76963ae3c1fb5e6c518c05aec89c3a93def728d0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef4ba056_cd02c764",
        "filename": "module/sock/posix/posix.c",
        "patchSetId": 7
      },
      "lineNbr": 618,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-10-17T00:50:59Z",
      "side": 1,
      "message": "Thank you, I think I understand now. It\u0027s nice that each sock_req can hold many iovs and each flush sends up to DEFAULT_MAX_IOV.",
      "parentUuid": "9d7a51a8_e680a997",
      "range": {
        "startLine": 618,
        "startChar": 27,
        "endLine": 618,
        "endChar": 43
      },
      "revId": "76963ae3c1fb5e6c518c05aec89c3a93def728d0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d74160d_1dccf6de",
        "filename": "module/sock/posix/posix.c",
        "patchSetId": 7
      },
      "lineNbr": 936,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-10-16T09:40:12Z",
      "side": 1,
      "message": "Is it likely that any closed socket here is got in the next epoll_wait()? Should we swap flush and epoll_wait?",
      "revId": "76963ae3c1fb5e6c518c05aec89c3a93def728d0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1080d3bf_e5d61f6f",
        "filename": "module/sock/posix/posix.c",
        "patchSetId": 7
      },
      "lineNbr": 936,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-10-17T00:50:59Z",
      "side": 1,
      "message": "Thank you. This comment was very confusing and wrong, but your updated patch looks fine.\nI understand that in your updated patch:\n- the sock array is used to remember socks whose buffer has no empty space, and they are polled first.\n- it is possible that the same sock is added to the sock array twice if sock_flush() returns negative and epoll_wait() returns.",
      "parentUuid": "0d74160d_1dccf6de",
      "revId": "76963ae3c1fb5e6c518c05aec89c3a93def728d0",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}