{
  "comments": [
    {
      "key": {
        "uuid": "1363cebd_6fd15df5",
        "filename": "lib/ftl/ftl_band.c",
        "patchSetId": 24
      },
      "lineNbr": 63,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T21:32:39Z",
      "side": 1,
      "message": "we normally avoid using aligned() in this way - instead we add an explicit \"reserved\" member to pad the length",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21b83a0d_e141eafd",
        "filename": "lib/ftl/ftl_band.c",
        "patchSetId": 24
      },
      "lineNbr": 85,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T21:32:39Z",
      "side": 1,
      "message": "why pass the dev here?",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a36163c1_ebe549dc",
        "filename": "lib/ftl/ftl_band.c",
        "patchSetId": 24
      },
      "lineNbr": 161,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T21:32:39Z",
      "side": 1,
      "message": "Should this be an assert instead?  And have callers avoid calling this function if the state isn\u0027t CLOSED or FREE.\n\nThis seems to encourage just calling this function just in case it needs to be freed.",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a0cf540_6b14e85c",
        "filename": "lib/ftl/ftl_band.c",
        "patchSetId": 24
      },
      "lineNbr": 161,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2018-12-18T09:30:05Z",
      "side": 1,
      "message": "Correct, we should solely rely on md-\u003eref_cnt to check if we can free the metadata buffers and  assert that the band is not in open state when freeing the metadata.",
      "parentUuid": "a36163c1_ebe549dc",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9fd47650_83d8e564",
        "filename": "lib/ftl/ftl_band.c",
        "patchSetId": 24
      },
      "lineNbr": 166,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T21:32:39Z",
      "side": 1,
      "message": "should this be an assert instead?",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "482c5f0c_291548ff",
        "filename": "lib/ftl/ftl_band.c",
        "patchSetId": 24
      },
      "lineNbr": 166,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2018-12-18T09:30:05Z",
      "side": 1,
      "message": "Yeah, this should be checked before calling this function and it should be asserted here that md-\u003eref_cnt \u003d\u003d 0.",
      "parentUuid": "9fd47650_83d8e564",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4bff47a_b832e3e3",
        "filename": "lib/ftl/ftl_band.c",
        "patchSetId": 24
      },
      "lineNbr": 175,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T21:32:39Z",
      "side": 1,
      "message": "since ftl_band_validate_md() is a nop on release builds, I think this should instead be:\n\nassert(ftl_band_validate_md() \u003d\u003d true)\n\nChange ftl_band_validate_md to return bool, and put the ftl_band_has_chunks check there instead.  Then this is very clear that in a release build, there is no validation taking place.",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c3e6e37_e82f02fe",
        "filename": "lib/ftl/ftl_band.c",
        "patchSetId": 24
      },
      "lineNbr": 253,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T21:32:39Z",
      "side": 1,
      "message": "assert instead?\n\nseems bad if someone calls _ftl_band_set_closed() on a band that\u0027s already closed",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "294803ac_b2b98e27",
        "filename": "lib/ftl/ftl_band.c",
        "patchSetId": 24
      },
      "lineNbr": 253,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2018-12-18T09:30:05Z",
      "side": 1,
      "message": "It can happen - currently when a write fails we\u0027re closing the band immediately and defragging it. So if two writes fail, both will try to set the band as closed, so we need this kind of check here.",
      "parentUuid": "9c3e6e37_e82f02fe",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b63161cb_7622ce04",
        "filename": "lib/ftl/ftl_band.c",
        "patchSetId": 24
      },
      "lineNbr": 276,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T21:32:39Z",
      "side": 1,
      "message": "I think just using sizeof() directly is better, rather than adding a function that returns the sizeof.\n\nIt makes reading the code easier.  Makes it clear that this is simply a sizeof() operation and user doesn\u0027t have to check the function to see what it does.",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d47751b4_504adec4",
        "filename": "lib/ftl/ftl_band.c",
        "patchSetId": 24
      },
      "lineNbr": 393,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T21:32:39Z",
      "side": 1,
      "message": "This can\u0027t fail.  Should it just return void?",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "466175b3_acad4721",
        "filename": "lib/ftl/ftl_band.c",
        "patchSetId": 24
      },
      "lineNbr": 393,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2018-12-18T09:30:05Z",
      "side": 1,
      "message": "It\u0027s passed to ftl_band_read_md, so it needs to follow the ftl_md_pack_fn signature which requires result to be returned. If we\u0027re unpacking the whole metadata we\u0027re checking its header (version, crc32, UUID, etc.) which can fail. There\u0027s nothing to check when reading the LBA map, so we just return success here.",
      "parentUuid": "d47751b4_504adec4",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b89d100_f797d9d8",
        "filename": "lib/ftl/ftl_band.c",
        "patchSetId": 24
      },
      "lineNbr": 499,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T21:32:39Z",
      "side": 1,
      "message": "assert() instead?\n\nor even something like this:\n\nif (ftl_lba_invalid(lab)) {\n  assert(false);\n  return;\n}\n\nLet\u0027s go through other patches in this series and add asserts in cases where this shouldn\u0027t happen.",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c172b775_45787b59",
        "filename": "lib/ftl/ftl_band.c",
        "patchSetId": 24
      },
      "lineNbr": 499,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2018-12-18T09:30:05Z",
      "side": 1,
      "message": "But this is a valid case, which does happen. The LBA is set to invalid if we\u0027re writing non-user data. It happens during flush() calls and during shutdown (which is basically a flush on the whole open band). We try to have asserts checking cases that should never happen.",
      "parentUuid": "4b89d100_f797d9d8",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75ef882c_87b4965c",
        "filename": "lib/ftl/ftl_band.h",
        "patchSetId": 24
      },
      "lineNbr": 65,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T21:32:39Z",
      "side": 1,
      "message": "uint32_t instead?",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5806f08c_ee8348e5",
        "filename": "lib/ftl/ftl_band.h",
        "patchSetId": 24
      },
      "lineNbr": 203,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T21:51:04Z",
      "side": 1,
      "message": "just check chunk-\u003estate directly instead of adding this function",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bafbaf73_85ea211e",
        "filename": "lib/ftl/ftl_band.h",
        "patchSetId": 24
      },
      "lineNbr": 222,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T21:51:04Z",
      "side": 1,
      "message": "let\u0027s just have callers check band-\u003estate directly - it makes the code simpler to read\n\nI think it would actually be less characters as well",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1cc73ead_67ba5ea1",
        "filename": "lib/ftl/ftl_band.h",
        "patchSetId": 24
      },
      "lineNbr": 250,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T21:51:04Z",
      "side": 1,
      "message": "just call pthread_spin_lock inline instead of adding this function\n\nsame for ftl_band_unlock below",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f225437_6fdecb83",
        "filename": "lib/ftl/ftl_band.h",
        "patchSetId": 24
      },
      "lineNbr": 268,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T21:51:04Z",
      "side": 1,
      "message": "just check band-\u003enum_chunks directly",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5fd7b11_8d9cdbf2",
        "filename": "lib/ftl/ftl_band.h",
        "patchSetId": 24
      },
      "lineNbr": 274,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T21:32:39Z",
      "side": 1,
      "message": "is CIRCLEQ a requirement here?\n\nif CIRCLEQ has a definite advantage in this use case over TAILQ, then I guess this is OK - but we don\u0027t use CIRCLEQ anywhere else in SPDK currently, so there will be less learning curve for new readers if we can use TAILQ instead",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23157329_d4470028",
        "filename": "lib/ftl/ftl_band.h",
        "patchSetId": 24
      },
      "lineNbr": 274,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2018-12-18T09:42:59Z",
      "side": 1,
      "message": "Write pointer uses the chunk list as a circular one (i.e. we can just do CIRCLEQ_LOOP_NEXT() instead of TAILQ_NEXT() \u003d\u003d NULL ? TAILQ_HEAD() : TAILQ_NEXT()). So it\u0027s not a big advantage, but just seems like a better fit here.",
      "parentUuid": "b5fd7b11_8d9cdbf2",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca988483_f6782c4b",
        "filename": "lib/ftl/ftl_band.h",
        "patchSetId": 24
      },
      "lineNbr": 286,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T21:51:04Z",
      "side": 1,
      "message": "just check chunk-\u003estate directly instead of adding this function",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d65b074a_00e04ddf",
        "filename": "lib/ftl/ftl_rwb.c",
        "patchSetId": 24
      },
      "lineNbr": 162,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T22:03:31Z",
      "side": 1,
      "message": "in spdk we don\u0027t put var declarations inline like this",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d75a3d4_abf3d958",
        "filename": "lib/ftl/ftl_rwb.c",
        "patchSetId": 24
      },
      "lineNbr": 208,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T22:03:31Z",
      "side": 1,
      "message": "same here",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c25f22c_407b043b",
        "filename": "lib/ftl/ftl_rwb.c",
        "patchSetId": 24
      },
      "lineNbr": 433,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T22:03:31Z",
      "side": 1,
      "message": "let\u0027s drop this function",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05cf7095_18403c81",
        "filename": "lib/ftl/ftl_rwb.c",
        "patchSetId": 24
      },
      "lineNbr": 433,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2018-12-18T08:27:58Z",
      "side": 1,
      "message": "The ftl_rwb_batch structure is private to this module (it\u0027s used to maintain a lot of internal state like grouping the entries, keeping track of the number of acquired / ready entries etc.), so these getters are necessary.",
      "parentUuid": "7c25f22c_407b043b",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92bfc48f_5191ccc5",
        "filename": "lib/ftl/ftl_rwb.c",
        "patchSetId": 24
      },
      "lineNbr": 439,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T22:03:31Z",
      "side": 1,
      "message": "let\u0027s drop this function",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "155ce1a4_ed2fe95c",
        "filename": "lib/ftl/ftl_rwb.c",
        "patchSetId": 24
      },
      "lineNbr": 439,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2018-12-18T08:27:58Z",
      "side": 1,
      "message": "Same here.",
      "parentUuid": "92bfc48f_5191ccc5",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db9ce4f3_5de45f09",
        "filename": "lib/ftl/ftl_rwb.c",
        "patchSetId": 24
      },
      "lineNbr": 458,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T22:03:31Z",
      "side": 1,
      "message": "let\u0027s drop this function",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec713075_0d150e74",
        "filename": "lib/ftl/ftl_rwb.c",
        "patchSetId": 24
      },
      "lineNbr": 458,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2018-12-18T08:27:58Z",
      "side": 1,
      "message": "And here.",
      "parentUuid": "db9ce4f3_5de45f09",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "499277a5_be2599fd",
        "filename": "mk/spdk.modules.mk",
        "patchSetId": 24
      },
      "lineNbr": 73,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T22:03:31Z",
      "side": 1,
      "message": "This +\u003d change should be removed",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc98eea1_c6761f4a",
        "filename": "test/common/autotest_common.sh",
        "patchSetId": 24
      },
      "lineNbr": 254,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-12-17T22:03:31Z",
      "side": 1,
      "message": "this change doesn\u0027t seem related to this patch",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00b2552a_543d2dbb",
        "filename": "test/common/autotest_common.sh",
        "patchSetId": 24
      },
      "lineNbr": 254,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2018-12-18T08:27:58Z",
      "side": 1,
      "message": "That\u0027s correct, it\u0027s not related to this patch at all. Nevertheless, the change is pretty useful, because it speeds up the search significantly (especially if the code is on some kind of network fs). I\u0027ll move it to the patch with ftl tests.",
      "parentUuid": "fc98eea1_c6761f4a",
      "revId": "b0010009848f223ee400d7288cd05a78655de544",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}