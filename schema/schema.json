{
  "objects": [
    {
      "name": "iscsi_auth_secret",
      "fields": [
        {
          "name": "user",
          "type": "string",
          "required": true,
          "description": "Unidirectional CHAP name"
        },
        {
          "name": "secret",
          "type": "string",
          "required": true,
          "description": "Unidirectional CHAP secret"
        },
        {
          "name": "muser",
          "type": "string",
          "required": false,
          "description": "Bidirectional CHAP name"
        },
        {
          "name": "msecret",
          "type": "string",
          "required": false,
          "description": "Bidirectional CHAP secret"
        }
      ]
    },
    {
      "name": "iscsi_tgt_pg_ig_map",
      "fields": [
        {
          "name": "ig_tag",
          "type": "number",
          "required": true,
          "description": "Existing initiator group tag"
        },
        {
          "name": "pg_tag",
          "type": "number",
          "required": true,
          "description": "Existing portal group tag"
        }
      ]
    },
    {
      "name": "iscsi_portal",
      "fields": [
        {
          "name": "host",
          "type": "string",
          "required": true,
          "description": "Hostname or IP address"
        },
        {
          "name": "port",
          "type": "string",
          "required": true,
          "description": "Port number"
        }
      ]
    },
    {
      "name": "nvmf_listen_address",
      "fields": [
        {
          "name": "trtype",
          "type": "string",
          "required": true,
          "description": "Transport type (\"RDMA\")"
        },
        {
          "name": "adrfam",
          "type": "string",
          "required": false,
          "description": "Address family (\"IPv4\", \"IPv6\", \"IB\", or \"FC\")"
        },
        {
          "name": "traddr",
          "type": "string",
          "required": true,
          "description": "Transport address"
        },
        {
          "name": "trsvcid",
          "type": "string",
          "required": false,
          "description": "Transport service ID (required for RDMA or TCP)"
        }
      ]
    },
    {
      "name": "nvmf_namespace",
      "fields": [
        {
          "name": "nsid",
          "type": "number",
          "required": false,
          "description": "Namespace ID between 1 and 4294967294, inclusive. Default: Automatically assign NSID."
        },
        {
          "name": "bdev_name",
          "type": "string",
          "required": true,
          "description": "Name of bdev to expose as a namespace."
        },
        {
          "name": "nguid",
          "type": "string",
          "required": false,
          "description": "16-byte namespace globally unique identifier in hexadecimal (e.g. \"ABCDEF0123456789ABCDEF0123456789\")"
        },
        {
          "name": "eui64",
          "type": "string",
          "required": false,
          "description": "8-byte namespace EUI-64 in hexadecimal (e.g. \"ABCDEF0123456789\")"
        },
        {
          "name": "uuid",
          "type": "string",
          "required": false,
          "description": "RFC 4122 UUID (e.g. \"ceccf520-691e-4b46-9546-34af789907c5\")"
        },
        {
          "name": "ptpl_file",
          "type": "string",
          "required": false,
          "description": "File path to save/restore persistent reservation information"
        },
        {
          "name": "anagrpid",
          "type": "number",
          "required": false,
          "description": "ANA group ID. Default: Namespace ID."
        },
        {
          "name": "hide_metadata",
          "type": "boolean",
          "required": false,
          "description": "Enable hide_metadata option to the bdev. Default: false"
        }
      ]
    },
    {
      "name": "nvmf_admin_cmd_passthru",
      "fields": [
        {
          "name": "identify_ctrlr",
          "type": "boolean",
          "required": false,
          "description": "If true, enables custom identify handler that reports some identify attributes from the underlying NVMe drive"
        },
        {
          "name": "identify_uuid_list",
          "type": "boolean",
          "required": false,
          "description": "If true, enables passthru identify UUID list (0x17 CNS) admin cmds for underlying NVMe device"
        },
        {
          "name": "get_log_page",
          "type": "boolean",
          "required": false,
          "description": "If true, enables passthru get log page command handlers for underlying NVMe drive (for non-fabrics related log pages)"
        },
        {
          "name": "get_set_features",
          "type": "boolean",
          "required": false,
          "description": "If true, enables passthru get/set_feature OPC handlers for underlying NVMe drive"
        },
        {
          "name": "sanitize",
          "type": "boolean",
          "required": false,
          "description": "If true, enables passthru sanitize OPC handlers for underlying NVMe drive"
        },
        {
          "name": "security_send_recv",
          "type": "boolean",
          "required": false,
          "description": "If true, enables passthru security send/recieve OPC handlers for underlying NVMe drive"
        },
        {
          "name": "fw_update",
          "type": "boolean",
          "required": false,
          "description": "If true, enables passthru firmware download/commit OPC handlers for underlying NVMe drive"
        },
        {
          "name": "nvme_mi",
          "type": "boolean",
          "required": false,
          "description": "If true, enables passthru NVMe-MI send/recieve OPC handlers for underlying NVMe drive"
        },
        {
          "name": "vendor_specific",
          "type": "boolean",
          "required": false,
          "description": "If true, enables passthru command handlers for underlying NVMe drive for vendor specific cmds (OPCs: 0xC0-0xFF)"
        }
      ]
    },
    {
      "name": "vhost_blk_controller_params",
      "fields": [
        {
          "name": "bdev",
          "type": "string",
          "required": false,
          "description": "Backing bdev name or Null if bdev is hot-removed"
        },
        {
          "name": "readonly",
          "type": "boolean",
          "required": false,
          "description": "True if controllers is readonly, false otherwise"
        }
      ]
    },
    {
      "name": "vhost_scsi_controller_params",
      "fields": [
        {
          "name": "target_name",
          "type": "string",
          "required": false,
          "description": "Name of this SCSI target"
        },
        {
          "name": "id",
          "type": "number",
          "required": false,
          "description": "Unique SPDK global SCSI target ID"
        },
        {
          "name": "scsi_dev_num",
          "type": "number",
          "required": false,
          "description": "SCSI target ID initiator will see when scanning this controller"
        },
        {
          "name": "luns",
          "type": "array",
          "required": false,
          "description": "array of objects describing @ref rpc_vhost_get_controllers_scsi_luns"
        }
      ]
    },
    {
      "name": "vhost_scsi_luns_controller_params",
      "fields": [
        {
          "name": "id",
          "type": "number",
          "required": false,
          "description": "SCSI LUN ID"
        },
        {
          "name": "bdev_name",
          "type": "string",
          "required": false,
          "description": "Backing bdev name"
        }
      ]
    },
    {
      "name": "vhost_nvme_controller_params",
      "fields": [
        {
          "name": "nsid",
          "type": "number",
          "required": false,
          "description": "Namespace ID"
        },
        {
          "name": "bdev",
          "type": "string",
          "required": false,
          "description": "Backing bdev name"
        }
      ]
    }
  ],
  "methods": [
    {
      "name": "spdk_kill_instance",
      "params": [
        {
          "name": "sig_name",
          "type": "string",
          "required": true,
          "description": "Signal to send (SIGINT, SIGTERM, SIGQUIT, SIGHUP, or SIGKILL)"
        }
      ]
    },
    {
      "name": "framework_monitor_context_switch",
      "params": [
        {
          "name": "enabled",
          "type": "boolean",
          "required": false,
          "description": "Enable (`true`) or disable (`false`) monitoring (omit this parameter to query the current state)"
        }
      ]
    },
    {
      "name": "framework_start_init",
      "params": []
    },
    {
      "name": "framework_wait_init",
      "params": []
    },
    {
      "name": "rpc_get_methods",
      "params": [
        {
          "name": "current",
          "type": "boolean",
          "required": false,
          "description": "Get an array of RPC methods only callable in the current state."
        }
      ]
    },
    {
      "name": "framework_get_subsystems",
      "params": []
    },
    {
      "name": "framework_get_config",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "SPDK subsystem name"
        }
      ]
    },
    {
      "name": "framework_get_reactors",
      "params": []
    },
    {
      "name": "framework_set_scheduler",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of a scheduler"
        },
        {
          "name": "period",
          "type": "number",
          "required": false,
          "description": "Scheduler period"
        },
        {
          "name": "load_limit",
          "type": "number",
          "required": false,
          "description": "Thread load limit in % (dynamic only)"
        },
        {
          "name": "core_limit",
          "type": "number",
          "required": false,
          "description": "Load limit on the core to be considered full (dynamic only)"
        },
        {
          "name": "core_busy",
          "type": "number",
          "required": false,
          "description": "Indicates at what load on core scheduler should move threads to a different core (dynamic only)"
        }
      ]
    },
    {
      "name": "framework_get_scheduler",
      "params": []
    },
    {
      "name": "framework_get_governor",
      "params": []
    },
    {
      "name": "scheduler_set_options",
      "params": [
        {
          "name": "scheduling_core",
          "type": "number",
          "required": false,
          "description": "Main core of scheduler. Idle threads move to the scheduling core. Can be set only once"
        },
        {
          "name": "isolated_core_mask",
          "type": "string",
          "required": false,
          "description": "Select CPU cores to isolate from scheduling changes. Can be set only once"
        }
      ]
    },
    {
      "name": "framework_enable_cpumask_locks",
      "params": []
    },
    {
      "name": "framework_disable_cpumask_locks",
      "params": []
    },
    {
      "name": "thread_get_stats",
      "params": []
    },
    {
      "name": "thread_set_cpumask",
      "params": [
        {
          "name": "id",
          "type": "number",
          "required": true,
          "description": "Thread ID"
        },
        {
          "name": "cpumask",
          "type": "string",
          "required": true,
          "description": "Cpumask for this thread"
        }
      ]
    },
    {
      "name": "trace_enable_tpoint_group",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "bdev, nvmf_rdma, nvmf_tcp, scsi, iscsi_conn, ftl, all"
        }
      ]
    },
    {
      "name": "trace_disable_tpoint_group",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "bdev, nvmf_rdma, nvmf_tcp, all"
        }
      ]
    },
    {
      "name": "trace_set_tpoint_mask",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "bdev, nvmf_rdma, nvmf_tcp, scsi, iscsi_conn, ftl"
        },
        {
          "name": "tpoint_mask",
          "type": "number",
          "required": true,
          "description": "mask to enable tracepoints inside a group"
        }
      ]
    },
    {
      "name": "trace_clear_tpoint_mask",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "bdev, nvmf_rdma, nvmf_tcp, scsi, iscsi_conn, ftl"
        },
        {
          "name": "tpoint_mask",
          "type": "number",
          "required": true,
          "description": "mask to diesable tracepoints inside a group"
        }
      ]
    },
    {
      "name": "trace_get_tpoint_group_mask",
      "params": []
    },
    {
      "name": "trace_get_info",
      "params": []
    },
    {
      "name": "log_set_print_level",
      "params": [
        {
          "name": "level",
          "type": "string",
          "required": true,
          "description": "ERROR, WARNING, NOTICE, INFO, DEBUG"
        }
      ]
    },
    {
      "name": "log_get_print_level",
      "params": []
    },
    {
      "name": "log_set_level",
      "params": [
        {
          "name": "level",
          "type": "string",
          "required": true,
          "description": "ERROR, WARNING, NOTICE, INFO, DEBUG"
        }
      ]
    },
    {
      "name": "log_get_level",
      "params": []
    },
    {
      "name": "log_set_flag",
      "params": [
        {
          "name": "flag",
          "type": "string",
          "required": true,
          "description": "A log flag, or 'all'"
        }
      ]
    },
    {
      "name": "log_clear_flag",
      "params": [
        {
          "name": "flag",
          "type": "string",
          "required": true,
          "description": "A log flag, or 'all'"
        }
      ]
    },
    {
      "name": "log_get_flags",
      "params": []
    },
    {
      "name": "log_enable_timestamps",
      "params": [
        {
          "name": "enabled",
          "type": "boolean",
          "required": true,
          "description": "on or off"
        }
      ]
    },
    {
      "name": "thread_get_pollers",
      "params": []
    },
    {
      "name": "thread_get_io_channels",
      "params": []
    },
    {
      "name": "env_dpdk_get_mem_stats",
      "params": []
    },
    {
      "name": "accel_get_module_info",
      "params": []
    },
    {
      "name": "accel_get_opc_assignments",
      "params": []
    },
    {
      "name": "accel_assign_opc",
      "params": [
        {
          "name": "opname",
          "type": "string",
          "required": true,
          "description": "name of operation"
        },
        {
          "name": "module",
          "type": "string",
          "required": true,
          "description": "name of module"
        }
      ]
    },
    {
      "name": "accel_crypto_key_create",
      "params": [
        {
          "name": "cipher",
          "type": "string",
          "required": true,
          "description": "crypto cipher to use"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "description": "Key in **hex** form"
        },
        {
          "name": "key2",
          "type": "string",
          "required": false,
          "description": "Optional 2nd part of the key or a tweak in **hex** form"
        },
        {
          "name": "tweak_mode",
          "type": "string",
          "required": false,
          "description": "Tweak mode to use: SIMPLE_LBA, JOIN_NEG_LBA_WITH_LBA, INCR_512_FULL_LBA, INCR_512_UPPER_LBA. Default is SIMPLE_LBA"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "The key name"
        }
      ]
    },
    {
      "name": "accel_crypto_key_destroy",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "The key name"
        }
      ]
    },
    {
      "name": "accel_crypto_keys_get",
      "params": [
        {
          "name": "key_name",
          "type": "string",
          "required": false,
          "description": "If specified, return info about a specific key"
        }
      ]
    },
    {
      "name": "accel_set_driver",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the platform driver"
        }
      ]
    },
    {
      "name": "accel_set_options",
      "params": [
        {
          "name": "small_cache_size",
          "type": "number",
          "required": false,
          "description": "Size of the small iobuf cache"
        },
        {
          "name": "large_cache_size",
          "type": "number",
          "required": false,
          "description": "Size of the large iobuf cache"
        },
        {
          "name": "task_count",
          "type": "number",
          "required": false,
          "description": "Maximum number of tasks per IO channel"
        },
        {
          "name": "sequence_count",
          "type": "number",
          "required": false,
          "description": "Maximum number of sequences per IO channel"
        },
        {
          "name": "buf_count",
          "type": "number",
          "required": false,
          "description": "Maximum number of accel buffers per IO channel"
        }
      ]
    },
    {
      "name": "accel_get_stats",
      "params": []
    },
    {
      "name": "accel_error_inject_error",
      "params": [
        {
          "name": "opcode",
          "type": "string",
          "required": true,
          "description": "Operation to inject errors."
        },
        {
          "name": "type",
          "type": "string",
          "required": true,
          "description": "Type of errors to inject (\"corrupt\": corrupt the data, \"failure\": fail the operation, \"disable\": disable error injection)."
        },
        {
          "name": "count",
          "type": "number",
          "required": false,
          "description": "Numbers of errors to inject on each IO channel (`UINT64_MAX` by default)."
        },
        {
          "name": "interval",
          "type": "number",
          "required": false,
          "description": "Interval between injections."
        },
        {
          "name": "errcode",
          "type": "number",
          "required": false,
          "description": "Error code to inject (only relevant for type=failure)."
        }
      ]
    },
    {
      "name": "compressdev_scan_accel_module",
      "params": [
        {
          "name": "pmd",
          "type": "number",
          "required": true,
          "description": "pmd selection"
        }
      ]
    },
    {
      "name": "dsa_scan_accel_module",
      "params": [
        {
          "name": "config_kernel_mode",
          "type": "boolean",
          "required": false,
          "description": "If set, will use kernel idxd driver."
        }
      ]
    },
    {
      "name": "iaa_scan_accel_module",
      "params": []
    },
    {
      "name": "ioat_scan_accel_module",
      "params": []
    },
    {
      "name": "dpdk_cryptodev_scan_accel_module",
      "params": []
    },
    {
      "name": "dpdk_cryptodev_set_driver",
      "params": [
        {
          "name": "driver_name",
          "type": "string",
          "required": true,
          "description": "The driver, can be one of crypto_aesni_mb, crypto_qat or mlx5_pci"
        }
      ]
    },
    {
      "name": "dpdk_cryptodev_get_driver",
      "params": []
    },
    {
      "name": "mlx5_scan_accel_module",
      "params": [
        {
          "name": "qp_size",
          "type": "number",
          "required": false,
          "description": "qpair size"
        },
        {
          "name": "num_requests",
          "type": "number",
          "required": false,
          "description": "Size of the shared requests pool"
        }
      ]
    },
    {
      "name": "accel_mlx5_dump_stats",
      "params": [
        {
          "name": "level",
          "type": "string",
          "required": false,
          "description": "Verbose level, one of \\\"total\\\", \\\"channel\\\" or \\\"device\\\""
        }
      ]
    },
    {
      "name": "bdev_set_options",
      "params": [
        {
          "name": "bdev_io_pool_size",
          "type": "number",
          "required": false,
          "description": "Number of spdk_bdev_io structures in shared buffer pool"
        },
        {
          "name": "bdev_io_cache_size",
          "type": "number",
          "required": false,
          "description": "Maximum number of spdk_bdev_io structures cached per thread"
        },
        {
          "name": "bdev_auto_examine",
          "type": "boolean",
          "required": false,
          "description": "If set to false, the bdev layer will not examine every disks automatically"
        },
        {
          "name": "iobuf_small_cache_size",
          "type": "number",
          "required": false,
          "description": "Size of the small iobuf per thread cache"
        },
        {
          "name": "iobuf_large_cache_size",
          "type": "number",
          "required": false,
          "description": "Size of the large iobuf per thread cache"
        }
      ]
    },
    {
      "name": "bdev_get_bdevs",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": false,
          "description": "Block device name"
        },
        {
          "name": "timeout",
          "type": "number",
          "required": false,
          "description": "Time (ms) to wait for a bdev with specified name to appear"
        }
      ]
    },
    {
      "name": "bdev_examine",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Block device name"
        }
      ]
    },
    {
      "name": "bdev_wait_for_examine",
      "params": []
    },
    {
      "name": "bdev_get_iostat",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": false,
          "description": "Block device name"
        },
        {
          "name": "per_channel",
          "type": "boolean",
          "required": false,
          "description": "Display per channel data for specified block device."
        },
        {
          "name": "reset_mode",
          "type": "string",
          "required": false,
          "description": "Mode to reset I/O statistics after obtaining it: all, maxmin, none (default: none)"
        }
      ]
    },
    {
      "name": "bdev_reset_iostat",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": false,
          "description": "Block device name"
        },
        {
          "name": "mode",
          "type": "string",
          "required": false,
          "description": "Mode to reset I/O statistics: all, maxmin, none (default: all)"
        }
      ]
    },
    {
      "name": "bdev_enable_histogram",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Block device name"
        },
        {
          "name": "enable",
          "type": "boolean",
          "required": true,
          "description": "Enable or disable histogram on specified device"
        },
        {
          "name": "opc",
          "type": "string",
          "required": false,
          "description": "IO type name"
        },
        {
          "name": "granularity",
          "type": "number",
          "required": false,
          "description": "Histogram bucket granularity. Default: 7"
        },
        {
          "name": "min_nsec",
          "type": "number",
          "required": false,
          "description": "Min value in nanoseconds to track. Default: 1000 (1us)"
        },
        {
          "name": "max_nsec",
          "type": "number",
          "required": false,
          "description": "Max value in nanoseconds to track. Default: 120000000000 (120 seconds)"
        }
      ]
    },
    {
      "name": "bdev_get_histogram",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Block device name"
        }
      ]
    },
    {
      "name": "bdev_set_qos_limit",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Block device name"
        },
        {
          "name": "rw_ios_per_sec",
          "type": "number",
          "required": false,
          "description": "Number of R/W I/Os per second to allow. 0 means unlimited."
        },
        {
          "name": "rw_mbytes_per_sec",
          "type": "number",
          "required": false,
          "description": "Number of R/W megabytes per second to allow. 0 means unlimited."
        },
        {
          "name": "r_mbytes_per_sec",
          "type": "number",
          "required": false,
          "description": "Number of Read megabytes per second to allow. 0 means unlimited."
        },
        {
          "name": "w_mbytes_per_sec",
          "type": "number",
          "required": false,
          "description": "Number of Write megabytes per second to allow. 0 means unlimited."
        }
      ]
    },
    {
      "name": "bdev_set_qd_sampling_period",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Block device name"
        },
        {
          "name": "period",
          "type": "number",
          "required": true,
          "description": "period (in microseconds).If set to 0, polling will be disabled."
        }
      ]
    },
    {
      "name": "bdev_crypto_create",
      "params": [
        {
          "name": "base_bdev_name",
          "type": "string",
          "required": true,
          "description": "Name of the base bdev"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the crypto vbdev to create"
        },
        {
          "name": "crypto_pmd",
          "type": "string",
          "required": false,
          "description": "Name of the crypto device driver. Obsolete, see accel_crypto_key_create"
        },
        {
          "name": "key",
          "type": "string",
          "required": false,
          "description": "Key in hex form. Obsolete, see accel_crypto_key_create"
        },
        {
          "name": "cipher",
          "type": "string",
          "required": false,
          "description": "Cipher to use, AES_CBC or AES_XTS (QAT and MLX5). Obsolete, see accel_crypto_key_create"
        },
        {
          "name": "key2",
          "type": "string",
          "required": false,
          "description": "2nd key in hex form only required for cipher AET_XTS. Obsolete, see accel_crypto_key_create"
        },
        {
          "name": "key_name",
          "type": "string",
          "required": false,
          "description": "Name of the key created with accel_crypto_key_create"
        }
      ]
    },
    {
      "name": "bdev_crypto_delete",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the crypto bdev"
        }
      ]
    },
    {
      "name": "bdev_ocf_create",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name to use"
        },
        {
          "name": "mode",
          "type": "string",
          "required": true,
          "description": "OCF cache mode: wb, wt, pt, wa, wi, wo"
        },
        {
          "name": "cache_line_size",
          "type": "number",
          "required": false,
          "description": "OCF cache line size in KiB: 4, 8, 16, 32, 64"
        },
        {
          "name": "cache_bdev_name",
          "type": "string",
          "required": true,
          "description": "Name of underlying cache bdev"
        },
        {
          "name": "core_bdev_name",
          "type": "string",
          "required": true,
          "description": "Name of underlying core bdev"
        }
      ]
    },
    {
      "name": "bdev_ocf_delete",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        }
      ]
    },
    {
      "name": "bdev_ocf_get_stats",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Block device name"
        }
      ]
    },
    {
      "name": "bdev_ocf_reset_stats",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Block device name"
        }
      ]
    },
    {
      "name": "bdev_ocf_get_bdevs",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": false,
          "description": "Name of OCF vbdev or name of cache device or name of core device"
        }
      ]
    },
    {
      "name": "bdev_ocf_set_cache_mode",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        },
        {
          "name": "mode",
          "type": "string",
          "required": true,
          "description": "OCF cache mode: wb, wt, pt, wa, wi, wo"
        }
      ]
    },
    {
      "name": "bdev_ocf_set_seqcutoff",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        },
        {
          "name": "policy",
          "type": "string",
          "required": true,
          "description": "Sequential cutoff policy: always, full, never"
        },
        {
          "name": "threshold",
          "type": "number",
          "required": false,
          "description": "Activation threshold in KiB"
        },
        {
          "name": "promotion_count",
          "type": "number",
          "required": false,
          "description": "Promotion request count"
        }
      ]
    },
    {
      "name": "bdev_ocf_flush_start",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        }
      ]
    },
    {
      "name": "bdev_ocf_flush_status",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        }
      ]
    },
    {
      "name": "bdev_malloc_create",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": false,
          "description": "Bdev name to use"
        },
        {
          "name": "block_size",
          "type": "number",
          "required": true,
          "description": "Data block size in bytes -must be multiple of 512"
        },
        {
          "name": "num_blocks",
          "type": "number",
          "required": true,
          "description": "Number of blocks"
        },
        {
          "name": "uuid",
          "type": "string",
          "required": false,
          "description": "UUID of new bdev"
        },
        {
          "name": "optimal_io_boundary",
          "type": "number",
          "required": false,
          "description": "Split on optimal IO boundary, in number of blocks, default 0"
        },
        {
          "name": "md_size",
          "type": "number",
          "required": false,
          "description": "Metadata size for this bdev (0, 8, 16, 32, 64, or 128). Default is 0."
        },
        {
          "name": "md_interleave",
          "type": "boolean",
          "required": false,
          "description": "Metadata location, interleaved if true, and separated if false. Default is false."
        },
        {
          "name": "dif_type",
          "type": "number",
          "required": false,
          "description": "Protection information type. Parameter --md-size needs to be set along --dif-type. Default=0 - no protection."
        },
        {
          "name": "dif_is_head_of_md",
          "type": "boolean",
          "required": false,
          "description": "Protection information is in the first 8 bytes of metadata. Default=false."
        },
        {
          "name": "physical_block_size",
          "type": "number",
          "required": false,
          "description": "Physical block size of device; must be a power of 2 and at least 512"
        }
      ]
    },
    {
      "name": "bdev_malloc_delete",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        }
      ]
    },
    {
      "name": "bdev_null_create",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name to use"
        },
        {
          "name": "block_size",
          "type": "number",
          "required": true,
          "description": "Block size in bytes"
        },
        {
          "name": "num_blocks",
          "type": "number",
          "required": true,
          "description": "Number of blocks"
        },
        {
          "name": "uuid",
          "type": "string",
          "required": false,
          "description": "UUID of new bdev"
        },
        {
          "name": "md_size",
          "type": "number",
          "required": false,
          "description": "Metadata size for this bdev. Default=0."
        },
        {
          "name": "dif_type",
          "type": "number",
          "required": false,
          "description": "Protection information type. Parameter --md-size needs to be set along --dif-type. Default=0 - no protection."
        },
        {
          "name": "dif_is_head_of_md",
          "type": "boolean",
          "required": false,
          "description": "Protection information is in the first 8 bytes of metadata. Default=false."
        },
        {
          "name": "preferred_write_granularity",
          "type": "number",
          "required": false,
          "description": "Preferred write granularity in blocks"
        },
        {
          "name": "preferred_write_alignment",
          "type": "number",
          "required": false,
          "description": "Preferred write alignment in blocks"
        },
        {
          "name": "optimal_write_size",
          "type": "number",
          "required": false,
          "description": "Optimal write size in blocks"
        },
        {
          "name": "preferred_unmap_granularity",
          "type": "number",
          "required": false,
          "description": "Preferred unmap granularity in blocks"
        },
        {
          "name": "preferred_unmap_alignment",
          "type": "number",
          "required": false,
          "description": "Preferred unmap alignment in blocks"
        }
      ]
    },
    {
      "name": "bdev_null_delete",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        }
      ]
    },
    {
      "name": "bdev_null_resize",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        },
        {
          "name": "new_size",
          "type": "number",
          "required": true,
          "description": "Bdev new capacity in MiB"
        }
      ]
    },
    {
      "name": "bdev_aio_create",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name to use"
        },
        {
          "name": "filename",
          "type": "string",
          "required": true,
          "description": "Path to device or file"
        },
        {
          "name": "block_size",
          "type": "number",
          "required": false,
          "description": "Block size in bytes"
        },
        {
          "name": "readonly",
          "type": "boolean",
          "required": false,
          "description": "set aio bdev as read-only"
        },
        {
          "name": "fallocate",
          "type": "boolean",
          "required": false,
          "description": "Enable UNMAP and WRITE ZEROES support. Intended only for testing purposes due to synchronous syscall."
        },
        {
          "name": "uuid",
          "type": "string",
          "required": false,
          "description": "UUID of new bdev"
        }
      ]
    },
    {
      "name": "bdev_aio_rescan",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        }
      ]
    },
    {
      "name": "bdev_aio_delete",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        }
      ]
    },
    {
      "name": "bdev_nvme_set_options",
      "params": [
        {
          "name": "action_on_timeout",
          "type": "string",
          "required": false,
          "description": "Action to take on command time out: none, reset or abort"
        },
        {
          "name": "timeout_us",
          "type": "number",
          "required": false,
          "description": "Timeout for each command, in microseconds. If 0, don't track timeouts"
        },
        {
          "name": "timeout_admin_us",
          "type": "number",
          "required": false,
          "description": "Timeout for each admin command, in microseconds. If 0, treat same as io timeouts ('timeout_us')"
        },
        {
          "name": "keep_alive_timeout_ms",
          "type": "number",
          "required": false,
          "description": "Keep alive timeout period in milliseconds, default is 10s"
        },
        {
          "name": "arbitration_burst",
          "type": "number",
          "required": false,
          "description": "The value is expressed as a power of two, a value of 111b indicates no limit"
        },
        {
          "name": "low_priority_weight",
          "type": "number",
          "required": false,
          "description": "The maximum number of commands that the controller may launch at one time from a low priority queue"
        },
        {
          "name": "medium_priority_weight",
          "type": "number",
          "required": false,
          "description": "The maximum number of commands that the controller may launch at one time from a medium priority queue"
        },
        {
          "name": "high_priority_weight",
          "type": "number",
          "required": false,
          "description": "The maximum number of commands that the controller may launch at one time from a high priority queue"
        },
        {
          "name": "nvme_adminq_poll_period_us",
          "type": "number",
          "required": false,
          "description": "How often the admin queue is polled for asynchronous events in microseconds"
        },
        {
          "name": "nvme_ioq_poll_period_us",
          "type": "number",
          "required": false,
          "description": "How often I/O queues are polled for completions, in microseconds. Default: 0 (as fast as possible)."
        },
        {
          "name": "io_queue_requests",
          "type": "number",
          "required": false,
          "description": "The number of requests allocated for each NVMe I/O queue. Default: 512."
        },
        {
          "name": "delay_cmd_submit",
          "type": "boolean",
          "required": false,
          "description": "Enable delaying NVMe command submission to allow batching of multiple commands. Default: `true`."
        },
        {
          "name": "transport_retry_count",
          "type": "number",
          "required": false,
          "description": "The number of attempts per I/O in the transport layer before an I/O fails."
        },
        {
          "name": "bdev_retry_count",
          "type": "number",
          "required": false,
          "description": "The number of attempts per I/O in the bdev layer before an I/O fails. -1 means infinite retries."
        },
        {
          "name": "transport_ack_timeout",
          "type": "number",
          "required": false,
          "description": "Time to wait ack until retransmission for RDMA or connection close for TCP. Range 0-31 where 0 means use default."
        },
        {
          "name": "ctrlr_loss_timeout_sec",
          "type": "number",
          "required": false,
          "description": "Time to wait until ctrlr is reconnected before deleting ctrlr.  -1 means infinite reconnects. 0 means no reconnect."
        },
        {
          "name": "reconnect_delay_sec",
          "type": "number",
          "required": false,
          "description": "Time to delay a reconnect trial. 0 means no reconnect."
        },
        {
          "name": "fast_io_fail_timeout_sec",
          "type": "number",
          "required": false,
          "description": "Time to wait until ctrlr is reconnected before failing I/O to ctrlr. 0 means no such timeout."
        },
        {
          "name": "disable_auto_failback",
          "type": "boolean",
          "required": false,
          "description": "Disable automatic failback. The RPC bdev_nvme_set_preferred_path can be used to do manual failback."
        },
        {
          "name": "generate_uuids",
          "type": "boolean",
          "required": false,
          "description": "Enable generation of UUIDs for NVMe bdevs that do not provide this value themselves."
        },
        {
          "name": "transport_tos",
          "type": "number",
          "required": false,
          "description": "IPv4 Type of Service value. Only applicable for RDMA transport. Default: 0 (no TOS is applied)."
        },
        {
          "name": "nvme_error_stat",
          "type": "boolean",
          "required": false,
          "description": "Enable collecting NVMe error counts."
        },
        {
          "name": "rdma_srq_size",
          "type": "number",
          "required": false,
          "description": "Set the size of a shared rdma receive queue. Default: 0 (disabled)."
        },
        {
          "name": "io_path_stat",
          "type": "boolean",
          "required": false,
          "description": "Enable collecting I/O stat of each nvme bdev io path. Default: `false`."
        },
        {
          "name": "allow_accel_sequence",
          "type": "boolean",
          "required": false,
          "description": "Allow NVMe bdevs to advertise support for accel sequences if the controller also supports them.  Default: `false`."
        },
        {
          "name": "rdma_max_cq_size",
          "type": "number",
          "required": false,
          "description": "Set the maximum size of a rdma completion queue. Default: 0 (unlimited)"
        },
        {
          "name": "rdma_cm_event_timeout_ms",
          "type": "number",
          "required": false,
          "description": "Time to wait for RDMA CM events. Default: 0 (0 means using default value of driver)."
        },
        {
          "name": "dhchap_digests",
          "type": "list",
          "required": false,
          "description": "List of allowed DH-HMAC-CHAP digests."
        },
        {
          "name": "dhchap_dhgroups",
          "type": "list",
          "required": false,
          "description": "List of allowed DH-HMAC-CHAP DH groups."
        },
        {
          "name": "rdma_umr_per_io",
          "type": "boolean",
          "required": false,
          "description": "Enable/disable scatter-gather UMR per IO in RDMA transport if supported by system"
        },
        {
          "name": "tcp_connect_timeout_ms",
          "type": "number",
          "required": false,
          "description": "Time to wait until TCP connection is done. Default: 0 (no timeout)."
        },
        {
          "name": "enable_flush",
          "type": "boolean",
          "required": false,
          "description": "If true, pass flush to nvme devices when volatile write cache is present. Default : `false`."
        }
      ]
    },
    {
      "name": "bdev_nvme_set_hotplug",
      "params": [
        {
          "name": "enable",
          "type": "boolean",
          "required": true,
          "description": "True to enable, false to disable"
        },
        {
          "name": "period_us",
          "type": "number",
          "required": false,
          "description": "How often to poll for hot-insert and hot-remove events. Values: 0 - reset/use default or 1 to 10000000."
        }
      ]
    },
    {
      "name": "bdev_nvme_attach_controller",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the NVMe controller, prefix for each bdev name"
        },
        {
          "name": "trtype",
          "type": "string",
          "required": true,
          "description": "NVMe-oF target trtype: rdma or pcie"
        },
        {
          "name": "traddr",
          "type": "string",
          "required": true,
          "description": "NVMe-oF target address: ip or BDF"
        },
        {
          "name": "adrfam",
          "type": "string",
          "required": false,
          "description": "NVMe-oF target adrfam: ipv4, ipv6, ib, fc, intra_host"
        },
        {
          "name": "trsvcid",
          "type": "string",
          "required": false,
          "description": "NVMe-oF target trsvcid: port number"
        },
        {
          "name": "priority",
          "type": "string",
          "required": false,
          "description": "Transport connection priority. Supported by TCP transport with POSIX sock module (see socket(7) man page)."
        },
        {
          "name": "subnqn",
          "type": "string",
          "required": false,
          "description": "NVMe-oF target subnqn"
        },
        {
          "name": "hostnqn",
          "type": "string",
          "required": false,
          "description": "NVMe-oF target hostnqn"
        },
        {
          "name": "hostaddr",
          "type": "string",
          "required": false,
          "description": "NVMe-oF host address: ip address"
        },
        {
          "name": "hostsvcid",
          "type": "string",
          "required": false,
          "description": "NVMe-oF host trsvcid: port number"
        },
        {
          "name": "prchk_reftag",
          "type": "boolean",
          "required": false,
          "description": "Enable checking of PI reference tag for I/O processing"
        },
        {
          "name": "prchk_guard",
          "type": "boolean",
          "required": false,
          "description": "Enable checking of PI guard for I/O processing"
        },
        {
          "name": "hdgst",
          "type": "boolean",
          "required": false,
          "description": "Enable TCP header digest"
        },
        {
          "name": "ddgst",
          "type": "boolean",
          "required": false,
          "description": "Enable TCP data digest"
        },
        {
          "name": "fabrics_connect_timeout_us",
          "type": "number",
          "required": false,
          "description": "Timeout for fabrics connect (in microseconds)"
        },
        {
          "name": "multipath",
          "type": "string",
          "required": false,
          "description": "Multipathing behavior: disable, failover, multipath. Default is failover."
        },
        {
          "name": "num_io_queues",
          "type": "number",
          "required": false,
          "description": "The number of IO queues to request during initialization. Range: (0, UINT16_MAX + 1], Default is 1024."
        },
        {
          "name": "ctrlr_loss_timeout_sec",
          "type": "number",
          "required": false,
          "description": "Time to wait until ctrlr is reconnected before deleting ctrlr.  -1 means infinite reconnects. 0 means no reconnect."
        },
        {
          "name": "reconnect_delay_sec",
          "type": "number",
          "required": false,
          "description": "Time to delay a reconnect trial. 0 means no reconnect."
        },
        {
          "name": "fast_io_fail_timeout_sec",
          "type": "number",
          "required": false,
          "description": "Time to wait until ctrlr is reconnected before failing I/O to ctrlr. 0 means no such timeout."
        },
        {
          "name": "psk",
          "type": "string",
          "required": false,
          "description": "Name of the pre-shared key to be used for TLS (Enables SSL socket implementation for TCP)"
        },
        {
          "name": "max_bdevs",
          "type": "number",
          "required": false,
          "description": "The size of the name array for newly created bdevs. Default is 128."
        },
        {
          "name": "dhchap_key",
          "type": "string",
          "required": false,
          "description": "DH-HMAC-CHAP key name (required if controller key is specified)"
        },
        {
          "name": "dhchap_ctrlr_key",
          "type": "string",
          "required": false,
          "description": "DH-HMAC-CHAP controller key name."
        },
        {
          "name": "allow_unrecognized_csi",
          "type": "boolean",
          "required": false,
          "description": "Allow attaching namespaces with unrecognized command set identifiers. These will only support NVMe passthrough."
        }
      ]
    },
    {
      "name": "bdev_nvme_get_controllers",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": false,
          "description": "NVMe controller name"
        }
      ]
    },
    {
      "name": "bdev_nvme_detach_controller",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Controller name"
        },
        {
          "name": "trtype",
          "type": "string",
          "required": false,
          "description": "NVMe-oF target trtype: rdma or tcp"
        },
        {
          "name": "traddr",
          "type": "string",
          "required": false,
          "description": "NVMe-oF target address: ip or BDF"
        },
        {
          "name": "adrfam",
          "type": "string",
          "required": false,
          "description": "NVMe-oF target adrfam: ipv4, ipv6, ib, fc, intra_host"
        },
        {
          "name": "trsvcid",
          "type": "string",
          "required": false,
          "description": "NVMe-oF target trsvcid: port number"
        },
        {
          "name": "subnqn",
          "type": "string",
          "required": false,
          "description": "NVMe-oF target subnqn"
        },
        {
          "name": "hostaddr",
          "type": "string",
          "required": false,
          "description": "NVMe-oF host address: ip"
        },
        {
          "name": "hostsvcid",
          "type": "string",
          "required": false,
          "description": "NVMe-oF host svcid: port number"
        }
      ]
    },
    {
      "name": "bdev_nvme_reset_controller",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "NVMe controller name (or NVMe bdev controller name for multipath)"
        },
        {
          "name": "cntlid",
          "type": "number",
          "required": false,
          "description": "NVMe controller ID (used as NVMe controller name for multipath)"
        }
      ]
    },
    {
      "name": "bdev_nvme_enable_controller",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "NVMe controller name (or NVMe bdev controller name for multipath)"
        },
        {
          "name": "cntlid",
          "type": "number",
          "required": false,
          "description": "NVMe controller ID (used as NVMe controller name for multipath)"
        }
      ]
    },
    {
      "name": "bdev_nvme_disable_controller",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "NVMe controller name (or NVMe bdev controller name for multipath)"
        },
        {
          "name": "cntlid",
          "type": "number",
          "required": false,
          "description": "NVMe controller ID (used as NVMe controller name for multipath)"
        }
      ]
    },
    {
      "name": "bdev_nvme_start_discovery",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Prefix for NVMe controllers"
        },
        {
          "name": "trtype",
          "type": "string",
          "required": true,
          "description": "NVMe-oF target trtype: rdma or tcp"
        },
        {
          "name": "traddr",
          "type": "string",
          "required": true,
          "description": "NVMe-oF target address: ip"
        },
        {
          "name": "adrfam",
          "type": "string",
          "required": false,
          "description": "NVMe-oF target adrfam: ipv4, ipv6"
        },
        {
          "name": "trsvcid",
          "type": "string",
          "required": false,
          "description": "NVMe-oF target trsvcid: port number"
        },
        {
          "name": "hostnqn",
          "type": "string",
          "required": false,
          "description": "NVMe-oF target hostnqn"
        },
        {
          "name": "wait_for_attach",
          "type": "boolean",
          "required": false,
          "description": "Wait to complete until all discovered NVM subsystems are attached"
        },
        {
          "name": "attach_timeout_ms",
          "type": "number",
          "required": false,
          "description": "Time to wait until the discovery and all discovered NVM subsystems are attached"
        },
        {
          "name": "ctrlr_loss_timeout_sec",
          "type": "number",
          "required": false,
          "description": "Time to wait until ctrlr is reconnected before deleting ctrlr.  -1 means infinite reconnects. 0 means no reconnect."
        },
        {
          "name": "reconnect_delay_sec",
          "type": "number",
          "required": false,
          "description": "Time to delay a reconnect trial. 0 means no reconnect."
        },
        {
          "name": "fast_io_fail_timeout_sec",
          "type": "number",
          "required": false,
          "description": "Time to wait until ctrlr is reconnected before failing I/O to ctrlr. 0 means no such timeout."
        }
      ]
    },
    {
      "name": "bdev_nvme_stop_discovery",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of service to stop"
        }
      ]
    },
    {
      "name": "bdev_nvme_get_discovery_info",
      "params": []
    },
    {
      "name": "bdev_nvme_get_io_paths",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": false,
          "description": "Name of the NVMe bdev"
        }
      ]
    },
    {
      "name": "bdev_nvme_set_preferred_path",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the NVMe bdev"
        },
        {
          "name": "cntlid",
          "type": "number",
          "required": true,
          "description": "NVMe-oF controller ID"
        }
      ]
    },
    {
      "name": "bdev_nvme_set_multipath_policy",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the NVMe bdev"
        },
        {
          "name": "policy",
          "type": "string",
          "required": true,
          "description": "Multipath policy: active_active or active_passive"
        },
        {
          "name": "selector",
          "type": "string",
          "required": false,
          "description": "Multipath selector: round_robin or queue_depth, used in active-active mode. Default is round_robin"
        },
        {
          "name": "rr_min_io",
          "type": "number",
          "required": false,
          "description": "Number of I/Os routed to current io path before switching to another for round-robin selector. The min value is 1."
        }
      ]
    },
    {
      "name": "bdev_nvme_get_path_iostat",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the NVMe bdev"
        }
      ]
    },
    {
      "name": "bdev_nvme_cuse_register",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the NVMe controller"
        }
      ]
    },
    {
      "name": "bdev_nvme_cuse_unregister",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the NVMe controller"
        }
      ]
    },
    {
      "name": "bdev_nvme_set_keys",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the NVMe controller"
        },
        {
          "name": "dhchap_key",
          "type": "string",
          "required": false,
          "description": "DH-HMAC-CHAP key name (required if controller key is specified)"
        },
        {
          "name": "dhchap_ctrlr_key",
          "type": "string",
          "required": false,
          "description": "DH-HMAC-CHAP controller key name"
        }
      ]
    },
    {
      "name": "bdev_zone_block_create",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the Zone device"
        },
        {
          "name": "base_bdev",
          "type": "string",
          "required": true,
          "description": "Name of the Base bdev"
        },
        {
          "name": "zone_capacity",
          "type": "number",
          "required": true,
          "description": "Zone capacity in blocks"
        },
        {
          "name": "optimal_open_zones",
          "type": "number",
          "required": true,
          "description": "Number of zones required to reach optimal write speed"
        }
      ]
    },
    {
      "name": "bdev_zone_block_delete",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the Zone device"
        }
      ]
    },
    {
      "name": "bdev_nvme_apply_firmware",
      "params": [
        {
          "name": "filename",
          "type": "string",
          "required": true,
          "description": "filename of the firmware to download"
        },
        {
          "name": "bdev_name",
          "type": "string",
          "required": true,
          "description": "Name of the NVMe block device"
        }
      ]
    },
    {
      "name": "bdev_nvme_get_transport_statistics",
      "params": []
    },
    {
      "name": "bdev_nvme_get_controller_health_info",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the NVMe bdev controller"
        }
      ]
    },
    {
      "name": "bdev_rbd_register_cluster",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Registered Rados cluster object name"
        },
        {
          "name": "user_id",
          "type": "string",
          "required": false,
          "description": "Ceph ID (i.e. admin, not client.admin)"
        },
        {
          "name": "config_param",
          "type": "string map",
          "required": false,
          "description": "Explicit librados configuration"
        },
        {
          "name": "config_file",
          "type": "string",
          "required": false,
          "description": "File path of librados configuration file"
        },
        {
          "name": "key_file",
          "type": "string",
          "required": false,
          "description": "File path of librados key file"
        },
        {
          "name": "core_mask",
          "type": "string",
          "required": false,
          "description": "Core mask for librados IO context threads"
        }
      ]
    },
    {
      "name": "bdev_rbd_unregister_cluster",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Rados cluster object name"
        }
      ]
    },
    {
      "name": "bdev_rbd_get_clusters_info",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": false,
          "description": "Rados cluster object name"
        }
      ]
    },
    {
      "name": "bdev_rbd_create",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": false,
          "description": "Bdev name"
        },
        {
          "name": "user_id",
          "type": "string",
          "required": false,
          "description": "Ceph ID (i.e. admin, not client.admin)"
        },
        {
          "name": "pool_name",
          "type": "string",
          "required": true,
          "description": "Pool name"
        },
        {
          "name": "rbd_name",
          "type": "string",
          "required": true,
          "description": "Image name"
        },
        {
          "name": "block_size",
          "type": "number",
          "required": true,
          "description": "Block size"
        },
        {
          "name": "config",
          "type": "string map",
          "required": false,
          "description": "Explicit librados configuration"
        },
        {
          "name": "cluster_name",
          "type": "string",
          "required": false,
          "description": "Rados cluster object name created in this module."
        },
        {
          "name": "uuid",
          "type": "string",
          "required": false,
          "description": "UUID of new bdev"
        },
        {
          "name": "read_only",
          "type": "boolean",
          "required": false,
          "description": "set rbd bdev as read-only"
        }
      ]
    },
    {
      "name": "bdev_rbd_delete",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        }
      ]
    },
    {
      "name": "bdev_rbd_resize",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        },
        {
          "name": "new_size",
          "type": "number",
          "required": true,
          "description": "New bdev size for resize operation in MiB"
        }
      ]
    },
    {
      "name": "bdev_delay_create",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        },
        {
          "name": "base_bdev_name",
          "type": "string",
          "required": true,
          "description": "Base bdev name"
        },
        {
          "name": "avg_read_latency",
          "type": "number",
          "required": true,
          "description": "average read latency (us)"
        },
        {
          "name": "p99_read_latency",
          "type": "number",
          "required": true,
          "description": "p99 read latency (us)"
        },
        {
          "name": "avg_write_latency",
          "type": "number",
          "required": true,
          "description": "average write latency (us)"
        },
        {
          "name": "p99_write_latency",
          "type": "number",
          "required": true,
          "description": "p99 write latency (us)"
        },
        {
          "name": "uuid",
          "type": "string",
          "required": false,
          "description": "UUID of new bdev"
        }
      ]
    },
    {
      "name": "bdev_delay_delete",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        }
      ]
    },
    {
      "name": "bdev_delay_update_latency",
      "params": [
        {
          "name": "delay_bdev_name",
          "type": "string",
          "required": true,
          "description": "Name of the delay bdev"
        },
        {
          "name": "latency_type",
          "type": "string",
          "required": true,
          "description": "One of: avg_read, avg_write, p99_read, p99_write"
        },
        {
          "name": "latency_us",
          "type": "number",
          "required": true,
          "description": "The new latency value in microseconds"
        }
      ]
    },
    {
      "name": "bdev_error_create",
      "params": [
        {
          "name": "base_name",
          "type": "string",
          "required": true,
          "description": "Base bdev name"
        },
        {
          "name": "uuid",
          "type": "string",
          "required": false,
          "description": "UUID for this bdev"
        }
      ]
    },
    {
      "name": "bdev_error_delete",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Error bdev name"
        }
      ]
    },
    {
      "name": "bdev_error_inject_error",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the error injection bdev"
        },
        {
          "name": "io_type",
          "type": "string",
          "required": true,
          "description": "io type 'clear' 'read' 'write' 'unmap' 'flush' 'all'"
        },
        {
          "name": "error_type",
          "type": "string",
          "required": true,
          "description": "error type 'failure' 'pending' 'corrupt_data' 'nomem'"
        },
        {
          "name": "num",
          "type": "number",
          "required": false,
          "description": "the number of commands you want to fail.(default:1)"
        },
        {
          "name": "queue_depth",
          "type": "number",
          "required": false,
          "description": "the queue depth at which to trigger the error"
        },
        {
          "name": "corrupt_offset",
          "type": "number",
          "required": false,
          "description": "the offset in bytes to xor with corrupt_value"
        },
        {
          "name": "corrupt_value",
          "type": "number",
          "required": false,
          "description": "the value for xor (1-255, 0 is invalid)"
        }
      ]
    },
    {
      "name": "bdev_iscsi_set_options",
      "params": [
        {
          "name": "timeout_sec",
          "type": "number",
          "required": false,
          "description": "Timeout for command, in seconds, if 0, don't track timeout"
        }
      ]
    },
    {
      "name": "bdev_iscsi_create",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        },
        {
          "name": "initiator_iqn",
          "type": "string",
          "required": true,
          "description": "IQN name used during connection"
        },
        {
          "name": "url",
          "type": "string",
          "required": true,
          "description": "iSCSI resource URI"
        }
      ]
    },
    {
      "name": "bdev_iscsi_delete",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        }
      ]
    },
    {
      "name": "bdev_ftl_create",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        },
        {
          "name": "base_bdev",
          "type": "string",
          "required": true,
          "description": "Name of the base device"
        },
        {
          "name": "cache",
          "type": "string",
          "required": true,
          "description": "Name of the cache device"
        },
        {
          "name": "uuid",
          "type": "string",
          "required": false,
          "description": "UUID of restored bdev (not applicable when creating new instance)"
        },
        {
          "name": "core_mask",
          "type": "string",
          "required": false,
          "description": "CPU core(s) possible for placement of the ftl core thread, application main thread by default"
        },
        {
          "name": "overprovisioning",
          "type": "number",
          "required": false,
          "description": "Percentage of base device used for relocation, 20% by default"
        },
        {
          "name": "fast_shutdown",
          "type": "boolean",
          "required": false,
          "description": "When set FTL will minimize persisted data on target application shutdown and rely on shared memory during next load"
        },
        {
          "name": "l2p_dram_limit",
          "type": "number",
          "required": false,
          "description": "DRAM limit for most recent L2P addresses (default 2048 MiB)"
        }
      ]
    },
    {
      "name": "bdev_ftl_load",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        },
        {
          "name": "base_bdev",
          "type": "string",
          "required": true,
          "description": "Name of the base device"
        },
        {
          "name": "cache",
          "type": "string",
          "required": true,
          "description": "Name of the cache device"
        },
        {
          "name": "uuid",
          "type": "string",
          "required": true,
          "description": "UUID of restored bdev"
        },
        {
          "name": "core_mask",
          "type": "string",
          "required": false,
          "description": "CPU core(s) possible for placement of the ftl core thread, application main thread by default"
        },
        {
          "name": "overprovisioning",
          "type": "number",
          "required": false,
          "description": "Percentage of base device used for relocation, 20% by default"
        },
        {
          "name": "fast_shutdown",
          "type": "boolean",
          "required": false,
          "description": "When set FTL will minimize persisted data on target application shutdown and rely on shared memory during next load"
        },
        {
          "name": "l2p_dram_limit",
          "type": "number",
          "required": false,
          "description": "DRAM limit for most recent L2P addresses (default 2048 MiB)"
        }
      ]
    },
    {
      "name": "bdev_ftl_delete",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        },
        {
          "name": "fast_shutdown",
          "type": "boolean",
          "required": false,
          "description": "When set FTL will minimize persisted data during deletion and rely on shared memory during next load"
        }
      ]
    },
    {
      "name": "bdev_ftl_unload",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        },
        {
          "name": "fast_shutdown",
          "type": "boolean",
          "required": false,
          "description": "When set FTL will minimize persisted data during deletion and rely on shared memory during next load"
        }
      ]
    },
    {
      "name": "bdev_ftl_unmap",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        },
        {
          "name": "lba",
          "type": "number",
          "required": true,
          "description": "start lba, aligned to 1024"
        },
        {
          "name": "num_blocks",
          "type": "number",
          "required": true,
          "description": "number of blocks, aligned to 1024"
        }
      ]
    },
    {
      "name": "bdev_ftl_get_stats",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        }
      ]
    },
    {
      "name": "bdev_ftl_get_properties",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        }
      ]
    },
    {
      "name": "bdev_ftl_set_property",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        },
        {
          "name": "property",
          "type": "string",
          "required": true,
          "description": "Name of the property to modify"
        },
        {
          "name": "value",
          "type": "string",
          "required": true,
          "description": "New value of the property to be set"
        }
      ]
    },
    {
      "name": "bdev_passthru_create",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        },
        {
          "name": "base_bdev_name",
          "type": "string",
          "required": true,
          "description": "Base bdev name"
        },
        {
          "name": "uuid",
          "type": "string",
          "required": false,
          "description": "UUID of new bdev"
        }
      ]
    },
    {
      "name": "bdev_passthru_delete",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        }
      ]
    },
    {
      "name": "bdev_xnvme_create",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "name of xNVMe bdev to create"
        },
        {
          "name": "filename",
          "type": "string",
          "required": true,
          "description": "path to device or file (ex: /dev/nvme0n1)"
        },
        {
          "name": "io_mechanism",
          "type": "string",
          "required": true,
          "description": "IO mechanism to use (ex: libaio, io_uring, io_uring_cmd, etc.)"
        },
        {
          "name": "conserve_cpu",
          "type": "boolean",
          "required": false,
          "description": "Whether or not to conserve CPU when polling (default: false)"
        }
      ]
    },
    {
      "name": "bdev_xnvme_delete",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "name of xnvme bdev to delete"
        }
      ]
    },
    {
      "name": "bdev_virtio_attach_controller",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Virtio SCSI base bdev name or Virtio Blk bdev name"
        },
        {
          "name": "trtype",
          "type": "string",
          "required": true,
          "description": "Virtio target trtype: pci or user"
        },
        {
          "name": "traddr",
          "type": "string",
          "required": true,
          "description": "target address: BDF or UNIX socket file path"
        },
        {
          "name": "dev_type",
          "type": "string",
          "required": true,
          "description": "Virtio device type: blk or scsi"
        },
        {
          "name": "vq_count",
          "type": "number",
          "required": false,
          "description": "Number of queues this controller will utilize (default: 1)"
        },
        {
          "name": "vq_size",
          "type": "number",
          "required": false,
          "description": "Size of each queue. Must be power of 2. (default: 512)"
        }
      ]
    },
    {
      "name": "bdev_virtio_scsi_get_devices",
      "params": []
    },
    {
      "name": "bdev_virtio_detach_controller",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Virtio name"
        }
      ]
    },
    {
      "name": "bdev_virtio_blk_set_hotplug",
      "params": [
        {
          "name": "enable",
          "type": "boolean",
          "required": true,
          "description": "Enable or disable the virtio blk hotplug monitor"
        },
        {
          "name": "period-us",
          "type": "number",
          "required": false,
          "description": "The period time of the monitor"
        }
      ]
    },
    {
      "name": "iscsi_set_options",
      "params": [
        {
          "name": "auth_file",
          "type": "string",
          "required": false,
          "description": "Path to CHAP shared secret file (default: \"\")"
        },
        {
          "name": "node_base",
          "type": "string",
          "required": false,
          "description": "Prefix of the name of iSCSI target node (default: \"iqn.2016-06.io.spdk\")"
        },
        {
          "name": "nop_timeout",
          "type": "number",
          "required": false,
          "description": "Timeout in seconds to nop-in request to the initiator (default: 60)"
        },
        {
          "name": "nop_in_interval",
          "type": "number",
          "required": false,
          "description": "Time interval in secs between nop-in requests by the target (default: 30)"
        },
        {
          "name": "disable_chap",
          "type": "boolean",
          "required": false,
          "description": "CHAP for discovery session should be disabled (default: `false`)"
        },
        {
          "name": "require_chap",
          "type": "boolean",
          "required": false,
          "description": "CHAP for discovery session should be required (default: `false`)"
        },
        {
          "name": "mutual_chap",
          "type": "boolean",
          "required": false,
          "description": "CHAP for discovery session should be unidirectional (`false`) or bidirectional (`true`) (default: `false`)"
        },
        {
          "name": "chap_group",
          "type": "number",
          "required": false,
          "description": "CHAP group ID for discovery session (default: 0)"
        },
        {
          "name": "max_sessions",
          "type": "number",
          "required": false,
          "description": "Maximum number of sessions in the host (default: 128)"
        },
        {
          "name": "max_queue_depth",
          "type": "number",
          "required": false,
          "description": "Maximum number of outstanding I/Os per queue (default: 64)"
        },
        {
          "name": "max_connections_per_session",
          "type": "number",
          "required": false,
          "description": "Session specific parameter, MaxConnections (default: 2)"
        },
        {
          "name": "default_time2wait",
          "type": "number",
          "required": false,
          "description": "Session specific parameter, DefaultTime2Wait (default: 2)"
        },
        {
          "name": "default_time2retain",
          "type": "number",
          "required": false,
          "description": "Session specific parameter, DefaultTime2Retain (default: 20)"
        },
        {
          "name": "first_burst_length",
          "type": "number",
          "required": false,
          "description": "Session specific parameter, FirstBurstLength (default: 8192)"
        },
        {
          "name": "immediate_data",
          "type": "boolean",
          "required": false,
          "description": "Session specific parameter, ImmediateData (default: `true`)"
        },
        {
          "name": "error_recovery_level",
          "type": "number",
          "required": false,
          "description": "Session specific parameter, ErrorRecoveryLevel (default: 0)"
        },
        {
          "name": "allow_duplicated_isid",
          "type": "boolean",
          "required": false,
          "description": "Allow duplicated initiator session ID (default: `false`)"
        },
        {
          "name": "max_large_datain_per_connection",
          "type": "number",
          "required": false,
          "description": "Max number of outstanding split read I/Os per connection (default: 64)"
        },
        {
          "name": "max_r2t_per_connection",
          "type": "number",
          "required": false,
          "description": "Max number of outstanding R2Ts per connection (default: 4)"
        },
        {
          "name": "pdu_pool_size",
          "type": "number",
          "required": false,
          "description": "Number of PDUs in the pool (default: approximately 2 * max_sessions * (max_queue_depth + max_connections_per_session))"
        },
        {
          "name": "immediate_data_pool_size",
          "type": "number",
          "required": false,
          "description": "Number of immediate data buffers in the pool (default: 128 * max_sessions)"
        },
        {
          "name": "data_out_pool_size",
          "type": "number",
          "required": false,
          "description": "Number of data out buffers in the pool (default: 16 * max_sessions)"
        }
      ]
    },
    {
      "name": "iscsi_get_options",
      "params": []
    },
    {
      "name": "scsi_get_devices",
      "params": []
    },
    {
      "name": "iscsi_set_discovery_auth",
      "params": [
        {
          "name": "disable_chap",
          "type": "boolean",
          "required": false,
          "description": "CHAP for discovery session should be disabled (default: `false`)"
        },
        {
          "name": "require_chap",
          "type": "boolean",
          "required": false,
          "description": "CHAP for discovery session should be required (default: `false`)"
        },
        {
          "name": "mutual_chap",
          "type": "boolean",
          "required": false,
          "description": "CHAP for discovery session should be unidirectional (`false`) or bidirectional (`true`) (default: `false`)"
        },
        {
          "name": "chap_group",
          "type": "number",
          "required": false,
          "description": "CHAP group ID for discovery session (default: 0)"
        }
      ]
    },
    {
      "name": "iscsi_create_auth_group",
      "params": [
        {
          "name": "tag",
          "type": "number",
          "required": true,
          "description": "Authentication group tag (unique, integer > 0)"
        },
        {
          "name": "secrets",
          "type": "array",
          "required": false,
          "description": "Array of @ref rpc_iscsi_create_auth_group_secret objects"
        }
      ]
    },
    {
      "name": "iscsi_delete_auth_group",
      "params": [
        {
          "name": "tag",
          "type": "number",
          "required": true,
          "description": "Authentication group tag (unique, integer > 0)"
        }
      ]
    },
    {
      "name": "iscsi_get_auth_groups",
      "params": []
    },
    {
      "name": "iscsi_auth_group_add_secret",
      "params": [
        {
          "name": "tag",
          "type": "number",
          "required": true,
          "description": "Authentication group tag (unique, integer > 0)"
        },
        {
          "name": "user",
          "type": "string",
          "required": true,
          "description": "Unidirectional CHAP name"
        },
        {
          "name": "secret",
          "type": "string",
          "required": true,
          "description": "Unidirectional CHAP secret"
        },
        {
          "name": "muser",
          "type": "string",
          "required": false,
          "description": "Bidirectional CHAP name"
        },
        {
          "name": "msecret",
          "type": "string",
          "required": false,
          "description": "Bidirectional CHAP secret"
        }
      ]
    },
    {
      "name": "iscsi_auth_group_remove_secret",
      "params": [
        {
          "name": "tag",
          "type": "number",
          "required": true,
          "description": "Authentication group tag (unique, integer > 0)"
        },
        {
          "name": "user",
          "type": "string",
          "required": true,
          "description": "Unidirectional CHAP name"
        }
      ]
    },
    {
      "name": "iscsi_get_initiator_groups",
      "params": []
    },
    {
      "name": "iscsi_create_initiator_group",
      "params": [
        {
          "name": "tag",
          "type": "number",
          "required": true,
          "description": "Initiator group tag (unique, integer > 0)"
        },
        {
          "name": "initiators",
          "type": "array",
          "required": true,
          "description": "Not empty array of initiator hostnames or IP addresses"
        },
        {
          "name": "netmasks",
          "type": "array",
          "required": true,
          "description": "Not empty array of initiator netmasks"
        }
      ]
    },
    {
      "name": "iscsi_delete_initiator_group",
      "params": [
        {
          "name": "tag",
          "type": "number",
          "required": true,
          "description": "Initiator group tag (unique, integer > 0)"
        }
      ]
    },
    {
      "name": "iscsi_initiator_group_add_initiators",
      "params": [
        {
          "name": "tag",
          "type": "number",
          "required": true,
          "description": "Existing initiator group tag."
        },
        {
          "name": "initiators",
          "type": "array",
          "required": false,
          "description": "Array of initiator hostnames or IP addresses"
        },
        {
          "name": "netmasks",
          "type": "array",
          "required": false,
          "description": "Array of initiator netmasks"
        }
      ]
    },
    {
      "name": "iscsi_initiator_group_remove_initiators",
      "params": [
        {
          "name": "tag",
          "type": "number",
          "required": true,
          "description": "Existing initiator group tag."
        },
        {
          "name": "initiators",
          "type": "array",
          "required": false,
          "description": "Array of initiator hostnames or IP addresses"
        },
        {
          "name": "netmasks",
          "type": "array",
          "required": false,
          "description": "Array of initiator netmasks"
        }
      ]
    },
    {
      "name": "iscsi_get_target_nodes",
      "params": []
    },
    {
      "name": "iscsi_create_target_node",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Target node name (ASCII)"
        },
        {
          "name": "alias_name",
          "type": "string",
          "required": true,
          "description": "Target node alias name (ASCII)"
        },
        {
          "name": "pg_ig_maps",
          "type": "array",
          "required": true,
          "description": "Array of (Portal_Group_Tag:Initiator_Group_Tag) mappings"
        },
        {
          "name": "luns",
          "type": "array",
          "required": true,
          "description": "Array of Bdev names to LUN ID mappings"
        },
        {
          "name": "queue_depth",
          "type": "number",
          "required": true,
          "description": "Target queue depth"
        },
        {
          "name": "disable_chap",
          "type": "boolean",
          "required": false,
          "description": "CHAP authentication should be disabled for this target"
        },
        {
          "name": "require_chap",
          "type": "boolean",
          "required": false,
          "description": "CHAP authentication should be required for this target"
        },
        {
          "name": "mutual_chap",
          "type": "boolean",
          "required": false,
          "description": "CHAP authentication should be bidirectional (`true`) or unidirectional (`false`)"
        },
        {
          "name": "chap_group",
          "type": "number",
          "required": false,
          "description": "Authentication group ID for this target node"
        },
        {
          "name": "header_digest",
          "type": "boolean",
          "required": false,
          "description": "Header Digest should be required for this target node"
        },
        {
          "name": "data_digest",
          "type": "boolean",
          "required": false,
          "description": "Data Digest should be required for this target node"
        }
      ]
    },
    {
      "name": "iscsi_target_node_set_auth",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Target node name (ASCII)"
        },
        {
          "name": "disable_chap",
          "type": "boolean",
          "required": false,
          "description": "CHAP authentication should be disabled for this target"
        },
        {
          "name": "require_chap",
          "type": "boolean",
          "required": false,
          "description": "CHAP authentication should be required for this target"
        },
        {
          "name": "mutual_chap",
          "type": "boolean",
          "required": false,
          "description": "CHAP authentication should be bidirectional (`true`) or unidirectional (`false`)"
        },
        {
          "name": "chap_group",
          "type": "number",
          "required": false,
          "description": "Authentication group ID for this target node"
        }
      ]
    },
    {
      "name": "iscsi_target_node_add_pg_ig_maps",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Target node name (ASCII)"
        },
        {
          "name": "pg_ig_maps",
          "type": "array",
          "required": true,
          "description": "Not empty array of initiator to portal group mappings objects"
        }
      ]
    },
    {
      "name": "iscsi_target_node_remove_pg_ig_maps",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Target node name (ASCII)"
        },
        {
          "name": "pg_ig_maps",
          "type": "array",
          "required": true,
          "description": "Not empty array of Portal to Initiator group mappings objects"
        }
      ]
    },
    {
      "name": "iscsi_delete_target_node",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Target node name (ASCII)"
        }
      ]
    },
    {
      "name": "iscsi_get_portal_groups",
      "params": []
    },
    {
      "name": "iscsi_create_portal_group",
      "params": [
        {
          "name": "tag",
          "type": "number",
          "required": true,
          "description": "Portal group tag"
        },
        {
          "name": "portals",
          "type": "array",
          "required": true,
          "description": "Not empty array of portals"
        },
        {
          "name": "private",
          "type": "boolean",
          "required": false,
          "description": "When true, portals in this group are not returned by a discovery session. Used for login redirection. (default: `false`)"
        },
        {
          "name": "wait",
          "type": "boolean",
          "required": false,
          "description": "When true, do not listen on portals until it is started explicitly. (default: `false`)"
        }
      ]
    },
    {
      "name": "iscsi_start_portal_group",
      "params": [
        {
          "name": "tag",
          "type": "number",
          "required": true,
          "description": "Existing portal group tag"
        }
      ]
    },
    {
      "name": "iscsi_delete_portal_group",
      "params": [
        {
          "name": "tag",
          "type": "number",
          "required": true,
          "description": "Existing portal group tag"
        }
      ]
    },
    {
      "name": "iscsi_portal_group_set_auth",
      "params": [
        {
          "name": "disable_chap",
          "type": "boolean",
          "required": false,
          "description": "CHAP for discovery session should be disabled (default: `false`)"
        },
        {
          "name": "require_chap",
          "type": "boolean",
          "required": false,
          "description": "CHAP for discovery session should be required (default: `false`)"
        },
        {
          "name": "mutual_chap",
          "type": "boolean",
          "required": false,
          "description": "CHAP for discovery session should be unidirectional (`false`) or bidirectional (`true`) (default: `false`)"
        },
        {
          "name": "chap_group",
          "type": "number",
          "required": false,
          "description": "CHAP group ID for discovery session (default: 0)"
        }
      ]
    },
    {
      "name": "iscsi_get_connections",
      "params": []
    },
    {
      "name": "iscsi_get_stats",
      "params": []
    },
    {
      "name": "iscsi_target_node_add_lun",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Target node name (ASCII)"
        },
        {
          "name": "bdev_name",
          "type": "string",
          "required": true,
          "description": "bdev name to be added as a LUN"
        },
        {
          "name": "lun_id",
          "type": "number",
          "required": false,
          "description": "LUN ID (default: first free ID)"
        }
      ]
    },
    {
      "name": "iscsi_target_node_set_redirect",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Target node name (ASCII)"
        },
        {
          "name": "pg_tag",
          "type": "number",
          "required": true,
          "description": "Existing portal group tag"
        },
        {
          "name": "redirect_host",
          "type": "string",
          "required": false,
          "description": "Numeric IP address to which the target node is redirected"
        },
        {
          "name": "redirect_port",
          "type": "string",
          "required": false,
          "description": "Numeric TCP port to which the target node is redirected"
        }
      ]
    },
    {
      "name": "iscsi_target_node_request_logout",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Target node name (ASCII)"
        },
        {
          "name": "pg_tag",
          "type": "number",
          "required": false,
          "description": "Existing portal group tag"
        }
      ]
    },
    {
      "name": "iscsi_enable_histogram",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Iscsi target node name"
        },
        {
          "name": "enable",
          "type": "boolean",
          "required": true,
          "description": "Enable or disable histogram on specified target node"
        }
      ]
    },
    {
      "name": "iscsi_get_histogram",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Iscsi target node name"
        }
      ]
    },
    {
      "name": "nvmf_create_transport",
      "params": [
        {
          "name": "trtype",
          "type": "string",
          "required": true,
          "description": "Transport type (ex. RDMA)"
        },
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        },
        {
          "name": "max_queue_depth",
          "type": "number",
          "required": false,
          "description": "Max number of outstanding I/O per queue"
        },
        {
          "name": "max_io_qpairs_per_ctrlr",
          "type": "number",
          "required": false,
          "description": "Max number of IO qpairs per controller"
        },
        {
          "name": "in_capsule_data_size",
          "type": "number",
          "required": false,
          "description": "Max number of in-capsule data size"
        },
        {
          "name": "max_io_size",
          "type": "number",
          "required": false,
          "description": "Max I/O size (bytes)"
        },
        {
          "name": "io_unit_size",
          "type": "number",
          "required": false,
          "description": "I/O unit size (bytes)"
        },
        {
          "name": "max_aq_depth",
          "type": "number",
          "required": false,
          "description": "Max number of admin cmds per AQ"
        },
        {
          "name": "num_shared_buffers",
          "type": "number",
          "required": false,
          "description": "The number of pooled data buffers available to the transport"
        },
        {
          "name": "buf_cache_size",
          "type": "number",
          "required": false,
          "description": "The number of shared buffers to reserve for each poll group"
        },
        {
          "name": "num_cqe",
          "type": "number",
          "required": false,
          "description": "The number of CQ entries. Only used when no_srq=true (RDMA only)"
        },
        {
          "name": "max_srq_depth",
          "type": "number",
          "required": false,
          "description": "The number of elements in a per-thread shared receive queue (RDMA only)"
        },
        {
          "name": "no_srq",
          "type": "boolean",
          "required": false,
          "description": "Disable shared receive queue even for devices that support it. (RDMA only)"
        },
        {
          "name": "c2h_success",
          "type": "boolean",
          "required": false,
          "description": "Disable C2H success optimization (TCP only)"
        },
        {
          "name": "dif_insert_or_strip",
          "type": "boolean",
          "required": false,
          "description": "Enable DIF insert for write I/O and DIF strip for read I/O DIF"
        },
        {
          "name": "sock_priority",
          "type": "number",
          "required": false,
          "description": "The socket priority of the connection owned by this transport (TCP only)"
        },
        {
          "name": "acceptor_backlog",
          "type": "number",
          "required": false,
          "description": "The number of pending connections allowed in backlog before failing new connection attempts (RDMA only)"
        },
        {
          "name": "abort_timeout_sec",
          "type": "number",
          "required": false,
          "description": "Abort execution timeout value, in seconds"
        },
        {
          "name": "no_wr_batching",
          "type": "boolean",
          "required": false,
          "description": "Disable work requests batching (RDMA only)"
        },
        {
          "name": "control_msg_num",
          "type": "number",
          "required": false,
          "description": "The number of control messages per poll group (TCP only)"
        },
        {
          "name": "disable_mappable_bar0",
          "type": "boolean",
          "required": false,
          "description": "disable client mmap() of BAR0 (VFIO-USER only)"
        },
        {
          "name": "disable_adaptive_irq",
          "type": "boolean",
          "required": false,
          "description": "Disable adaptive interrupt feature (VFIO-USER only)"
        },
        {
          "name": "disable_shadow_doorbells",
          "type": "boolean",
          "required": false,
          "description": "disable shadow doorbell support (VFIO-USER only)"
        },
        {
          "name": "zcopy",
          "type": "boolean",
          "required": false,
          "description": "Use zero-copy operations if the underlying bdev supports them"
        },
        {
          "name": "ack_timeout",
          "type": "number",
          "required": false,
          "description": "ACK timeout in milliseconds"
        },
        {
          "name": "data_wr_pool_size",
          "type": "number",
          "required": false,
          "description": "RDMA data WR pool size (RDMA only)"
        },
        {
          "name": "disable_command_passthru",
          "type": "boolean",
          "required": false,
          "description": "Disallow command passthru."
        },
        {
          "name": "kas",
          "type": "number",
          "required": false,
          "description": "The granularity of the KATO (Keep Alive Timeout) in 100 millisecond units"
        },
        {
          "name": "min_kato",
          "type": "number",
          "required": false,
          "description": "The minimum Keep Alive Timeout value in milliseconds"
        }
      ]
    },
    {
      "name": "nvmf_get_subsystems",
      "params": [
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        }
      ]
    },
    {
      "name": "nvmf_create_subsystem",
      "params": [
        {
          "name": "nqn",
          "type": "string",
          "required": true,
          "description": "Subsystem NQN."
        },
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        },
        {
          "name": "serial_number",
          "type": "string",
          "required": false,
          "description": "Serial number of virtual controller."
        },
        {
          "name": "model_number",
          "type": "string",
          "required": false,
          "description": "Model number of virtual controller."
        },
        {
          "name": "max_namespaces",
          "type": "number",
          "required": false,
          "description": "Maximum number of namespaces that can be attached to the subsystem. Default: 32 (also used if user specifies 0)"
        },
        {
          "name": "allow_any_host",
          "type": "boolean",
          "required": false,
          "description": "Allow any host (`true`) or enforce allowed host list (`false`). Default: `false`"
        },
        {
          "name": "ana_reporting",
          "type": "boolean",
          "required": false,
          "description": "Enable ANA reporting feature. Default: `false`"
        },
        {
          "name": "min_cntlid",
          "type": "number",
          "required": false,
          "description": "Minimum controller ID. Default: 1"
        },
        {
          "name": "max_cntlid",
          "type": "number",
          "required": false,
          "description": "Maximum controller ID. Default: 0xffef"
        },
        {
          "name": "max_discard_size_kib",
          "type": "number",
          "required": false,
          "description": "Maximum discard size (Kib). Default: 0"
        },
        {
          "name": "max_write_zeroes_size_kib",
          "type": "number",
          "required": false,
          "description": "Maximum write_zeroes size (Kib). Default: 0"
        },
        {
          "name": "passthrough",
          "type": "boolean",
          "required": false,
          "description": "Use NVMe passthrough for I/O commands and namespace-directed admin commands. Default: `false`"
        },
        {
          "name": "enable_nssr",
          "type": "boolean",
          "required": false,
          "description": "Enable NSSR (NVMe subsystem reset). Default: `false`"
        }
      ]
    },
    {
      "name": "nvmf_delete_subsystem",
      "params": [
        {
          "name": "nqn",
          "type": "string",
          "required": true,
          "description": "Subsystem NQN to delete."
        },
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        }
      ]
    },
    {
      "name": "nvmf_subsystem_add_listener",
      "params": [
        {
          "name": "nqn",
          "type": "string",
          "required": true,
          "description": "Subsystem NQN"
        },
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        },
        {
          "name": "listen_address",
          "type": "object",
          "required": true,
          "class": "nvmf_listen_address",
          "description": "@ref rpc_nvmf_listen_address object"
        },
        {
          "name": "secure_channel",
          "type": "boolean",
          "required": false,
          "description": "Whether all connections immediately attempt to establish a secure channel"
        },
        {
          "name": "sock_impl",
          "type": "string",
          "required": false,
          "description": "The socket implementation to use for the listener"
        }
      ]
    },
    {
      "name": "nvmf_subsystem_remove_listener",
      "params": [
        {
          "name": "nqn",
          "type": "string",
          "required": true,
          "description": "Subsystem NQN"
        },
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        },
        {
          "name": "listen_address",
          "type": "object",
          "required": true,
          "class": "nvmf_listen_address",
          "description": "@ref rpc_nvmf_listen_address object"
        }
      ]
    },
    {
      "name": "nvmf_subsystem_listener_set_ana_state",
      "params": [
        {
          "name": "nqn",
          "type": "string",
          "required": true,
          "description": "Subsystem NQN"
        },
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        },
        {
          "name": "listen_address",
          "type": "object",
          "required": true,
          "class": "nvmf_listen_address",
          "description": "@ref rpc_nvmf_listen_address object"
        },
        {
          "name": "ana_state",
          "type": "string",
          "required": true,
          "description": "ANA state to set (\"optimized\", \"non_optimized\", or \"inaccessible\")"
        },
        {
          "name": "anagrpid",
          "type": "number",
          "required": false,
          "description": "ANA group ID"
        }
      ]
    },
    {
      "name": "nvmf_subsystem_add_ns",
      "params": [
        {
          "name": "nqn",
          "type": "string",
          "required": true,
          "description": "Subsystem NQN"
        },
        {
          "name": "namespace",
          "type": "object",
          "required": true,
          "description": "@ref rpc_nvmf_namespace object"
        },
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        },
        {
          "name": "no_auto_visible",
          "type": "boolean",
          "required": false,
          "description": "Namespace is not automatically visible to controllers (default: false)"
        }
      ]
    },
    {
      "name": "nvmf_subsystem_remove_ns",
      "params": [
        {
          "name": "nqn",
          "type": "string",
          "required": true,
          "description": "Subsystem NQN"
        },
        {
          "name": "nsid",
          "type": "number",
          "required": true,
          "description": "Namespace ID"
        },
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        }
      ]
    },
    {
      "name": "nvmf_subsystem_set_ns_ana_group",
      "params": [
        {
          "name": "nqn",
          "type": "string",
          "required": true,
          "description": "Subsystem NQN"
        },
        {
          "name": "nsid",
          "type": "number",
          "required": true,
          "description": "Namespace ID"
        },
        {
          "name": "anagrpid",
          "type": "number",
          "required": true,
          "description": "ANA group ID"
        },
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        }
      ]
    },
    {
      "name": "nvmf_subsystem_add_host",
      "params": [
        {
          "name": "nqn",
          "type": "string",
          "required": true,
          "description": "Subsystem NQN"
        },
        {
          "name": "host",
          "type": "string",
          "required": true,
          "description": "Host NQN to add to the list of allowed host NQNs"
        },
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        },
        {
          "name": "psk",
          "type": "string",
          "required": false,
          "description": "Path to a file containing PSK for TLS connection"
        },
        {
          "name": "dhchap_key",
          "type": "string",
          "required": false,
          "description": "DH-HMAC-CHAP key name (required if controller key is specified)"
        },
        {
          "name": "dhchap_ctrlr_key",
          "type": "string",
          "required": false,
          "description": "DH-HMAC-CHAP controller key name."
        }
      ]
    },
    {
      "name": "nvmf_subsystem_remove_host",
      "params": [
        {
          "name": "nqn",
          "type": "string",
          "required": true,
          "description": "Subsystem NQN"
        },
        {
          "name": "host",
          "type": "string",
          "required": true,
          "description": "Host NQN to remove from the list of allowed host NQNs"
        },
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        }
      ]
    },
    {
      "name": "nvmf_subsystem_allow_any_host",
      "params": [
        {
          "name": "nqn",
          "type": "string",
          "required": true,
          "description": "Subsystem NQN"
        },
        {
          "name": "allow_any_host",
          "type": "boolean",
          "required": true,
          "description": "Allow any host (`true`) or enforce allowed host list (`false`)."
        },
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        }
      ]
    },
    {
      "name": "nvmf_subsystem_set_keys",
      "params": [
        {
          "name": "nqn",
          "type": "string",
          "required": true,
          "description": "Subsystem NQN"
        },
        {
          "name": "host",
          "type": "string",
          "required": true,
          "description": "Host NQN"
        },
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "NVMe-oF target name"
        },
        {
          "name": "dhchap_key",
          "type": "string",
          "required": false,
          "description": "DH-HMAC-CHAP key name (required if controller key is specified)"
        },
        {
          "name": "dhchap_ctrlr_key",
          "type": "string",
          "required": false,
          "description": "DH-HMAC-CHAP controller key name"
        }
      ]
    },
    {
      "name": "nvmf_subsystem_get_controllers",
      "params": [
        {
          "name": "nqn",
          "type": "string",
          "required": true,
          "description": "Subsystem NQN"
        },
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        }
      ]
    },
    {
      "name": "nvmf_subsystem_get_qpairs",
      "params": [
        {
          "name": "nqn",
          "type": "string",
          "required": true,
          "description": "Subsystem NQN"
        },
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        }
      ]
    },
    {
      "name": "nvmf_subsystem_get_listeners",
      "params": [
        {
          "name": "nqn",
          "type": "string",
          "required": true,
          "description": "Subsystem NQN"
        },
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        }
      ]
    },
    {
      "name": "nvmf_ns_add_host",
      "params": [
        {
          "name": "nqn",
          "type": "string",
          "required": true,
          "description": "Subsystem NQN"
        },
        {
          "name": "nsid",
          "type": "number",
          "required": true,
          "description": "Namespace ID"
        },
        {
          "name": "host",
          "type": "string",
          "required": true,
          "description": "Host NQN"
        }
      ]
    },
    {
      "name": "nvmf_ns_remove_host",
      "params": [
        {
          "name": "nqn",
          "type": "string",
          "required": true,
          "description": "Subsystem NQN"
        },
        {
          "name": "nsid",
          "type": "number",
          "required": true,
          "description": "Namespace ID"
        },
        {
          "name": "host",
          "type": "string",
          "required": true,
          "description": "Host NQN"
        }
      ]
    },
    {
      "name": "nvmf_set_max_subsystems",
      "params": [
        {
          "name": "max_subsystems",
          "type": "number",
          "required": true,
          "description": "Maximum number of NVMe-oF subsystems"
        }
      ]
    },
    {
      "name": "nvmf_discovery_add_referral",
      "params": [
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        },
        {
          "name": "address",
          "type": "object",
          "required": true,
          "class": "nvmf_listen_address",
          "description": "@ref rpc_nvmf_listen_address object"
        },
        {
          "name": "secure_channel",
          "type": "boolean",
          "required": false,
          "description": "The connection to that discovery subsystem requires a secure channel"
        }
      ]
    },
    {
      "name": "nvmf_discovery_remove_referral",
      "params": [
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        },
        {
          "name": "address",
          "type": "object",
          "required": true,
          "class": "nvmf_listen_address",
          "description": "@ref rpc_nvmf_listen_address object"
        }
      ]
    },
    {
      "name": "nvmf_discovery_get_referrals",
      "params": [
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        }
      ]
    },
    {
      "name": "nvmf_set_config",
      "params": [
        {
          "name": "acceptor_poll_rate",
          "type": "number",
          "required": false,
          "description": "Polling interval of the acceptor for incoming connections (microseconds)"
        },
        {
          "name": "admin_cmd_passthru",
          "type": "object",
          "required": false,
          "description": "Admin command passthru configuration"
        },
        {
          "name": "poll_groups_mask",
          "type": "string",
          "required": false,
          "description": "Set cpumask for NVMf poll groups"
        },
        {
          "name": "discovery_filter",
          "type": "string",
          "required": false,
          "description": "Set discovery filter, possible values are: `match_any` (default) or comma separated values: `transport`, `address`, `svcid`"
        },
        {
          "name": "dhchap_digests",
          "type": "list",
          "required": false,
          "description": "List of allowed DH-HMAC-CHAP digests."
        },
        {
          "name": "dhchap_dhgroups",
          "type": "list",
          "required": false,
          "description": "List of allowed DH-HMAC-CHAP DH groups."
        }
      ]
    },
    {
      "name": "nvmf_get_transports",
      "params": [
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        },
        {
          "name": "trtype",
          "type": "string",
          "required": false,
          "description": "Transport type."
        }
      ]
    },
    {
      "name": "nvmf_get_stats",
      "params": [
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        }
      ]
    },
    {
      "name": "nvmf_set_crdt",
      "params": [
        {
          "name": "crdt1",
          "type": "number",
          "required": false,
          "description": "Command Retry Delay Time 1"
        },
        {
          "name": "crdt2",
          "type": "number",
          "required": false,
          "description": "Command Retry Delay Time 2"
        },
        {
          "name": "crdt3",
          "type": "number",
          "required": false,
          "description": "Command Retry Delay Time 3"
        }
      ]
    },
    {
      "name": "vfu_tgt_set_base_path",
      "params": [
        {
          "name": "path",
          "type": "string",
          "required": true,
          "description": "Base path"
        }
      ]
    },
    {
      "name": "vfu_virtio_delete_endpoint",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Endpoint name"
        }
      ]
    },
    {
      "name": "vfu_virtio_create_blk_endpoint",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Endpoint name"
        },
        {
          "name": "bdev_name",
          "type": "string",
          "required": true,
          "description": "Block device name"
        },
        {
          "name": "cpumask",
          "type": "string",
          "required": false,
          "description": "CPU masks"
        },
        {
          "name": "num_queues",
          "type": "number",
          "required": false,
          "description": "Number of queues"
        },
        {
          "name": "qsize",
          "type": "number",
          "required": false,
          "description": "Queue size"
        },
        {
          "name": "packed_ring",
          "type": "boolean",
          "required": false,
          "description": "Enable packed ring"
        }
      ]
    },
    {
      "name": "vfu_virtio_scsi_add_target",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Endpoint name"
        },
        {
          "name": "scsi_target_num",
          "type": "number",
          "required": true,
          "description": "SCSI target number"
        },
        {
          "name": "bdev_name",
          "type": "string",
          "required": true,
          "description": "Block device name"
        }
      ]
    },
    {
      "name": "vfu_virtio_scsi_remove_target",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Endpoint name"
        },
        {
          "name": "scsi_target_num",
          "type": "number",
          "required": true,
          "description": "SCSI target number"
        }
      ]
    },
    {
      "name": "vfu_virtio_create_scsi_endpoint",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Endpoint name"
        },
        {
          "name": "cpumask",
          "type": "string",
          "required": false,
          "description": "CPU masks"
        },
        {
          "name": "num_io_queues",
          "type": "number",
          "required": false,
          "description": "Number of IO queues"
        },
        {
          "name": "qsize",
          "type": "number",
          "required": false,
          "description": "Queue size"
        },
        {
          "name": "packed_ring",
          "type": "boolean",
          "required": false,
          "description": "Enable packed ring"
        }
      ]
    },
    {
      "name": "vfu_virtio_create_fs_endpoint",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Endpoint name"
        },
        {
          "name": "fsdev_name",
          "type": "string",
          "required": true,
          "description": "Name of an underlying fsdev"
        },
        {
          "name": "tag",
          "type": "string",
          "required": true,
          "description": "Virtio FS tag according to the virtio specification"
        },
        {
          "name": "cpumask",
          "type": "string",
          "required": false,
          "description": "CPU masks"
        },
        {
          "name": "num_queues",
          "type": "number",
          "required": false,
          "description": "Number of IO queues"
        },
        {
          "name": "qsize",
          "type": "number",
          "required": false,
          "description": "Queue size"
        },
        {
          "name": "packed_ring",
          "type": "boolean",
          "required": false,
          "description": "Enable packed ring"
        }
      ]
    },
    {
      "name": "vhost_controller_set_coalescing",
      "params": [
        {
          "name": "ctrlr",
          "type": "string",
          "required": true,
          "description": "Controller name"
        },
        {
          "name": "delay_base_us",
          "type": "number",
          "required": true,
          "description": "Base (minimum) coalescing time in microseconds"
        },
        {
          "name": "iops_threshold",
          "type": "number",
          "required": true,
          "description": "Coalescing activation level greater than 0 in IO per second"
        }
      ]
    },
    {
      "name": "vhost_create_scsi_controller",
      "params": [
        {
          "name": "ctrlr",
          "type": "string",
          "required": true,
          "description": "Controller name"
        },
        {
          "name": "cpumask",
          "type": "string",
          "required": false,
          "description": "@ref cpu_mask for this controller"
        },
        {
          "name": "delay",
          "type": "boolean",
          "required": false,
          "description": "If true, delay the controller startup."
        }
      ]
    },
    {
      "name": "vhost_start_scsi_controller",
      "params": [
        {
          "name": "ctrlr",
          "type": "string",
          "required": true,
          "description": "Controller name"
        }
      ]
    },
    {
      "name": "vhost_scsi_controller_add_target",
      "params": [
        {
          "name": "ctrlr",
          "type": "string",
          "required": true,
          "description": "Controller name"
        },
        {
          "name": "scsi_target_num",
          "type": "number",
          "required": true,
          "description": "SCSI target ID between 0 and 7 or -1 to use first free ID."
        },
        {
          "name": "bdev_name",
          "type": "string",
          "required": true,
          "description": "Name of bdev to expose as a LUN 0"
        }
      ]
    },
    {
      "name": "vhost_scsi_controller_remove_target",
      "params": [
        {
          "name": "ctrlr",
          "type": "string",
          "required": true,
          "description": "Controller name"
        },
        {
          "name": "scsi_target_num",
          "type": "number",
          "required": true,
          "description": "SCSI target ID between 0 and 7"
        }
      ]
    },
    {
      "name": "virtio_blk_create_transport",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Transport name"
        }
      ]
    },
    {
      "name": "virtio_blk_get_transports",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": false,
          "description": "Transport name."
        }
      ]
    },
    {
      "name": "vhost_create_blk_controller",
      "params": [
        {
          "name": "ctrlr",
          "type": "string",
          "required": true,
          "description": "Controller name"
        },
        {
          "name": "bdev_name",
          "type": "string",
          "required": true,
          "description": "Name of bdev to expose block device"
        },
        {
          "name": "readonly",
          "type": "boolean",
          "required": false,
          "description": "If true, this target will be read only (default: false)"
        },
        {
          "name": "cpumask",
          "type": "string",
          "required": false,
          "description": "@ref cpu_mask for this controller"
        },
        {
          "name": "transport",
          "type": "string",
          "required": false,
          "description": "virtio blk transport name (default: vhost_user_blk)"
        }
      ]
    },
    {
      "name": "vhost_get_controllers",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": false,
          "description": "Vhost controller name"
        }
      ]
    },
    {
      "name": "vhost_delete_controller",
      "params": [
        {
          "name": "ctrlr",
          "type": "string",
          "required": true,
          "description": "Controller name"
        }
      ]
    },
    {
      "name": "bdev_lvol_create_lvstore",
      "params": [
        {
          "name": "bdev_name",
          "type": "string",
          "required": true,
          "description": "Bdev on which to construct logical volume store"
        },
        {
          "name": "lvs_name",
          "type": "string",
          "required": true,
          "description": "Name of the logical volume store to create"
        },
        {
          "name": "cluster_sz",
          "type": "number",
          "required": false,
          "description": "Cluster size of the logical volume store in bytes (Default: 4MiB)"
        },
        {
          "name": "clear_method",
          "type": "string",
          "required": false,
          "description": "Change clear method for data region. Available: none, unmap (default), write_zeroes"
        },
        {
          "name": "num_md_pages_per_cluster_ratio",
          "type": "number",
          "required": false,
          "description": "Reserved metadata pages per cluster (Default: 100)"
        },
        {
          "name": "md_page_size",
          "type": "number",
          "required": false,
          "description": "Metadata page size of the logical volume store in bytes (Default: max(4KB, bdev phys blocklen)"
        }
      ]
    },
    {
      "name": "bdev_lvol_delete_lvstore",
      "params": [
        {
          "name": "uuid",
          "type": "string",
          "required": false,
          "description": "UUID of the logical volume store to destroy"
        },
        {
          "name": "lvs_name",
          "type": "string",
          "required": false,
          "description": "Name of the logical volume store to destroy"
        }
      ]
    },
    {
      "name": "bdev_lvol_get_lvstores",
      "params": [
        {
          "name": "uuid",
          "type": "string",
          "required": false,
          "description": "UUID of the logical volume store to retrieve information about"
        },
        {
          "name": "lvs_name",
          "type": "string",
          "required": false,
          "description": "Name of the logical volume store to retrieve information about"
        }
      ]
    },
    {
      "name": "bdev_lvol_rename_lvstore",
      "params": [
        {
          "name": "old_name",
          "type": "string",
          "required": true,
          "description": "Existing logical volume store name"
        },
        {
          "name": "new_name",
          "type": "string",
          "required": true,
          "description": "New logical volume store name"
        }
      ]
    },
    {
      "name": "bdev_lvol_grow_lvstore",
      "params": [
        {
          "name": "uuid",
          "type": "string",
          "required": false,
          "description": "UUID of the logical volume store to grow"
        },
        {
          "name": "lvs_name",
          "type": "string",
          "required": false,
          "description": "Name of the logical volume store to grow"
        }
      ]
    },
    {
      "name": "bdev_lvol_create",
      "params": [
        {
          "name": "lvol_name",
          "type": "string",
          "required": true,
          "description": "Name of logical volume to create"
        },
        {
          "name": "size_in_mib",
          "type": "number",
          "required": true,
          "description": "Desired size of logical volume in MiB"
        },
        {
          "name": "thin_provision",
          "type": "boolean",
          "required": false,
          "description": "True to enable thin provisioning"
        },
        {
          "name": "uuid",
          "type": "string",
          "required": false,
          "description": "UUID of logical volume store to create logical volume on"
        },
        {
          "name": "lvs_name",
          "type": "string",
          "required": false,
          "description": "Name of logical volume store to create logical volume on"
        },
        {
          "name": "clear_method",
          "type": "string",
          "required": false,
          "description": "Change default data clusters clear method. Available: none, unmap, write_zeroes"
        }
      ]
    },
    {
      "name": "bdev_lvol_snapshot",
      "params": [
        {
          "name": "lvol_name",
          "type": "string",
          "required": true,
          "description": "UUID or alias of the logical volume to create a snapshot from"
        },
        {
          "name": "snapshot_name",
          "type": "string",
          "required": true,
          "description": "Name for the newly created snapshot"
        }
      ]
    },
    {
      "name": "bdev_lvol_clone",
      "params": [
        {
          "name": "snapshot_name",
          "type": "string",
          "required": true,
          "description": "UUID or alias of the snapshot to clone"
        },
        {
          "name": "clone_name",
          "type": "string",
          "required": true,
          "description": "Name for the logical volume to create"
        }
      ]
    },
    {
      "name": "bdev_lvol_clone_bdev",
      "params": [
        {
          "name": "bdev",
          "type": "string",
          "required": true,
          "description": "Name or UUID for bdev that acts as the external snapshot"
        },
        {
          "name": "lvs_name",
          "type": "string",
          "required": true,
          "description": "logical volume store name"
        },
        {
          "name": "clone_name",
          "type": "string",
          "required": true,
          "description": "Name for the logical volume to create"
        }
      ]
    },
    {
      "name": "bdev_lvol_rename",
      "params": [
        {
          "name": "old_name",
          "type": "string",
          "required": true,
          "description": "UUID or alias of the existing logical volume"
        },
        {
          "name": "new_name",
          "type": "string",
          "required": true,
          "description": "New logical volume name"
        }
      ]
    },
    {
      "name": "bdev_lvol_resize",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "UUID or alias of the logical volume to resize"
        },
        {
          "name": "size_in_mib",
          "type": "number",
          "required": true,
          "description": "Desired size of the logical volume in MiB"
        }
      ]
    },
    {
      "name": "bdev_lvol_set_read_only",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "UUID or alias of the logical volume to set as read only"
        }
      ]
    },
    {
      "name": "bdev_lvol_delete",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "UUID or alias of the logical volume to destroy"
        }
      ]
    },
    {
      "name": "bdev_lvol_inflate",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "UUID or alias of the logical volume to inflate"
        }
      ]
    },
    {
      "name": "bdev_lvol_decouple_parent",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "UUID or alias of the logical volume to decouple the parent of it"
        }
      ]
    },
    {
      "name": "bdev_lvol_get_lvols",
      "params": [
        {
          "name": "lvs_uuid",
          "type": "string",
          "required": false,
          "description": "Only show volumes in the logical volume store with this UUID"
        },
        {
          "name": "lvs_name",
          "type": "string",
          "required": false,
          "description": "Only show volumes in the logical volume store with this name"
        }
      ]
    },
    {
      "name": "bdev_lvol_set_parent",
      "params": [
        {
          "name": "lvol_name",
          "type": "string",
          "required": true,
          "description": "UUID or alias of the lvol to set parent of"
        },
        {
          "name": "parent_name",
          "type": "string",
          "required": true,
          "description": "UUID or alias of the snapshot to become parent of lvol"
        }
      ]
    },
    {
      "name": "bdev_lvol_set_parent_bdev",
      "params": [
        {
          "name": "lvol_name",
          "type": "string",
          "required": true,
          "description": "UUID or alias of the lvol to set external parent of"
        },
        {
          "name": "parent_name",
          "type": "string",
          "required": true,
          "description": "UUID or name of the external snapshot to become parent of lvol"
        }
      ]
    },
    {
      "name": "bdev_lvol_start_shallow_copy",
      "params": [
        {
          "name": "src_lvol_name",
          "type": "string",
          "required": true,
          "description": "UUID or alias of lvol to create a copy from"
        },
        {
          "name": "dst_bdev_name",
          "type": "string",
          "required": true,
          "description": "Name of the bdev that acts as destination for the copy"
        }
      ]
    },
    {
      "name": "bdev_lvol_check_shallow_copy",
      "params": [
        {
          "name": "operation_id",
          "type": "number",
          "required": true,
          "description": "operation identifier"
        }
      ]
    },
    {
      "name": "bdev_raid_set_options",
      "params": [
        {
          "name": "process_window_size_kb",
          "type": "number",
          "required": false,
          "description": "Background process (e.g. rebuild) window size in KiB"
        },
        {
          "name": "process_max_bandwidth_mb_sec",
          "type": "number",
          "required": false,
          "description": "Background process (e.g. rebuild) maximum bandwidth in MiB/Sec"
        }
      ]
    },
    {
      "name": "bdev_raid_get_bdevs",
      "params": [
        {
          "name": "category",
          "type": "string",
          "required": true,
          "description": "all or online or configuring or offline"
        }
      ]
    },
    {
      "name": "bdev_raid_create",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "RAID bdev name"
        },
        {
          "name": "strip_size_kb",
          "type": "number",
          "required": false,
          "description": "Strip size in KB"
        },
        {
          "name": "raid_level",
          "type": "string",
          "required": true,
          "description": "RAID level"
        },
        {
          "name": "base_bdevs",
          "type": "string",
          "required": true,
          "description": "Base bdevs name, whitespace separated list in quotes"
        },
        {
          "name": "uuid",
          "type": "string",
          "required": false,
          "description": "UUID for this RAID bdev"
        },
        {
          "name": "superblock",
          "type": "boolean",
          "required": false,
          "description": "If set, information about raid bdev will be stored in superblock on each base bdev (default: `false`)"
        }
      ]
    },
    {
      "name": "bdev_raid_delete",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "RAID bdev name"
        }
      ]
    },
    {
      "name": "bdev_raid_add_base_bdev",
      "params": [
        {
          "name": "raid_bdev",
          "type": "string",
          "required": true,
          "description": "Raid bdev name"
        },
        {
          "name": "base_bdev",
          "type": "string",
          "required": true,
          "description": "Base bdev name"
        }
      ]
    },
    {
      "name": "bdev_raid_remove_base_bdev",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Base bdev name in RAID"
        }
      ]
    },
    {
      "name": "bdev_split_create",
      "params": [
        {
          "name": "base_bdev",
          "type": "string",
          "required": true,
          "description": "base bdev name"
        },
        {
          "name": "split_count",
          "type": "number",
          "required": true,
          "description": "number of splits"
        },
        {
          "name": "split_size_mb",
          "type": "number",
          "required": false,
          "description": "size in MB to restrict the size"
        }
      ]
    },
    {
      "name": "bdev_split_delete",
      "params": [
        {
          "name": "base_bdev",
          "type": "string",
          "required": true,
          "description": "base bdev name"
        }
      ]
    },
    {
      "name": "bdev_uring_create",
      "params": [
        {
          "name": "filename",
          "type": "string",
          "required": true,
          "description": "path to device or file (ex: /dev/nvme0n1)"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "name of bdev"
        },
        {
          "name": "block_size",
          "type": "number",
          "required": false,
          "description": "block size of device (If omitted, get the block size from the file)"
        },
        {
          "name": "uuid",
          "type": "string",
          "required": false,
          "description": "UUID of new bdev"
        }
      ]
    },
    {
      "name": "bdev_uring_rescan",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "name of uring bdev to rescan"
        }
      ]
    },
    {
      "name": "bdev_uring_delete",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "name of uring bdev to delete"
        }
      ]
    },
    {
      "name": "bdev_nvme_opal_init",
      "params": [
        {
          "name": "nvme_ctrlr_name",
          "type": "string",
          "required": true,
          "description": "name of nvme ctrlr"
        },
        {
          "name": "password",
          "type": "string",
          "required": true,
          "description": "admin password of OPAL"
        }
      ]
    },
    {
      "name": "bdev_nvme_opal_revert",
      "params": [
        {
          "name": "nvme_ctrlr_name",
          "type": "string",
          "required": true,
          "description": "name of nvme ctrlr"
        },
        {
          "name": "password",
          "type": "string",
          "required": true,
          "description": "admin password of OPAL"
        }
      ]
    },
    {
      "name": "bdev_opal_create",
      "params": [
        {
          "name": "nvme_ctrlr_name",
          "type": "string",
          "required": true,
          "description": "name of nvme ctrlr that supports OPAL"
        },
        {
          "name": "nsid",
          "type": "number",
          "required": true,
          "description": "namespace ID"
        },
        {
          "name": "locking_range_id",
          "type": "number",
          "required": true,
          "description": "OPAL locking range ID"
        },
        {
          "name": "range_start",
          "type": "number",
          "required": true,
          "description": "locking range start LBA"
        },
        {
          "name": "range_length",
          "type": "number",
          "required": true,
          "description": "locking range length"
        },
        {
          "name": "password",
          "type": "string",
          "required": true,
          "description": "admin password of OPAL"
        }
      ]
    },
    {
      "name": "bdev_opal_get_info",
      "params": [
        {
          "name": "bdev_name",
          "type": "string",
          "required": true,
          "description": "name of OPAL vbdev"
        },
        {
          "name": "password",
          "type": "string",
          "required": true,
          "description": "admin password"
        }
      ]
    },
    {
      "name": "bdev_opal_delete",
      "params": [
        {
          "name": "bdev_name",
          "type": "string",
          "required": true,
          "description": "name of OPAL vbdev"
        },
        {
          "name": "password",
          "type": "string",
          "required": true,
          "description": "admin password"
        }
      ]
    },
    {
      "name": "bdev_opal_new_user",
      "params": [
        {
          "name": "bdev_name",
          "type": "string",
          "required": true,
          "description": "name of OPAL vbdev"
        },
        {
          "name": "admin_password",
          "type": "string",
          "required": true,
          "description": "admin password"
        },
        {
          "name": "user_id",
          "type": "number",
          "required": true,
          "description": "user ID"
        },
        {
          "name": "user_password",
          "type": "string",
          "required": true,
          "description": "user password"
        }
      ]
    },
    {
      "name": "bdev_opal_set_lock_state",
      "params": [
        {
          "name": "bdev_name",
          "type": "string",
          "required": true,
          "description": "name of OPAL vbdev"
        },
        {
          "name": "user_id",
          "type": "number",
          "required": true,
          "description": "user ID"
        },
        {
          "name": "password",
          "type": "string",
          "required": true,
          "description": "user password"
        },
        {
          "name": "lock_state",
          "type": "string",
          "required": true,
          "description": "lock state"
        }
      ]
    },
    {
      "name": "notify_get_types",
      "params": []
    },
    {
      "name": "notify_get_notifications",
      "params": [
        {
          "name": "id",
          "type": "number",
          "required": false,
          "description": "First Event ID to fetch (default: first available)."
        },
        {
          "name": "max",
          "type": "number",
          "required": false,
          "description": "Maximum number of event to return (default: no limit)."
        }
      ]
    },
    {
      "name": "keyring_file_add_key",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the key to add."
        },
        {
          "name": "path",
          "type": "string",
          "required": true,
          "description": "Path to a file containing the key."
        }
      ]
    },
    {
      "name": "keyring_file_remove_key",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the key to remove."
        }
      ]
    },
    {
      "name": "keyring_get_keys",
      "params": []
    },
    {
      "name": "keyring_linux_set_options",
      "params": [
        {
          "name": "enable",
          "type": "boolean",
          "required": false,
          "description": "Enable the module."
        }
      ]
    },
    {
      "name": "ublk_create_target",
      "params": [
        {
          "name": "cpumask",
          "type": "string",
          "required": false,
          "description": "Cpumask for ublk target"
        },
        {
          "name": "disable_user_copy",
          "type": "boolean",
          "required": false,
          "description": "Disable user copy feature"
        }
      ]
    },
    {
      "name": "ublk_destroy_target",
      "params": []
    },
    {
      "name": "ublk_start_disk",
      "params": [
        {
          "name": "bdev_name",
          "type": "string",
          "required": true,
          "description": "Bdev name to export"
        },
        {
          "name": "ublk_id",
          "type": "number",
          "required": true,
          "description": "Device id"
        },
        {
          "name": "queue_depth",
          "type": "number",
          "required": false,
          "description": "Device queue depth"
        },
        {
          "name": "num_queues",
          "type": "number",
          "required": false,
          "description": "Total number of device queues"
        }
      ]
    },
    {
      "name": "ublk_recover_disk",
      "params": [
        {
          "name": "bdev_name",
          "type": "string",
          "required": true,
          "description": "Bdev name to export"
        },
        {
          "name": "ublk_id",
          "type": "number",
          "required": true,
          "description": "Device id"
        }
      ]
    },
    {
      "name": "ublk_stop_disk",
      "params": [
        {
          "name": "ublk_id",
          "type": "number",
          "required": true,
          "description": "Device id to delete"
        }
      ]
    },
    {
      "name": "ublk_get_disks",
      "params": [
        {
          "name": "ublk_id",
          "type": "number",
          "required": false,
          "description": "ublk device id to display"
        }
      ]
    },
    {
      "name": "nbd_start_disk",
      "params": [
        {
          "name": "bdev_name",
          "type": "string",
          "required": true,
          "description": "Bdev name to export"
        },
        {
          "name": "nbd_device",
          "type": "string",
          "required": false,
          "description": "NBD device name to assign"
        }
      ]
    },
    {
      "name": "nbd_stop_disk",
      "params": [
        {
          "name": "nbd_device",
          "type": "string",
          "required": true,
          "description": "NBD device name to stop"
        }
      ]
    },
    {
      "name": "nbd_get_disks",
      "params": [
        {
          "name": "nbd_device",
          "type": "string",
          "required": false,
          "description": "NBD device name to display"
        }
      ]
    },
    {
      "name": "sock_impl_get_options",
      "params": [
        {
          "name": "impl_name",
          "type": "string",
          "required": true,
          "description": "Name of socket implementation, e.g. posix"
        }
      ]
    },
    {
      "name": "sock_impl_set_options",
      "params": [
        {
          "name": "impl_name",
          "type": "string",
          "required": true,
          "description": "Name of socket implementation, e.g. posix"
        },
        {
          "name": "recv_buf_size",
          "type": "number",
          "required": false,
          "description": "Size of socket receive buffer in bytes"
        },
        {
          "name": "send_buf_size",
          "type": "number",
          "required": false,
          "description": "Size of socket send buffer in bytes"
        },
        {
          "name": "enable_recv_pipe",
          "type": "boolean",
          "required": false,
          "description": "Enable or disable receive pipe"
        },
        {
          "name": "enable_quickack",
          "type": "boolean",
          "required": false,
          "description": "Enable or disable quick ACK"
        },
        {
          "name": "enable_placement_id",
          "type": "number",
          "required": false,
          "description": "Enable or disable placement_id. 0:disable,1:incoming_napi,2:incoming_cpu"
        },
        {
          "name": "enable_zerocopy_send_server",
          "type": "boolean",
          "required": false,
          "description": "Enable or disable zero copy on send for server sockets"
        },
        {
          "name": "enable_zerocopy_send_client",
          "type": "boolean",
          "required": false,
          "description": "Enable or disable zero copy on send for client sockets"
        },
        {
          "name": "zerocopy_threshold",
          "type": "number",
          "required": false,
          "description": "Set zerocopy_threshold in bytes. A consecutive sequence of requests' iovecs that fall below this threshold may be sent without zerocopy flag set"
        },
        {
          "name": "tls_version",
          "type": "number",
          "required": false,
          "description": "TLS protocol version, e.g. 13 for v1.3 (only applies when impl_name == ssl)"
        },
        {
          "name": "enable_ktls",
          "type": "boolean",
          "required": false,
          "description": "Enable or disable Kernel TLS (only applies when impl_name == ssl)"
        }
      ]
    },
    {
      "name": "sock_set_default_impl",
      "params": [
        {
          "name": "impl_name",
          "type": "string",
          "required": true,
          "description": "Name of socket implementation, e.g. posix"
        }
      ]
    },
    {
      "name": "sock_get_default_impl",
      "params": []
    },
    {
      "name": "bdev_nvme_send_cmd",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the operating NVMe controller"
        },
        {
          "name": "cmd_type",
          "type": "string",
          "required": true,
          "description": "Type of nvme cmd. Valid values are: admin, io"
        },
        {
          "name": "data_direction",
          "type": "string",
          "required": true,
          "description": "Direction of data transfer. Valid values are: c2h, h2c"
        },
        {
          "name": "cmdbuf",
          "type": "string",
          "required": true,
          "description": "NVMe command encoded by base64 urlsafe"
        },
        {
          "name": "data",
          "type": "string",
          "required": false,
          "description": "Data transferring to controller from host, encoded by base64 urlsafe"
        },
        {
          "name": "metadata",
          "type": "string",
          "required": false,
          "description": "Metadata transferring to controller from host, encoded by base64 urlsafe"
        },
        {
          "name": "data_len",
          "type": "number",
          "required": false,
          "description": "Data length required to transfer from controller to host"
        },
        {
          "name": "metadata_len",
          "type": "number",
          "required": false,
          "description": "Metadata length required to transfer from controller to host"
        },
        {
          "name": "timeout_ms",
          "type": "number",
          "required": false,
          "description": "Command execution timeout value, in milliseconds"
        }
      ]
    },
    {
      "name": "vmd_enable",
      "params": []
    },
    {
      "name": "vmd_remove_device",
      "params": [
        {
          "name": "addr",
          "type": "string",
          "required": true,
          "description": "Address of the device to remove."
        }
      ]
    },
    {
      "name": "vmd_rescan",
      "params": []
    },
    {
      "name": "spdk_get_version",
      "params": []
    },
    {
      "name": "framework_get_pci_devices",
      "params": []
    },
    {
      "name": "bdev_nvme_add_error_injection",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the operating NVMe controller"
        },
        {
          "name": "cmd_type",
          "type": "string",
          "required": true,
          "description": "Type of NVMe command. Valid values are: admin, io"
        },
        {
          "name": "opc",
          "type": "number",
          "required": true,
          "description": "Opcode for which the error injection is applied"
        },
        {
          "name": "do_not_submit",
          "type": "boolean",
          "required": false,
          "description": "Set to true if request should not be submitted to the controller (default false)"
        },
        {
          "name": "timeout_in_us",
          "type": "number",
          "required": false,
          "description": "Wait specified microseconds when do_not_submit is true"
        },
        {
          "name": "err_count",
          "type": "number",
          "required": false,
          "description": "Number of matching NVMe commands to inject errors"
        },
        {
          "name": "sct",
          "type": "number",
          "required": false,
          "description": "Status code type (default 0)"
        },
        {
          "name": "sc",
          "type": "number",
          "required": false,
          "description": "Status code (default 0)"
        }
      ]
    },
    {
      "name": "bdev_nvme_remove_error_injection",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the operating NVMe controller"
        },
        {
          "name": "cmd_type",
          "type": "string",
          "required": true,
          "description": "Type of NVMe command. Valid values are: admin, io"
        },
        {
          "name": "opc",
          "type": "number",
          "required": true,
          "description": "Opcode for which the error injection is applied"
        }
      ]
    },
    {
      "name": "bdev_daos_create",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name to use"
        },
        {
          "name": "pool",
          "type": "string",
          "required": true,
          "description": "DAOS pool label or its uuid"
        },
        {
          "name": "cont",
          "type": "string",
          "required": true,
          "description": "DAOS cont label or its uuid"
        },
        {
          "name": "block_size",
          "type": "number",
          "required": true,
          "description": "Block size in bytes -must be multiple of 512"
        },
        {
          "name": "num_blocks",
          "type": "number",
          "required": true,
          "description": "Number of blocks"
        },
        {
          "name": "uuid",
          "type": "string",
          "required": false,
          "description": "UUID of new bdev"
        },
        {
          "name": "oclass",
          "type": "string",
          "required": false,
          "description": "DAOS object class (default SX)"
        }
      ]
    },
    {
      "name": "bdev_daos_delete",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        }
      ]
    },
    {
      "name": "bdev_daos_resize",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Bdev name"
        },
        {
          "name": "new_size",
          "type": "number",
          "required": true,
          "description": "Bdev new capacity in MiB"
        }
      ]
    },
    {
      "name": "iobuf_set_options",
      "params": [
        {
          "name": "small_pool_count",
          "type": "number",
          "required": false,
          "description": "Number of small buffers in the global pool"
        },
        {
          "name": "large_pool_count",
          "type": "number",
          "required": false,
          "description": "Number of large buffers in the global pool"
        },
        {
          "name": "small_bufsize",
          "type": "number",
          "required": false,
          "description": "Size of a small buffer"
        },
        {
          "name": "large_bufsize",
          "type": "number",
          "required": false,
          "description": "Size of a small buffer"
        },
        {
          "name": "enable_numa",
          "type": "boolean",
          "required": false,
          "description": "Enable per-NUMA node buffer pools. Each node will allocate a full pool based on small_pool_count and large_pool_count."
        }
      ]
    },
    {
      "name": "iobuf_get_stats",
      "params": []
    },
    {
      "name": "bdev_nvme_start_mdns_discovery",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Prefix for NVMe discovery services found"
        },
        {
          "name": "svcname",
          "type": "string",
          "required": true,
          "description": "Service to discover: e.g. _nvme-disc._tcp"
        },
        {
          "name": "hostnqn",
          "type": "string",
          "required": false,
          "description": "NVMe-oF hostnqn"
        }
      ]
    },
    {
      "name": "bdev_nvme_stop_mdns_discovery",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of mDNS discovery instance to stop"
        }
      ]
    },
    {
      "name": "bdev_nvme_get_mdns_discovery_info",
      "params": []
    },
    {
      "name": "nvmf_publish_mdns_prr",
      "params": [
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        }
      ]
    },
    {
      "name": "nvmf_stop_mdns_prr",
      "params": [
        {
          "name": "tgt_name",
          "type": "string",
          "required": false,
          "description": "Parent NVMe-oF target name."
        }
      ]
    },
    {
      "name": "fsdev_get_opts",
      "params": []
    },
    {
      "name": "fsdev_set_opts",
      "params": [
        {
          "name": "fsdev_io_pool_size",
          "type": "number",
          "required": true,
          "description": "Size of fsdev IO objects pool."
        },
        {
          "name": "fsdev_io_cache_size",
          "type": "number",
          "required": true,
          "description": "Size of fsdev IO objects cache per thread."
        }
      ]
    },
    {
      "name": "fsdev_aio_create",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the AIO fsdev to create."
        },
        {
          "name": "root_path",
          "type": "string",
          "required": true,
          "description": "Path on the system directory to be exposed as an SPDK filesystem"
        },
        {
          "name": "enable_xattr",
          "type": "boolean",
          "required": false,
          "description": "true to enable the extended attributes, false otherwise"
        },
        {
          "name": "enable_writeback_cache",
          "type": "boolean",
          "required": false,
          "description": "true to enable the writeback cache, false otherwise"
        },
        {
          "name": "max_write",
          "type": "number",
          "required": false,
          "description": "Max write size in bytes"
        },
        {
          "name": "skip_rw",
          "type": "boolean",
          "required": false,
          "description": "Skip processing read and write requests and complete them successfully immediately. This is useful for benchmarking."
        }
      ]
    },
    {
      "name": "fsdev_aio_delete",
      "params": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "Name of the AIO fsdev to delete."
        }
      ]
    }
  ]
}
