{
  "comments": [
    {
      "key": {
        "uuid": "75e0fe92_ebae9917",
        "filename": "include/spdk/jsonrpc.h",
        "patchSetId": 11
      },
      "lineNbr": 111,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-09-05T17:20:17Z",
      "side": 1,
      "message": "should add a newline here before the comment starts",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ea08e0c_bfa580c9",
        "filename": "include/spdk/jsonrpc.h",
        "patchSetId": 11
      },
      "lineNbr": 111,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-06T04:33:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "75e0fe92_ebae9917",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7492ec99_a13e6b2a",
        "filename": "include/spdk/jsonrpc.h",
        "patchSetId": 11
      },
      "lineNbr": 202,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-09-05T17:20:17Z",
      "side": 1,
      "message": "let\u0027s add the documentation",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e47e0bf_58b7ca1a",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 38,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-09-05T17:20:17Z",
      "side": 1,
      "message": "Can we use specific types here?  like char * for version and result, and uint32_t for id.\n\nThis is how most (all?) of the other RPCs do it.  Then you use spdk_json_decode_string and spdk_json_decode_uint32 instead of defining your own capture_val.\n\nOr if this doesn\u0027t work for some reason, please let me know.",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbcf1667_b926949c",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 38,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-06T04:33:57Z",
      "side": 1,
      "message": "fields of version and id can apply this change.\n\nBut, it\u0027s better to leave result unchanged, since only specific methods know what types, their results are.",
      "parentUuid": "4e47e0bf_58b7ca1a",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b970d798_6ae6ae7e",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 52,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-09-05T17:20:17Z",
      "side": 1,
      "message": "remove this TODO",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "defbdbef_2895ea95",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 52,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-06T04:33:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b970d798_6ae6ae7e",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b996bfee_192a35ec",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 54,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-09-06T07:09:23Z",
      "side": 1,
      "message": "Is this optional?",
      "range": {
        "startLine": 54,
        "startChar": 70,
        "endLine": 54,
        "endChar": 74
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "485582d3_aa11aee6",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 56,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-09-06T07:09:23Z",
      "side": 1,
      "message": "I don\u0027t think this is optional in response.",
      "range": {
        "startLine": 56,
        "startChar": 60,
        "endLine": 56,
        "endChar": 64
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d6df467_162ebdfc",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 71,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-09-06T07:09:23Z",
      "side": 1,
      "message": "I think you can just return here and in line 76",
      "range": {
        "startLine": 70,
        "startChar": 2,
        "endLine": 71,
        "endChar": 12
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dff01974_202315d8",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 77,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-09-06T07:09:23Z",
      "side": 1,
      "message": "ID should be checked here vs JSON RPC request ID.",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 2
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c47c6107_67e36867",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 88,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-09-05T17:20:17Z",
      "side": 1,
      "message": "I think you can just call this spdk_json_rpc_parse_response.  Then it is similar to spdk_json_parse_request on the server side.",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ef6fb0c_0beb6647",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 88,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-06T04:33:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c47c6107_67e36867",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d381f87f_ac1c1501",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 133,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-09-05T17:20:17Z",
      "side": 1,
      "message": "usually we try to avoid starting static function with spdk_.  Normally only public API functions start with spdk_.  So calling this _jsonrpc_client_write_cb makes it clear that this is a private function and not part of the public API.",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dec68a3c_95ba4994",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 133,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-06T04:33:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d381f87f_ac1c1501",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07a4b102_b75e1822",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 180,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-09-06T07:09:23Z",
      "side": 1,
      "message": "spdk_json_write_named_string",
      "range": {
        "startLine": 179,
        "startChar": 0,
        "endLine": 180,
        "endChar": 34
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ff3ca17_3cc3ae4e",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 180,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-06T08:28:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "07a4b102_b75e1822",
      "range": {
        "startLine": 179,
        "startChar": 0,
        "endLine": 180,
        "endChar": 34
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc4ad5ee_ef11e32e",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 183,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-09-06T07:09:23Z",
      "side": 1,
      "message": "spdk_json_write_named_int32\n\nrequest ID should be a parameter as there might be many simultaneous request on one connection.",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 183,
        "endChar": 29
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a30ed01_76b16c3c",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 183,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-06T08:28:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc4ad5ee_ef11e32e",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 183,
        "endChar": 29
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3546e07_1ded0adb",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 193,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-09-06T07:09:23Z",
      "side": 1,
      "message": "is this new line necessary?",
      "range": {
        "startLine": 193,
        "startChar": 0,
        "endLine": 193,
        "endChar": 48
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da7a6feb_726bb87e",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 193,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-06T08:28:15Z",
      "side": 1,
      "message": "it is not necessary, and it doesn\u0027t matter whether have it or not.\nBut having a \u0027/n\u0027 is good to print.",
      "parentUuid": "b3546e07_1ded0adb",
      "range": {
        "startLine": 193,
        "startChar": 0,
        "endLine": 193,
        "endChar": 48
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be1ceb6f_dbcd6369",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 201,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-09-05T17:20:17Z",
      "side": 1,
      "message": "You can just include the begin_request contents directly here, since begin_request() is static and only called from this location.",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2048964_985f4873",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 201,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-06T04:33:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be1ceb6f_dbcd6369",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5071fbb3_ada7e00d",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 216,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-09-05T17:20:17Z",
      "side": 1,
      "message": "You can just include the end_request contents directly here, since end_request() is static and only called from this location.",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "abeda79d_bd53ce39",
        "filename": "lib/jsonrpc/jsonrpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 216,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-06T04:33:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5071fbb3_ada7e00d",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "856fe00a_ab2fbd50",
        "filename": "lib/jsonrpc/jsonrpc_client_tcp.c",
        "patchSetId": 11
      },
      "lineNbr": 163,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-09-05T17:20:17Z",
      "side": 1,
      "message": "no need to subtract response-\u003erecv_offset here since it is set to 0 on previous line",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33336227_74f9fe25",
        "filename": "lib/jsonrpc/jsonrpc_client_tcp.c",
        "patchSetId": 11
      },
      "lineNbr": 163,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-06T04:33:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "856fe00a_ab2fbd50",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd7d4f15_43d86fc7",
        "filename": "lib/jsonrpc/jsonrpc_internal.h",
        "patchSetId": 11
      },
      "lineNbr": 120,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-09-05T17:20:17Z",
      "side": 1,
      "message": "I would suggest making this a bit more similar to spdk_jsonrpc_server_conn:\n\nMainly this would be putting the contents of spdk_json_rpc_client_response directly in spdk_jsonrpc_client_conn.  For example, spdk_jsonrpc_server_conn directly contains the recv_buf, recv_len and values arrays.\n\nThen spdk_jsonrpc_client_response can be removed.\n\nI\u0027m also not sure that recv_offset needs to be in this structure.  I think it can be a local variable in the function that uses it.",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a647da4_6b103fe2",
        "filename": "lib/jsonrpc/jsonrpc_internal.h",
        "patchSetId": 11
      },
      "lineNbr": 120,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-06T04:33:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd7d4f15_43d86fc7",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26f6b7f3_98bf569c",
        "filename": "lib/jsonrpc/jsonrpc_internal.h",
        "patchSetId": 11
      },
      "lineNbr": 150,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-09-06T07:09:23Z",
      "side": 1,
      "message": "Can you void this condition? There might be cases when buffer is shared or read only from other reasons.",
      "range": {
        "startLine": 150,
        "startChar": 3,
        "endLine": 150,
        "endChar": 74
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4673f8f_f2d4060d",
        "filename": "lib/jsonrpc/jsonrpc_internal.h",
        "patchSetId": 11
      },
      "lineNbr": 150,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-06T08:28:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26f6b7f3_98bf569c",
      "range": {
        "startLine": 150,
        "startChar": 3,
        "endLine": 150,
        "endChar": 74
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f74f0e6f_7dd41006",
        "filename": "lib/rpc_client/rpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 45,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-09-06T07:09:23Z",
      "side": 1,
      "message": "Automagical discovery of sun_family is pitfall of RPC server that forbid providing address as relative path.\n\nDon\u0027t duplicate server shortcoming in client implementation and require from user to provide type of this address.",
      "range": {
        "startLine": 45,
        "startChar": 5,
        "endLine": 45,
        "endChar": 28
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "367eb281_a23f64f4",
        "filename": "lib/rpc_client/rpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 45,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-06T08:28:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f74f0e6f_7dd41006",
      "range": {
        "startLine": 45,
        "startChar": 5,
        "endLine": 45,
        "endChar": 28
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bed5a1a5_7eb4248b",
        "filename": "lib/rpc_client/rpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 103,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-09-06T07:09:23Z",
      "side": 1,
      "message": "this casting is not needed.",
      "range": {
        "startLine": 103,
        "startChar": 8,
        "endLine": 103,
        "endChar": 39
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bf54c7b_b59bfbff",
        "filename": "lib/rpc_client/rpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 103,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-06T08:28:15Z",
      "side": 1,
      "message": "struct spdk_rpc_client_conn is defined with an expectation that users can ignore the existance of jsonrpc and other internal details.\nI would like that reading and including rpc_client.h is enough to execute spdk rpc methods.",
      "parentUuid": "bed5a1a5_7eb4248b",
      "range": {
        "startLine": 103,
        "startChar": 8,
        "endLine": 103,
        "endChar": 39
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5802e52f_4a2c4321",
        "filename": "lib/rpc_client/rpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 103,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-09-06T13:05:50Z",
      "side": 1,
      "message": "I think I don\u0027t understand this statement :)\n\nI wanted to say that typeof(conn) \u003d\u003d typeof(spdk_rpc_client_connect(...)) \u003d\u003d struct spdk_jsonrpc_client_conn * so there is no need to add explicit casting here to the same type as this is NOP.",
      "parentUuid": "3bf54c7b_b59bfbff",
      "range": {
        "startLine": 103,
        "startChar": 8,
        "endLine": 103,
        "endChar": 39
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9abc2197_8f1fbaba",
        "filename": "lib/rpc_client/rpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 103,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-07T00:05:32Z",
      "side": 1,
      "message": "Not really :)\nstruct spdk_rpc_client_conn doesn\u0027t have a real definition. It just have a statement in rpc_client.h, and not equal to spdk_jsonrpc_client_comm.\nSo without the casting, there will be a warning report.",
      "parentUuid": "5802e52f_4a2c4321",
      "range": {
        "startLine": 103,
        "startChar": 8,
        "endLine": 103,
        "endChar": 39
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3e2def4_2a44a51a",
        "filename": "lib/rpc_client/rpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 103,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-09-07T10:17:11Z",
      "side": 1,
      "message": "\u003e  It just have a statement in rpc_client.h, and not equal to spdk_jsonrpc_client_comm.\n\nOhhh... It blows up my mind xD\nCan I as why we need this placeholder?",
      "parentUuid": "9abc2197_8f1fbaba",
      "range": {
        "startLine": 103,
        "startChar": 8,
        "endLine": 103,
        "endChar": 39
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5914de6_91271a92",
        "filename": "lib/rpc_client/rpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 103,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-09-10T23:00:53Z",
      "side": 1,
      "message": "I think it\u0027s OK to just return the jsonrpc structures directly.\n\nThis wasn\u0027t done in the lib/rpc server code, but it only supports a single global server.  If it wanted to support multiple servers at once, it would probably also need to return jsonrpc objects.\n\nIn fact, in hindsight, lib/rpc probably should have been called lib/jsonrpc_server.",
      "parentUuid": "a3e2def4_2a44a51a",
      "range": {
        "startLine": 103,
        "startChar": 8,
        "endLine": 103,
        "endChar": 39
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "766db912_9c7a86f4",
        "filename": "lib/rpc_client/rpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 103,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-11T02:35:18Z",
      "side": 1,
      "message": "Got it. So it is reasonable to let rpc-client API return jsonrpc-conn.\nWill merge this file into jsonrpc-client.c",
      "parentUuid": "e5914de6_91271a92",
      "range": {
        "startLine": 103,
        "startChar": 8,
        "endLine": 103,
        "endChar": 39
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c964f447_3de570e4",
        "filename": "lib/rpc_client/rpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 108,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-09-06T07:09:23Z",
      "side": 1,
      "message": "this casting is not needed.",
      "range": {
        "startLine": 108,
        "startChar": 27,
        "endLine": 108,
        "endChar": 62
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e26b92f_f8f5c8e6",
        "filename": "lib/rpc_client/rpc_client.c",
        "patchSetId": 11
      },
      "lineNbr": 108,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-06T08:28:15Z",
      "side": 1,
      "message": "^",
      "parentUuid": "c964f447_3de570e4",
      "range": {
        "startLine": 108,
        "startChar": 27,
        "endLine": 108,
        "endChar": 62
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2739bff3_041e346f",
        "filename": "lib/rpc_client/rpc_client_check_rpc_method.c",
        "patchSetId": 11
      },
      "lineNbr": 56,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-09-05T17:20:17Z",
      "side": 1,
      "message": "Public APIs should not start with a _.  _ usually means it is a private static function.\n\nI think you can make this function the primary function, and remove spdk_rpc_client_check_rpc_method.  It is OK to require the caller to call spdk_rpc_client_connect/close directly.",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9985cebc_fe625007",
        "filename": "lib/rpc_client/rpc_client_check_rpc_method.c",
        "patchSetId": 11
      },
      "lineNbr": 56,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-09-05T18:43:16Z",
      "side": 1,
      "message": "I think this function should be a part of test application not library code.\n\nIf you have a strong need to reflect \u0027get_rpc_methods\u0027 RPC method in library code you should provide spdk_rpc_client_get_rpc_methods() API function (note that \u0027get_rpc_methods\u0027 can can take one optional parameter). \n\nAnother thing would be to test this. I\u0027m afraid that amount of work to test all RPC methods in C will troumendous.\n\nFrom above two, I would rater vote for generic client RPC API  rather than reimplement every method.",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 88
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d1dddca_0bec2d6a",
        "filename": "lib/rpc_client/rpc_client_check_rpc_method.c",
        "patchSetId": 11
      },
      "lineNbr": 56,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-06T04:33:57Z",
      "side": 1,
      "message": "OK, will apply this.",
      "parentUuid": "2739bff3_041e346f",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "158be958_cea7132d",
        "filename": "lib/rpc_client/rpc_client_check_rpc_method.c",
        "patchSetId": 11
      },
      "lineNbr": 56,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-06T05:10:40Z",
      "side": 1,
      "message": "hi, Pawel\nok, will move these code into the test application, since get_rpc_methods need to tedious process like dealing with a 2D string array and memory operation.\n\nI didn\u0027t get a clear understanding on your last sentence...\ndid you mean let user appliction themselves to construct request and parse the response by json/jsonrpc/rpc API?",
      "parentUuid": "9985cebc_fe625007",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 88
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d6302be_92081df0",
        "filename": "lib/rpc_client/rpc_client_check_rpc_method.c",
        "patchSetId": 11
      },
      "lineNbr": 56,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-09-06T07:09:23Z",
      "side": 1,
      "message": "\u003e I didn\u0027t get a clear understanding on your last sentence... did you mean let user appliction themselves to construct request and parse the response by json/jsonrpc/rpc API?\n\nFor now, yes.",
      "parentUuid": "158be958_cea7132d",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 88
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6aa395c7_a2ba063b",
        "filename": "lib/rpc_client/rpc_client_check_rpc_method.c",
        "patchSetId": 11
      },
      "lineNbr": 56,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-06T08:28:15Z",
      "side": 1,
      "message": "how about providing simple RPC functions in rpc_client.h, we may providing some frequently-used API here in the future. Then, users, who want to avoid jsonrpc constructing/parsing or don\u0027t want to explore jsonrpc details, may directly use the APIs here.\n\nFor SPDK skillful users or advanced rpc methods, they may construct request and parse the response by json/jsonrpc/rpc API by themselves.",
      "parentUuid": "9d6302be_92081df0",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 88
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf401534_b5082f90",
        "filename": "lib/rpc_client/rpc_client_check_rpc_method.c",
        "patchSetId": 11
      },
      "lineNbr": 56,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-09-06T13:05:50Z",
      "side": 1,
      "message": "\u003e how about providing simple RPC functions in rpc_client.h, we may providing some frequently-used API\n\nMany questions will arise - why only those function? Where are tests? These functions neither be simple nor won\u0027t be complete (won\u0027t reflect server side RPC methods).\n\nPut them in tools common directory for now and use them internally.",
      "parentUuid": "6aa395c7_a2ba063b",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 88
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2800fe07_166bfa4c",
        "filename": "lib/rpc_client/rpc_client_check_rpc_method.c",
        "patchSetId": 11
      },
      "lineNbr": 56,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-07T00:05:32Z",
      "side": 1,
      "message": "This is a logic between easy-to-use and fully-support. :)\nI would prefer easy-to-use, and will add C-api for spdk_rpc_client_nvme_cmd later. just thought if I were a outside user, one well defiend API was welcome. Another benefit is if we change code of json/jsonrpc or code of each server side rpc methods, user doesn\u0027t have to change their code.\n\nThe answer to these questions is \"they are not implemented yet, add it if require it\".",
      "parentUuid": "cf401534_b5082f90",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 88
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed85b30e_3f78dab8",
        "filename": "lib/rpc_client/rpc_client_check_rpc_method.c",
        "patchSetId": 11
      },
      "lineNbr": 56,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-09-10T22:38:59Z",
      "side": 1,
      "message": "I think Pawel\u0027s concern is that once something goes into lib/, it is part of supported SPDK library API.  We will get questions on why all of them are not supported.  I\u0027m still not sure exactly what we are going to need in this library - for example, there is probably wrapper code around nvme_cmd RPC that will be needed for all of the different test/management apps that want to use this new capability.\n\nSo for now, let\u0027s keep this library, but move it under examples/rpc_client.\n\nPawel - are you OK with that?",
      "parentUuid": "2800fe07_166bfa4c",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 88
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcc78afa_fb4fca1a",
        "filename": "lib/rpc_client/rpc_client_check_rpc_method.c",
        "patchSetId": 11
      },
      "lineNbr": 56,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-11T02:35:18Z",
      "side": 1,
      "message": "merged rpc_client.c into jsonrpc_client_tcp.c\nmoved rpc_client_check_rpc_method.c into test/rpc_client folder.\nSo, all issues about this lib can be closed.",
      "parentUuid": "ed85b30e_3f78dab8",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 88
      },
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "210c75ce_76a7351c",
        "filename": "test/rpc_client/rpc_client_test.c",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-09-05T17:20:17Z",
      "side": 1,
      "message": "can y\u0010ou include spdk/event.h and use SPDK_DEFAULT_RPC_ADDR here instead?",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdf1cf7a_2111b7e1",
        "filename": "test/rpc_client/rpc_client_test.c",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1011712
      },
      "writtenOn": "2018-09-06T04:33:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "210c75ce_76a7351c",
      "revId": "4384d389b79da6f1ae1328af0e7d4890420b8357",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}