{
  "comments": [
    {
      "key": {
        "uuid": "a0906af8_9f454718",
        "filename": "lib/nvmf/subsystem.c",
        "patchSetId": 12
      },
      "lineNbr": 1721,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2019-03-05T23:05:24Z",
      "side": 1,
      "message": "I\u0027m trying to understand what\u0027s going on with this part. The same initiator can connect to the subsystem twice (over different ports?), which creates two ctrlr objects with potentially the same hostid. I have a lot of open questions on what should happen in that case though (should it even be allowed?). If the host registers itself via one path, is it also registered via another path? I\u0027m not sure it is.\n\nI think for now, ignore the case of two ctrlrs with the same hostid and just make this loop over ns-\u003eregistrants. We\u0027ll sort out this multipathing problem later on.",
      "revId": "a37ffce49d7a569202684d13f2d5b3e113d62d28",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63fc123d_a1a86928",
        "filename": "lib/nvmf/subsystem.c",
        "patchSetId": 12
      },
      "lineNbr": 1721,
      "author": {
        "id": 1011204
      },
      "writtenOn": "2019-03-06T01:39:45Z",
      "side": 1,
      "message": "The specification 1.3 chapter 8.8 has descriptions on it, and I also use the same diagram for the unit tests.  For the Host has two controllers associate with same subsystem(multipath), it only need to register once, see 8.8.2 for this part.",
      "parentUuid": "a0906af8_9f454718",
      "revId": "a37ffce49d7a569202684d13f2d5b3e113d62d28",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2410c8b_6117ffc1",
        "filename": "lib/nvmf/subsystem.c",
        "patchSetId": 12
      },
      "lineNbr": 1754,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2019-03-05T23:05:24Z",
      "side": 1,
      "message": "Is it an error if the provided data buffer isn\u0027t large enough? How do you report the truncation?",
      "revId": "a37ffce49d7a569202684d13f2d5b3e113d62d28",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09d8816f_a977bae6",
        "filename": "lib/nvmf/subsystem.c",
        "patchSetId": 12
      },
      "lineNbr": 1754,
      "author": {
        "id": 1011204
      },
      "writtenOn": "2019-03-06T01:39:45Z",
      "side": 1,
      "message": "Hi Ben, I think I followed the specification, see what the specification describes:\n\nNumber of Dwords (NUMD): This field specifies the number of Dwords of the Reservation Status\ndata structure to transfer. This is a 0â€™s based value.\nIf this field corresponds to a length that is less than the size of the Reservation Status data\nstructure, then only that specified portion of the data structure is transferred.",
      "parentUuid": "f2410c8b_6117ffc1",
      "revId": "a37ffce49d7a569202684d13f2d5b3e113d62d28",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}