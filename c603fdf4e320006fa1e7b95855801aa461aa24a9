{
  "comments": [
    {
      "key": {
        "uuid": "fbd9a1db_17c72352",
        "filename": "lib/reduce/reduce.c",
        "patchSetId": 11
      },
      "lineNbr": 354,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2019-07-11T06:01:42Z",
      "side": 1,
      "message": "you can still free the buffer when other volumes use it\n\n-\u003e create one vol, alloc g_zero_buf, success\n-\u003e create another vol, g_vol_count \u003e 0 so don\u0027t alloc g_zero_buf, fail, free g_zero_buf\n-\u003e crash",
      "range": {
        "startLine": 354,
        "startChar": 2,
        "endLine": 354,
        "endChar": 24
      },
      "revId": "c603fdf4e320006fa1e7b95855801aa461aa24a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d842f11b_c2b683df",
        "filename": "lib/reduce/reduce.c",
        "patchSetId": 11
      },
      "lineNbr": 354,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2019-07-11T15:01:52Z",
      "side": 1,
      "message": "yeah, didn\u0027t catch that one.  a failure on the creation of a 2nd vol will kill the buff for the first one.  my bad",
      "parentUuid": "fbd9a1db_17c72352",
      "range": {
        "startLine": 354,
        "startChar": 2,
        "endLine": 354,
        "endChar": 24
      },
      "revId": "c603fdf4e320006fa1e7b95855801aa461aa24a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cfa8f42_2d8f820e",
        "filename": "lib/reduce/reduce.c",
        "patchSetId": 11
      },
      "lineNbr": 404,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2019-07-11T06:01:42Z",
      "side": 1,
      "message": "It looks like we can reach g_vol_count\u003d\u003d0 without freeing the buf. Is this expected?",
      "range": {
        "startLine": 404,
        "startChar": 6,
        "endLine": 404,
        "endChar": 32
      },
      "revId": "c603fdf4e320006fa1e7b95855801aa461aa24a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a4d6a1e_5541ebac",
        "filename": "lib/reduce/reduce.c",
        "patchSetId": 11
      },
      "lineNbr": 404,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2019-07-11T15:01:52Z",
      "side": 1,
      "message": "how? the 2nd condition in the if isn\u0027t evaluated if the first is false so the decrement doesn\u0027t happen. Is that what you mean?",
      "parentUuid": "9cfa8f42_2d8f820e",
      "range": {
        "startLine": 404,
        "startChar": 6,
        "endLine": 404,
        "endChar": 32
      },
      "revId": "c603fdf4e320006fa1e7b95855801aa461aa24a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6fae8e30_4eb404ba",
        "filename": "lib/reduce/reduce.c",
        "patchSetId": 11
      },
      "lineNbr": 404,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-07-12T00:13:03Z",
      "side": 1,
      "message": "Hi Paul, I\u0027m late to join and very preliminary question.\nYour intention is that if vol-\u003eparams.vol_size is 0, g_vol_count should also be 0 here?\nSo we can add assert((vol-\u003eparams.vol_size \u003e 0) \u003d\u003d (g_vol_count \u003e 0)) here before decrementing g_vol_count?",
      "parentUuid": "0a4d6a1e_5541ebac",
      "range": {
        "startLine": 404,
        "startChar": 6,
        "endLine": 404,
        "endChar": 32
      },
      "revId": "c603fdf4e320006fa1e7b95855801aa461aa24a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46f133c0_694779db",
        "filename": "lib/reduce/reduce.c",
        "patchSetId": 11
      },
      "lineNbr": 404,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2019-07-12T00:35:32Z",
      "side": 1,
      "message": "Not actually.  When the bdev module gets an examine is tries to load it as a compressdev volume which will fail because it won\u0027t have a signature and this routine will be called to cleaned the examination.  The difference between coming through here with a real compresssdev vol that is being deleted vs a non-compressdev vol that is being examines is that the volsize will be \u003e0 for a real one.  So, I only want to decrement the g_vol_count if I\u0027m cleaning up after a real vol delete (or unload) so I only decrement if the first condition is true and if it is, and we\u0027re down to 0 on the vol count, then its time to free the buffer.  Hope that makes sense, thanks for reviewing :)",
      "parentUuid": "6fae8e30_4eb404ba",
      "range": {
        "startLine": 404,
        "startChar": 6,
        "endLine": 404,
        "endChar": 32
      },
      "revId": "c603fdf4e320006fa1e7b95855801aa461aa24a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}