{
  "comments": [
    {
      "key": {
        "uuid": "067a24a1_05cf2f3b",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 42
      },
      "lineNbr": 1379,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-01-25T17:51:04Z",
      "side": 1,
      "message": "You can\u0027t sync out the blob\u0027s metadata until the new cluster data is written. If you lose power after the sync but before the data is written, you\u0027ll end up with data corruption.",
      "revId": "1c0cb2a31d5d19bc712c1ad7063a24676ec04c8e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac2c06f3_b328e22c",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 42
      },
      "lineNbr": 1379,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-01-25T18:01:45Z",
      "side": 1,
      "message": "Talked with Ben on IRC (you probably saw it) - let\u0027s squash the next patch with this one, so we don\u0027t have the data corruption bug on this patch.\n\nI know I originally asked you to make it a separate patch - I think that was good for us to do the initial reviews but now I think it makes sense to merge them.",
      "parentUuid": "067a24a1_05cf2f3b",
      "revId": "1c0cb2a31d5d19bc712c1ad7063a24676ec04c8e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9dd36ff3_e4d200b7",
        "filename": "lib/blob/request.c",
        "patchSetId": 42
      },
      "lineNbr": 485,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-01-25T17:51:04Z",
      "side": 1,
      "message": "This is only a valid operation if the batch has no outstanding ops. Otherwise, sequences completing can trounce the memory that tracks batch operations. You should verify outstanding ops is 0 here, then return a sequence without incrementing outstanding ops.",
      "revId": "1c0cb2a31d5d19bc712c1ad7063a24676ec04c8e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "018366c8_83a73f13",
        "filename": "lib/blob/request.c",
        "patchSetId": 42
      },
      "lineNbr": 485,
      "author": {
        "id": 1011262
      },
      "writtenOn": "2018-01-26T12:38:40Z",
      "side": 1,
      "message": "I treat that newly created sequence as one batch operation. In spdk_bs_sequence_to_batch_completion function I decrease outstanding_ops as if the batch operation finished. I think that we can end up with situation where we have some batch operations and our batch to sequence operation... When other batch operations finish they will call callback despite our sequence is still in progress (outstanding_ops \u003d\u003d 0) and after sequence is done we will call same callback again in spdk_bs_sequence_to_batch_completion function.\nPlease let me know if my understanding of this is incorrect.",
      "parentUuid": "9dd36ff3_e4d200b7",
      "revId": "1c0cb2a31d5d19bc712c1ad7063a24676ec04c8e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}