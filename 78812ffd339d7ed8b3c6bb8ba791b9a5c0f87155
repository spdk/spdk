{
  "comments": [
    {
      "key": {
        "uuid": "5b4e0245_fc485e35",
        "filename": "test/rpc_client/rpc_client_test.c",
        "patchSetId": 18
      },
      "lineNbr": 179,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-01-10T08:59:56Z",
      "side": 1,
      "message": "This retry is intentional? Will you help me to understand this error handling and the next assert?",
      "range": {
        "startLine": 179,
        "startChar": 0,
        "endLine": 179,
        "endChar": 92
      },
      "revId": "78812ffd339d7ed8b3c6bb8ba791b9a5c0f87155",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "487fbb70_81fb9f5a",
        "filename": "test/rpc_client/rpc_client_test.c",
        "patchSetId": 18
      },
      "lineNbr": 179,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-01-10T09:53:09Z",
      "side": 1,
      "message": "Hmmm - I was looking at this earlier and thought I understood what it was trying to do.  But now I\u0027m not so sure.  So now I have the same question as Shuhei.\n\nI\u0027m thinking this should just return an error if rc !\u003d 0 - what is the case where the call on line 176 should return something besides 0?",
      "parentUuid": "5b4e0245_fc485e35",
      "range": {
        "startLine": 179,
        "startChar": 0,
        "endLine": 179,
        "endChar": 92
      },
      "revId": "78812ffd339d7ed8b3c6bb8ba791b9a5c0f87155",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2748dd80_74d47f7f",
        "filename": "test/rpc_client/rpc_client_test.c",
        "patchSetId": 18
      },
      "lineNbr": 179,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-01-10T09:55:01Z",
      "side": 1,
      "message": "If this should be changed, I\u0027m OK checking this in as-is for now instead of rebasing the entire patch series.",
      "parentUuid": "487fbb70_81fb9f5a",
      "range": {
        "startLine": 179,
        "startChar": 0,
        "endLine": 179,
        "endChar": 92
      },
      "revId": "78812ffd339d7ed8b3c6bb8ba791b9a5c0f87155",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6cbbef4_7a5b68fe",
        "filename": "test/rpc_client/rpc_client_test.c",
        "patchSetId": 18
      },
      "lineNbr": 179,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2019-01-10T13:52:54Z",
      "side": 1,
      "message": "yeah, I think I fixed this in one of the patch series but I\u0027ve rebased this series so many times that this fix was lost somehow. This should be \n\n  ...\n  rc \u003d spdk_jsonrpc_conn_add_close_cb(conn, rpc_test_conn_close_cb, (void *)(intptr_t)(42));\n  if (rc !\u003d 0) {\n    spdk_jsonrpc_send_error_response( ... );\n    return;\n  }\n  \n  rc \u003d spdk_jsonrpc_conn_add_close_cb(conn,  rpc_test_conn_close_cb, (void *)(intptr_t)(42));\n  if (rc !\u003d -ENOSPC) {\n    spdk_jsonrpc_conn_del_close_cb( ... )\n    spdk_jsonrpc_send_error_response( ... );\n    return\n  }\n  ...\n\nThis is not critical. I will fix this. in separate patch.",
      "parentUuid": "2748dd80_74d47f7f",
      "range": {
        "startLine": 179,
        "startChar": 0,
        "endLine": 179,
        "endChar": 92
      },
      "revId": "78812ffd339d7ed8b3c6bb8ba791b9a5c0f87155",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}