{
  "comments": [
    {
      "key": {
        "uuid": "9d4a791d_bea06c46",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 32
      },
      "lineNbr": 71,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-02-06T18:23:40Z",
      "side": 1,
      "message": "let\u0027s pick a compress-specific name here so it doesn\u0027t conflict with the one in vbdev_crypto.c (for gdb/debugging purposes)",
      "revId": "3e452c8bd79ad4019d103e5300dffd6bfc445cf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "340aeb91_341ac83c",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 32
      },
      "lineNbr": 83,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-02-06T18:23:40Z",
      "side": 1,
      "message": "this line and next line refer to \"node\" - what does node mean in this context?\n\n(I know a lot of this is copied from the crypto code - I guess I glossed over that when reviewing the crypto code way back when.)\n\nand is \"qp\" the queue pair index from the associated device pointer?",
      "revId": "3e452c8bd79ad4019d103e5300dffd6bfc445cf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1d479f5_6e8dd388",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 32
      },
      "lineNbr": 121,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-02-06T09:01:49Z",
      "side": 1,
      "message": "Use tab for the following three variables?",
      "revId": "3e452c8bd79ad4019d103e5300dffd6bfc445cf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83b6767a_ac9eb30f",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 32
      },
      "lineNbr": 138,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-02-06T18:23:40Z",
      "side": 1,
      "message": "instead of struct vbdev_dev - would compress_dev be better?  just to make it clear this is not related to creating a vbdev\n\nit would resolve the naming conflict mentioned above - it might also be slightly clearer, when I was first reading this, I was trying to figure out where the vbdev was getting created but then realized it\u0027s the \"dev\" (compress dev) that\u0027s actually getting \"created\"",
      "revId": "3e452c8bd79ad4019d103e5300dffd6bfc445cf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a4f9aeb_c7c383ba",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 32
      },
      "lineNbr": 142,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-02-06T09:01:49Z",
      "side": 1,
      "message": "you can use i :-)",
      "range": {
        "startLine": 142,
        "startChar": 9,
        "endLine": 142,
        "endChar": 10
      },
      "revId": "3e452c8bd79ad4019d103e5300dffd6bfc445cf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32e8eb85_02152e21",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 32
      },
      "lineNbr": 366,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-02-06T18:23:40Z",
      "side": 1,
      "message": "I think you can remove this comment - below, you already reroute the I/O before it would go down the get_buf_cb path",
      "revId": "3e452c8bd79ad4019d103e5300dffd6bfc445cf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc468caa_7be07933",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 32
      },
      "lineNbr": 460,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-02-06T18:23:40Z",
      "side": 1,
      "message": "it shouldn\u0027t be possible to get down this route from anything but the reduce thread",
      "revId": "3e452c8bd79ad4019d103e5300dffd6bfc445cf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f453818d_b7271abf",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 32
      },
      "lineNbr": 588,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-02-06T18:23:40Z",
      "side": 1,
      "message": "I think you need to check comp_bdev-\u003ereduce_ch at the beginning - if this is the second channel for the bdev, it won\u0027t need a queue pair, since it will be sending all of its requests to the reduce_ch\u0027s thread",
      "revId": "3e452c8bd79ad4019d103e5300dffd6bfc445cf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebc21ceb_c932d21c",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 32
      },
      "lineNbr": 599,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-02-06T09:01:49Z",
      "side": 1,
      "message": "Is it possible for this case to return error?",
      "range": {
        "startLine": 599,
        "startChar": 1,
        "endLine": 599,
        "endChar": 28
      },
      "revId": "3e452c8bd79ad4019d103e5300dffd6bfc445cf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "161fecdb_4f1d836f",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 32
      },
      "lineNbr": 604,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-02-06T18:23:40Z",
      "side": 1,
      "message": "you\u0027ll need a lock here - we could have multiple threads creating channels in parallel\n\nlib/bdev/iscsi/bdev_iscsi.c is a good example",
      "revId": "3e452c8bd79ad4019d103e5300dffd6bfc445cf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2678bd4b_fe2d8765",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 32
      },
      "lineNbr": 607,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-02-06T18:23:40Z",
      "side": 1,
      "message": "you should be able to just do comp_bdev-\u003ereduce_thread \u003d spdk_get_thread() here",
      "revId": "3e452c8bd79ad4019d103e5300dffd6bfc445cf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b9628e8_b796e877",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 32
      },
      "lineNbr": 630,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-02-06T18:23:40Z",
      "side": 1,
      "message": "this will be too racy - we could have other channels actively using the reduce_thread here\n\nI\u0027m not sure you need to worry about doing this extra work.  I think the method bdev/iscsi uses will work.  See how it does the ch_count - you can do something similar here.\n\n(And as I look at the bdev/iscsi code - I notice the master_ch part isn\u0027t even needed there - it\u0027s unused.  The important context is kept in the lun itself - which in your case is just the vbdev_compress.)",
      "revId": "3e452c8bd79ad4019d103e5300dffd6bfc445cf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53a711c7_c556723a",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 32
      },
      "lineNbr": 729,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-02-06T18:23:40Z",
      "side": 1,
      "message": "I\u0027m fine with this.",
      "revId": "3e452c8bd79ad4019d103e5300dffd6bfc445cf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d8aed07_ef6e0590",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 32
      },
      "lineNbr": 750,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-02-06T18:23:40Z",
      "side": 1,
      "message": "maybe comment that some of the field below will change in the future - for example, blockcnt specifically will not match (the compressed volume size will be slightly less than the base bdev size)",
      "revId": "3e452c8bd79ad4019d103e5300dffd6bfc445cf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5e6bdeb_14f4f58b",
        "filename": "lib/bdev/compress/vbdev_compress.c",
        "patchSetId": 32
      },
      "lineNbr": 780,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-02-06T09:01:49Z",
      "side": 1,
      "message": "spdk_bdev_module_release_bdev(comp_bdev-\u003ebase_bdev) should be called in this case?",
      "range": {
        "startLine": 780,
        "startChar": 7,
        "endLine": 780,
        "endChar": 27
      },
      "revId": "3e452c8bd79ad4019d103e5300dffd6bfc445cf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed854892_b7a7f55c",
        "filename": "lib/bdev/compress/vbdev_compress.h",
        "patchSetId": 32
      },
      "lineNbr": 51,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-02-06T18:23:40Z",
      "side": 1,
      "message": "should this be specified by the user via RPC?\n\nI\u0027m just thinking about the case where a compressed volume is moved from one system to another.  We could save the PMD info in the metadata, but there\u0027s no guarantee that PMD will be available next time user loads that bdev.",
      "revId": "3e452c8bd79ad4019d103e5300dffd6bfc445cf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}