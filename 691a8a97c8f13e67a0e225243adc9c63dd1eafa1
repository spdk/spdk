{
  "comments": [
    {
      "key": {
        "uuid": "9c9f8ad1_6a5d95a8",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 4
      },
      "lineNbr": 4226,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-09-30T08:15:31Z",
      "side": 1,
      "message": "Should we copy desc-\u003ecallback.event_fn to a local variable and use it before unlocking mutex?",
      "range": {
        "startLine": 4226,
        "startChar": 3,
        "endLine": 4226,
        "endChar": 26
      },
      "revId": "691a8a97c8f13e67a0e225243adc9c63dd1eafa1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b1e247a_01efc1c6",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 4
      },
      "lineNbr": 4226,
      "author": {
        "id": 1015209
      },
      "writtenOn": "2019-09-30T11:04:43Z",
      "side": 1,
      "message": "Callbacks are only set at bdev open. They can not change here between mutex unlock and actual call.",
      "parentUuid": "9c9f8ad1_6a5d95a8",
      "range": {
        "startLine": 4226,
        "startChar": 3,
        "endLine": 4226,
        "endChar": 26
      },
      "revId": "691a8a97c8f13e67a0e225243adc9c63dd1eafa1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "265c05ef_11fa1ff8",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 4
      },
      "lineNbr": 4226,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-09-30T12:26:24Z",
      "side": 1,
      "message": "Hi Eugene,\n\nI\u0027m sorry for my unclear comment.\nWhat I wanted to say was:\n- desc-\u003eref \u003d 2\n- thread 1 calls _remove_notify() but its callback is not called yet.\n- thread 2 calls _remove_notify() and then frees desc by spdk_bdev_desc_fini().\n- the freed desc is reused by other malloc().\n- thread 1 then calls its callback, but desc was already freed, and so the function pointer is not ensured.\n\nIs this case probable? If probable, we have to copy desc-\u003ecallback.event_fn, desc-\u003ebdev, and desc-\u003ecallback.ctx to local variables.\n\nI\u0027m afraid I overlooked the key logic.\n\n-Shuhei",
      "parentUuid": "1b1e247a_01efc1c6",
      "range": {
        "startLine": 4226,
        "startChar": 3,
        "endLine": 4226,
        "endChar": 26
      },
      "revId": "691a8a97c8f13e67a0e225243adc9c63dd1eafa1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14fe4218_85f5624a",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 4
      },
      "lineNbr": 4226,
      "author": {
        "id": 1015209
      },
      "writtenOn": "2019-09-30T12:42:06Z",
      "side": 1,
      "message": "_remove_notify is always called on the thread that opened descriptor. It is even impossible that two _remove_notify messages will be generated, because they are sent under bdev mutex and \"status !\u003d REMOVING\" check (in spdk_bdev_unregister).\n\nWe can probably add assert(desc-\u003ethread \u003d\u003d spdk_get_thread()), like in spdk_bdev_close.\nThis will serve as additional enforcement and documentation. What do you think?",
      "parentUuid": "265c05ef_11fa1ff8",
      "range": {
        "startLine": 4226,
        "startChar": 3,
        "endLine": 4226,
        "endChar": 26
      },
      "revId": "691a8a97c8f13e67a0e225243adc9c63dd1eafa1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d56b474b_ab479a56",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 4
      },
      "lineNbr": 4226,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-09-30T12:53:22Z",
      "side": 1,
      "message": "Thank you so much, Eugene. I understand now. I donâ€™t think additional assert is necessary",
      "parentUuid": "14fe4218_85f5624a",
      "range": {
        "startLine": 4226,
        "startChar": 3,
        "endLine": 4226,
        "endChar": 26
      },
      "revId": "691a8a97c8f13e67a0e225243adc9c63dd1eafa1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21ef25b5_97b596b4",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 4
      },
      "lineNbr": 4228,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-09-30T08:15:31Z",
      "side": 1,
      "message": "same as above?",
      "range": {
        "startLine": 4228,
        "startChar": 3,
        "endLine": 4228,
        "endChar": 28
      },
      "revId": "691a8a97c8f13e67a0e225243adc9c63dd1eafa1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5fedc56_273ddb38",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 4
      },
      "lineNbr": 4231,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-10-01T22:38:35Z",
      "side": 1,
      "message": "let\u0027s add a comment here - just to make it clearer next time someone reads this function - something like:\n\n/* This descriptor was closed after this remove_notify message was sent.  spdk_bdev_close()\n * could not free the descriptor since this message was in flight, so we free it now using\n * _spdk_bdev_desc_free().\n */",
      "revId": "691a8a97c8f13e67a0e225243adc9c63dd1eafa1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05e90feb_b7006d80",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 4
      },
      "lineNbr": 4231,
      "author": {
        "id": 1015209
      },
      "writtenOn": "2019-10-02T10:11:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d5fedc56_273ddb38",
      "revId": "691a8a97c8f13e67a0e225243adc9c63dd1eafa1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a249f10_b6167d7b",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 4
      },
      "lineNbr": 4321,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-10-01T22:38:35Z",
      "side": 1,
      "message": "a few nits:\n\n1) let\u0027s define this function before it\u0027s used the first time, to avoid the extra function declaration\n2) add _ to beginning of the function name - that indicates internally to this file that it\u0027s a static function (not part of the public API)\n3) I think I would prefer _spdk_bdev_desc_free().  It makes it more clear at the calling sites what the function is doing.",
      "revId": "691a8a97c8f13e67a0e225243adc9c63dd1eafa1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2af49b3a_c4f2a435",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 4
      },
      "lineNbr": 4321,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-10-01T22:47:36Z",
      "side": 1,
      "message": "4) please change the line between return type and function name.",
      "parentUuid": "8a249f10_b6167d7b",
      "revId": "691a8a97c8f13e67a0e225243adc9c63dd1eafa1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebf1b74b_f7bdddd8",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 4
      },
      "lineNbr": 4321,
      "author": {
        "id": 1015209
      },
      "writtenOn": "2019-10-02T10:11:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2af49b3a_c4f2a435",
      "revId": "691a8a97c8f13e67a0e225243adc9c63dd1eafa1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}