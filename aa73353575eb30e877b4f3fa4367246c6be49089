{
  "comments": [
    {
      "key": {
        "uuid": "52da3488_6923175c",
        "filename": "lib/blob/bdev/blob_bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1011221
      },
      "writtenOn": "2018-08-28T07:31:51Z",
      "side": 1,
      "message": "There won\u0027t be need to declare this function here, if bdev_blob_resubmit() would be put just above bdev_blob_queue_io()",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 61,
        "endChar": 39
      },
      "revId": "aa73353575eb30e877b4f3fa4367246c6be49089",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "848b14c4_2b9cf8e1",
        "filename": "lib/blob/bdev/blob_bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1011211
      },
      "writtenOn": "2018-08-28T11:31:41Z",
      "side": 1,
      "message": "Then, I would have to declare:\nbdev_blob_readv\nbdev_blob_read\nbdev_blob_writev\nbdev_blob_write\nbdev_blob_write_zeroes\nbdev_blob_unmap",
      "parentUuid": "52da3488_6923175c",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 61,
        "endChar": 39
      },
      "revId": "aa73353575eb30e877b4f3fa4367246c6be49089",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9741c2ea_4997ed62",
        "filename": "lib/blob/bdev/blob_bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1011221
      },
      "writtenOn": "2018-08-28T13:05:42Z",
      "side": 1,
      "message": "You are right, sorry.",
      "parentUuid": "848b14c4_2b9cf8e1",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 61,
        "endChar": 39
      },
      "revId": "aa73353575eb30e877b4f3fa4367246c6be49089",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c566ecd_6e094c3d",
        "filename": "lib/blob/bdev/blob_bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 100,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-08-29T21:53:19Z",
      "side": 1,
      "message": "I was hoping we could do this without having to do a calloc.  The idea behind bdev_io_wait is that even though we couldn\u0027t allocate a bdev_io, we don\u0027t have to worry about another failure allocating the blob_resubmit structure.\n\nBut I\u0027m looking at this further, and doing this without doing a calloc here is going to be a TON of work.\n\nThe main problems are blobstore batches.  For a batch, we use a single spdk_bs_request_set object, and just count how many operations need to be completed before the batch is done.  This is used for things like unmapping a bunch of clusters in parallel when a blob is truncated/deleted.  If a blob has 200 clusters, we do 200 unmap operations in parallel.\n\nSo what if 100 of these operations fail because of -ENOMEM from the bdev layer?  We would need 100 spdk_bdev_io_wait structures.  That defeats the whole purpose of the batch.\n\nSo then we would need to go back and rework how we do batches.  We would effectively need to stop submitting a batch part way through (when we get an -ENOMEM) and then restart it when we get the bdev_io_wait callback.  But of course all of this has to be abstracted so that we don\u0027t pollute blobstore.c with bdev_io_wait details.\n\nI\u0027ve talked about this with Ben, and for now, we think this approach is definitely way better than nothing.",
      "revId": "aa73353575eb30e877b4f3fa4367246c6be49089",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "990d56ca_5d7767b9",
        "filename": "lib/blob/bdev/blob_bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 102,
      "author": {
        "id": 1011221
      },
      "writtenOn": "2018-08-28T07:31:51Z",
      "side": 1,
      "message": "\u003e I don\u0027t think new line is needed here.",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 102,
        "endChar": 19
      },
      "revId": "aa73353575eb30e877b4f3fa4367246c6be49089",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ccd6ba47_0f79aba2",
        "filename": "lib/blob/bdev/blob_bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 102,
      "author": {
        "id": 1011211
      },
      "writtenOn": "2018-08-28T11:31:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "990d56ca_5d7767b9",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 102,
        "endChar": 19
      },
      "revId": "aa73353575eb30e877b4f3fa4367246c6be49089",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b772b233_5ef4dab9",
        "filename": "lib/blob/bdev/blob_bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 122,
      "author": {
        "id": 1011221
      },
      "writtenOn": "2018-08-28T07:31:51Z",
      "side": 1,
      "message": "\u003e Remove new line",
      "range": {
        "startLine": 120,
        "startChar": 0,
        "endLine": 122,
        "endChar": 15
      },
      "revId": "aa73353575eb30e877b4f3fa4367246c6be49089",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2fa8624_1de6c63c",
        "filename": "lib/blob/bdev/blob_bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 122,
      "author": {
        "id": 1011211
      },
      "writtenOn": "2018-08-28T11:31:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b772b233_5ef4dab9",
      "range": {
        "startLine": 120,
        "startChar": 0,
        "endLine": 122,
        "endChar": 15
      },
      "revId": "aa73353575eb30e877b4f3fa4367246c6be49089",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b27f465_d0fb3fac",
        "filename": "lib/blob/bdev/blob_bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 123,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-08-29T21:53:19Z",
      "side": 1,
      "message": "Qeueue \u003d\u003e Queue",
      "revId": "aa73353575eb30e877b4f3fa4367246c6be49089",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb5b8951_57da903b",
        "filename": "lib/blob/bdev/blob_bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 125,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-08-29T21:53:19Z",
      "side": 1,
      "message": "You should also put an assert(false) here.\n\nspdk_bdev_queue_io_wait will only return error if there is a programming error:\n\n1) bdev parameter does not match bdev_io_wait_entry-\u003ebdev\n2) there are bdev io available in the per thread cache\n\nYou\u0027ve already done #1.  #2 will never happen because you call this function immediately after getting -ENOMEM from a bdev call.",
      "revId": "aa73353575eb30e877b4f3fa4367246c6be49089",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}