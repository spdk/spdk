{
  "comments": [
    {
      "key": {
        "uuid": "8d2ba32a_86c9b4df",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "You can drop the [RFC] from the subject so that the automated tests will run (nothing will specifically test this module yet, but that way we can at least get compiler warnings, scripts/check_format.sh output, etc.).",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb91ae95_742fd3e6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-05-08T19:50:36Z",
      "side": 1,
      "message": "Pls follow commit message rules.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 24,
        "endChar": 116
      },
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bca8f07a_abbebe55",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "To elaborate a little bit on Pawel\u0027s request, please make sure the first line (subject) is something like \"bdev: add pooled volume module\", followed by a blank line to separate the subject from the rest of the commit message.  The body of the commit message should also typically be wrapped at 72 columns.",
      "parentUuid": "fb91ae95_742fd3e6",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 24,
        "endChar": 116
      },
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdeb678a_235a9162",
        "filename": "lib/bdev/pvol/Makefile",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2018-05-08T20:33:19Z",
      "side": 1,
      "message": "bdev_pvol --\u003e vbdev_pool",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfa1b2b8_7af4b638",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "Please make sure source files are not marked executable (this should be mode 100644, not 100755).",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13e192aa_753b9523",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2018-05-08T20:33:19Z",
      "side": 1,
      "message": "you can remove this first (c) from wherever you are using it",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1747879f_bc160537",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "This could probably use the SPDK tracepoint infrastructure (see include/spdk/trace.h).",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff7a325a_72f927c1",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "SPDK_DEBUGLOG is already compiled out in non-debug builds, so I think it would be clearer to just use SPDK_DEBUGLOG() directly.",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23110bee_da77ff0d",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "This should probably be static (same for all of the variables below) unless it really needs to be used outside this file, in which case it needs to have an spdk_ prefix to avoid polluting the global namespace.",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "165f955d_b4e1f326",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-05-08T19:50:36Z",
      "side": 1,
      "message": "__builtin_popcount() ?",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 96,
        "endChar": 1
      },
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7c03b3c_844794fe",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-05-08T19:50:36Z",
      "side": 1,
      "message": "Just \"waitq\" will be more than enought as variable name.",
      "range": {
        "startLine": 110,
        "startChar": 31,
        "endLine": 110,
        "endChar": 49
      },
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9526df_6b526cc8",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2018-05-08T20:33:19Z",
      "side": 1,
      "message": "assume this is temp and you\u0027ll get around to graceful error handling for all error paths",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eaff01ee_9cbe350b",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "Agreed - we don\u0027t want to introduce any new assert()/abort()/... on error paths, so any function that can have a failure like this should have a return value, and that return code needs to be checked by its callers, all the way up the chain.",
      "parentUuid": "1a9526df_6b526cc8",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "542f127b_3606d1bb",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2018-05-08T20:33:19Z",
      "side": 1,
      "message": "I might be wrong but I don\u0027t think you need this hwoever I *do* think you need it for the per IO context that you get with each bdev_io.",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5249a51d_0e3b9aa5",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "Same as above - any error path that can actually be reached in practice (not due to programming error) needs to propagate the error back up the call stack, not just assert.",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4df78b02_e83ba694",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-05-08T19:50:36Z",
      "side": 1,
      "message": "Using \"i\" is more common. I think...",
      "range": {
        "startLine": 188,
        "startChar": 9,
        "endLine": 188,
        "endChar": 13
      },
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "908bad12_266d33f0",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 729,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2018-05-08T20:33:19Z",
      "side": 1,
      "message": "I had another question about the context structure somwhere but this reminds me of it again.  If you set the ctxt element of the vbdev that you register to the address of the vbdev that\u0027s what you\u0027ll get back here as a parm and elsewhere.  Somewhere I think I saw some CONTAINER_OF macros that you might not need (simplify) if you don\u0027t really need the separate context structure.\n\nI certainly don\u0027t have a complete grasp of everything you\u0027re doing here yet so keep that in mind :)",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44745dba_e01a0391",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 776,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "Please don\u0027t use strcat() - it has no bounds checking.",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f8f1b20_0cab8a27",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 777,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "Why does this need to be trimmed? It shouldn\u0027t have any leading/trailing spaces, since you just built it up out of strings that have no spaces in them.\n\nAlso, if I\u0027m reading it correctly, this whole sequence could just be:\n\n   spdk_json_write_name(w, \"base_bdev_%u_name\", iter);\n\nHowever, it would probably make more sense to just make this a JSON array of objects describing the base bdevs rather than encoding the index into the name of the field.",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef24684b_8e38cacd",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 795,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "Why are we writing something that is always \"NA\"? Can this just be removed for now?",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f91bb06d_6220b99e",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 1144,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "This doesn\u0027t match the name of the section used in the conf parsing, [Pvol].\n\nAlso, you can just omit the running_config function if it isn\u0027t implemented.",
      "range": {
        "startLine": 1144,
        "startChar": 20,
        "endLine": 1144,
        "endChar": 24
      },
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31027782_74d67b51",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 1368,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2018-05-08T20:33:19Z",
      "side": 1,
      "message": "I think mostly we use -ENOMEM consistently (and other standard errors) even when doing stuff interlay within modules",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a0ba8e9_0fc7cc27",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 1425,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2018-05-08T20:33:19Z",
      "side": 1,
      "message": "I\u0027m not toally following the structure linkeage - specifically what\u0027s the benefit to having the context structure?",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "703bad6b_bbdf7cdf",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 1444,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "This can probably just use spdk_u32log2().",
      "range": {
        "startLine": 1444,
        "startChar": 36,
        "endLine": 1444,
        "endChar": 57
      },
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03138759_57af601a",
        "filename": "lib/bdev/pvol/bdev_pvol.c",
        "patchSetId": 1
      },
      "lineNbr": 1458,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2018-05-08T20:33:19Z",
      "side": 1,
      "message": "you\u0027ll want to use spdk_vbdev_register() here, see the latest passthru example.  I used the bdev version early on and can\u0027t remember exactly when it came back to bite me, not a huge deal but it wasn\u0027t easy to track down for a newbie",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf0cdba0_384aacc6",
        "filename": "lib/bdev/pvol/bdev_pvol.h",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2018-05-08T20:33:19Z",
      "side": 1,
      "message": "you probably only need the one header file for this module, see comment in the other one",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3ba23d5_384de81e",
        "filename": "lib/bdev/pvol/bdev_pvol.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-05-08T19:50:36Z",
      "side": 1,
      "message": "Something could be added here.",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "330649c5_1608d134",
        "filename": "lib/bdev/pvol/bdev_pvol_internal.h",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "What is the reserved space for?\n\nThis structure is internal, so it doesn\u0027t matter if the size or layout changes between versions (there is no API compatibility concern).",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d30e7a5_86dac454",
        "filename": "lib/bdev/pvol/bdev_pvol_internal.h",
        "patchSetId": 1
      },
      "lineNbr": 165,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "Another reserved field that is probably not needed.",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6dcf68b_47ccedfd",
        "filename": "lib/bdev/pvol/bdev_pvol_internal.h",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "I don\u0027t think we want to hard-code a bdev name size limit (the rest of the bdev stack doesn\u0027t have any hard limits); can this just be a strdup\u0027d pointer instead?",
      "range": {
        "startLine": 174,
        "startChar": 42,
        "endLine": 174,
        "endChar": 66
      },
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24d98381_2d2c68aa",
        "filename": "lib/bdev/pvol/bdev_pvol_internal.h",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "I\u0027m not sure that we actually need this waitq concept; the generic bdev layer should handle cases where resources aren\u0027t available as long as all modules correctly return -ENOMEM for that situation.\n\nCan you expand on the scenarios that this is handling? Maybe we can extend the ENOMEM handling if it isn\u0027t currently sufficient.",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8053a96c_8c7ef926",
        "filename": "lib/bdev/pvol/bdev_pvol_rpc.c",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2018-05-08T20:33:19Z",
      "side": 1,
      "message": "you can remove \"internal\" from the name and put the header file in /include/spdk_internal instead if its shared between internal SPDK C files but not part of the external interface. If its just used by this module jsut keep it in this dir and remove the internal from the name",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ceac9076_ac62beab",
        "filename": "lib/bdev/pvol/bdev_pvol_rpc.c",
        "patchSetId": 1
      },
      "lineNbr": 358,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "If spdk_jsonrpc_begin_result() returns NULL, that could just mean that the user did not specify a request id, but we will skip the whole rest of the function.  This check should be right at the end of the RPC method before writing anything to w, not before the implementation of the method.",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61cea459_8b2e1271",
        "filename": "lib/bdev/pvol/bdev_pvol_rpc.c",
        "patchSetId": 1
      },
      "lineNbr": 398,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "strcpy() is not allowed since it doesn\u0027t do any bounds checks; please use snprintf(\"%s\") instead (and add checking for truncation) or just make this a pointer and use strdup().",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10215116_64fa683f",
        "filename": "lib/bdev/pvol/bdev_pvol_rpc.c",
        "patchSetId": 1
      },
      "lineNbr": 526,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "Please add handling for allocation failure here (not just assert).",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b55a2a6d_41bf37e7",
        "filename": "lib/bdev/pvol/bdev_pvol_rpc.c",
        "patchSetId": 1
      },
      "lineNbr": 529,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "The (void *) cast should not be necessary.",
      "range": {
        "startLine": 529,
        "startChar": 129,
        "endLine": 529,
        "endChar": 136
      },
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b11fbb15_a051f9ee",
        "filename": "mk/spdk.modules.mk",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2018-05-08T20:33:19Z",
      "side": 1,
      "message": "bdev_pvol --\u003e vbdev_pvol",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53b2b431_a568ba94",
        "filename": "scripts/rpc.py",
        "patchSetId": 1
      },
      "lineNbr": 638,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-05-08T22:07:00Z",
      "side": 1,
      "message": "Long argument names should have dashes, not underscores (Python argparse will convert to underscores automatically in the args object).",
      "range": {
        "startLine": 638,
        "startChar": 28,
        "endLine": 638,
        "endChar": 38
      },
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a99088b1_b4e8e5e7",
        "filename": "test/unit/lib/bdev/bdev_pvol.c/bdev_pvol_ut.c",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2018-05-08T20:33:19Z",
      "side": 1,
      "message": "check out our UT mock library in lib/ut_mock/\n\nExamples are in a few places (its pretty new) including test/unit/lib/nvme/nvme.c/nvme_ut.c",
      "revId": "9bb45194318175859359aa83c8baf152913b2995",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}