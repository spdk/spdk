{
  "comments": [
    {
      "key": {
        "uuid": "6d4ff325_30a170d7",
        "filename": "include/spdk_internal/spdk_mock.h",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-06-30T16:53:17Z",
      "side": 1,
      "message": "other files in include/spdk_internal do not have an spdk prefix, so this file should probably be mock.h instead of spdk_mock.h",
      "revId": "ee1d1d145fffc1f7fc5b9956a7c5421f69d2e060",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a1619ee_951d6011",
        "filename": "test/unit/lib/nvme/nvme.c/nvme_ut.c",
        "patchSetId": 7
      },
      "lineNbr": 164,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-06-30T16:53:17Z",
      "side": 1,
      "message": "what if instead we created a MOCK_GET_STUB() macro?  then instead of needing this dummy proxy, you could DEFINE_STUB(probe_cb,xxx) and then do:\n\nMOCK_SET(probe_cb, bool, false)\nrc \u003d nvme_ctrlr_probe(trid, devhandle, MOCK_GET_STUB(probe_cb), cb_ctx);\n\nOr something like that...",
      "revId": "ee1d1d145fffc1f7fc5b9956a7c5421f69d2e060",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "863451f4_9766e668",
        "filename": "test/unit/lib/nvme/nvme.c/nvme_ut.c",
        "patchSetId": 7
      },
      "lineNbr": 166,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-06-30T16:53:17Z",
      "side": 1,
      "message": "In light of this patch starting to set the example for future unit tests - there should probably be at least a couple of lines of comments here explaining what is being tested here and why.",
      "revId": "ee1d1d145fffc1f7fc5b9956a7c5421f69d2e060",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81e082e9_a6a364bf",
        "filename": "test/unit/lib/nvme/nvme.c/nvme_ut.c",
        "patchSetId": 7
      },
      "lineNbr": 171,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-06-30T16:53:17Z",
      "side": 1,
      "message": "We use /* */ comment style consistently in SPDK.\n\n(Is there a way to get astyle to check for this?)",
      "revId": "ee1d1d145fffc1f7fc5b9956a7c5421f69d2e060",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ac1a5a3_f2d6d43e",
        "filename": "test/unit/lib/nvme/nvme.c/nvme_ut.c",
        "patchSetId": 7
      },
      "lineNbr": 197,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-06-30T16:53:17Z",
      "side": 1,
      "message": "Should these be 0 instead of MOCK_PASS?  We want to explicitly force this routine to return 0, not passthrough to the libc call.  MOCK_PASS will work  but using 0 keeps the exact same test behavior.\n\nSimilarly for others below.",
      "revId": "ee1d1d145fffc1f7fc5b9956a7c5421f69d2e060",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}