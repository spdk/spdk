{
  "comments": [
    {
      "key": {
        "uuid": "1a0a3ae5_3f1519c8",
        "filename": "lib/bdev/crypto/vbdev_crypto.c",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2019-01-09T22:32:49Z",
      "side": 1,
      "message": "I think you mean \"at most 2 mbufs\" not crypto operations per src \u0026 dst",
      "revId": "cc08f6fc562287ba0c22ce4d846b14be5bdc8469",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06709796_2a760b74",
        "filename": "lib/bdev/crypto/vbdev_crypto.c",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2019-01-10T10:10:02Z",
      "side": 1,
      "message": "If you\u0027re encrypting a single 4k block but both the src and dst buffer needs to be split, then you\u0027ll theoretically end up with 3 different rte_crypto_op.\n\nCould you elaborate on that comment? I didn\u0027t really get your point.",
      "parentUuid": "1a0a3ae5_3f1519c8",
      "revId": "cc08f6fc562287ba0c22ce4d846b14be5bdc8469",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "197c02a5_217fa75f",
        "filename": "lib/bdev/crypto/vbdev_crypto.c",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2019-01-10T15:15:50Z",
      "side": 1,
      "message": "I don\u0027t think we will ever need an extra crypto operation since all we\u0027re doing here is chaining more mbufs to the existing operation. I don\u0027t understand why you think we need an extra op?\n\nIf you take the case you just mentioned and walk through the code below I still only see one crypto_op for the 4K transfer with some number of src mbufs and some number of dst mbufs depending on how contiguous the src/dst blocks are.\n\nRight?",
      "parentUuid": "06709796_2a760b74",
      "revId": "cc08f6fc562287ba0c22ce4d846b14be5bdc8469",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64d9e7cf_7d81faf2",
        "filename": "lib/bdev/crypto/vbdev_crypto.c",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2019-01-10T15:32:48Z",
      "side": 1,
      "message": "Never mind.  I wrote this like 5 different ways including one that supported mbuf chaining which this one does not because it was simpler in that only QAT supports chaining but not AESNI.  Without chaining you are right, you need another crypto op.  Thinking out loud though, remember that the IV is the LBA and is associated with a crypto op.  So right now there is a 1:1 between crypto op, mbuf and IV.  If you split a block sized crpyto op into 2 crypto ops they\u0027re both going to get the same IV but I suppose that\u0027s OK because both crypto operations are operating on the same block just different memory offsets.  I assume that will work but don\u0027t know for sure of course.\n\nAnother approach would be to support chaining for QAT and not for AESNI.  AESNI never needs physical addresses so we don\u0027t have the problem there and with chaining we can just keep one crypto op and add as many src/dst buffers to it as needed to describe the non-contig buffer.  I can work on that when I\u0027m back if you like, I implemented once already a long time ago :)\n\nOr, we can try this as is.... adding chaining would also boost QAT performance",
      "parentUuid": "197c02a5_217fa75f",
      "revId": "cc08f6fc562287ba0c22ce4d846b14be5bdc8469",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7298a6d6_cabfe03f",
        "filename": "lib/bdev/crypto/vbdev_crypto.c",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2019-01-10T15:56:59Z",
      "side": 1,
      "message": "In _crypto_operation I still see the crypto_index incremented for every contiguous buffer (line #740). The crypto_len in that function describes the contiguous region which can be possibly smaller than a single block.bytes.",
      "parentUuid": "197c02a5_217fa75f",
      "revId": "cc08f6fc562287ba0c22ce4d846b14be5bdc8469",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a65ce60c_448a879a",
        "filename": "lib/bdev/crypto/vbdev_crypto.c",
        "patchSetId": 6
      },
      "lineNbr": 95,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2019-01-10T16:08:37Z",
      "side": 1,
      "message": "Oh ok, I missed your last message.",
      "parentUuid": "7298a6d6_cabfe03f",
      "revId": "cc08f6fc562287ba0c22ce4d846b14be5bdc8469",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "586a9aeb_454d5b9b",
        "filename": "lib/bdev/crypto/vbdev_crypto.c",
        "patchSetId": 6
      },
      "lineNbr": 103,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2019-01-09T22:32:49Z",
      "side": 1,
      "message": "this only controls the size of the arrays in the crypto submission function, technically you don\u0027t 3x as many crypto ops but no big deal.\n\nmbuf sizing is sort of a \"thumb it\" anyway but to account for the potential increase in number of mbufs allocated you need to change the define just below here",
      "revId": "cc08f6fc562287ba0c22ce4d846b14be5bdc8469",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dbfb117_cf764f2c",
        "filename": "lib/bdev/crypto/vbdev_crypto.c",
        "patchSetId": 6
      },
      "lineNbr": 603,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2019-01-09T22:32:49Z",
      "side": 1,
      "message": "get the crypto ops, src and dst mbufs",
      "revId": "cc08f6fc562287ba0c22ce4d846b14be5bdc8469",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6223fc8_06defa62",
        "filename": "lib/bdev/crypto/vbdev_crypto.c",
        "patchSetId": 6
      },
      "lineNbr": 603,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2019-01-10T10:10:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9dbfb117_cf764f2c",
      "revId": "cc08f6fc562287ba0c22ce4d846b14be5bdc8469",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fdd89ac_d531d9f4",
        "filename": "lib/bdev/crypto/vbdev_crypto.c",
        "patchSetId": 6
      },
      "lineNbr": 666,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2019-01-10T15:56:59Z",
      "side": 1,
      "message": "^ for the simplest case let\u0027s assume crypto_len is set exactly to blocklen in here.",
      "revId": "cc08f6fc562287ba0c22ce4d846b14be5bdc8469",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd893c02_091f7182",
        "filename": "lib/bdev/crypto/vbdev_crypto.c",
        "patchSetId": 6
      },
      "lineNbr": 671,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2019-01-10T15:56:59Z",
      "side": 1,
      "message": "^ crypto_len is shrinked to describe the biggest possible contiguous memory region in our src buffer.",
      "range": {
        "startLine": 671,
        "startChar": 73,
        "endLine": 671,
        "endChar": 83
      },
      "revId": "cc08f6fc562287ba0c22ce4d846b14be5bdc8469",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b14c85da_93e528e6",
        "filename": "lib/bdev/crypto/vbdev_crypto.c",
        "patchSetId": 6
      },
      "lineNbr": 678,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2019-01-10T15:56:59Z",
      "side": 1,
      "message": "^ we start initializing a crypto_op",
      "range": {
        "startLine": 678,
        "startChar": 37,
        "endLine": 678,
        "endChar": 61
      },
      "revId": "cc08f6fc562287ba0c22ce4d846b14be5bdc8469",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c7cd355_e3ba6bf7",
        "filename": "lib/bdev/crypto/vbdev_crypto.c",
        "patchSetId": 6
      },
      "lineNbr": 685,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2019-01-10T15:56:59Z",
      "side": 1,
      "message": "^ we link src buffer with the crypto op",
      "range": {
        "startLine": 685,
        "startChar": 2,
        "endLine": 685,
        "endChar": 38
      },
      "revId": "cc08f6fc562287ba0c22ce4d846b14be5bdc8469",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69ff6dcf_6ed97d5f",
        "filename": "lib/bdev/crypto/vbdev_crypto.c",
        "patchSetId": 6
      },
      "lineNbr": 687,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2019-01-10T15:56:59Z",
      "side": 1,
      "message": "(This is actually a NOP since we override crypto_op-\u003em_dst in line #703.)",
      "revId": "cc08f6fc562287ba0c22ce4d846b14be5bdc8469",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73452a48_43033187",
        "filename": "lib/bdev/crypto/vbdev_crypto.c",
        "patchSetId": 6
      },
      "lineNbr": 701,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2019-01-10T15:56:59Z",
      "side": 1,
      "message": "^ we shrink the crypto_len even more, it\u0027s now the smallest contiguous region of both src and dst buffers.",
      "range": {
        "startLine": 701,
        "startChar": 12,
        "endLine": 701,
        "endChar": 22
      },
      "revId": "cc08f6fc562287ba0c22ce4d846b14be5bdc8469",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "145cf276_bcb3a3ee",
        "filename": "lib/bdev/crypto/vbdev_crypto.c",
        "patchSetId": 6
      },
      "lineNbr": 703,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2019-01-10T15:56:59Z",
      "side": 1,
      "message": "^ we link dst buffer with the crypto op",
      "range": {
        "startLine": 703,
        "startChar": 3,
        "endLine": 703,
        "endChar": 39
      },
      "revId": "cc08f6fc562287ba0c22ce4d846b14be5bdc8469",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4e479c8_ff12f74b",
        "filename": "lib/bdev/crypto/vbdev_crypto.c",
        "patchSetId": 6
      },
      "lineNbr": 729,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2019-01-10T15:56:59Z",
      "side": 1,
      "message": "^ we set the crypto_op length to the biggest possible contiguous memory size - possibly 128, 512, or even something like 71.",
      "revId": "cc08f6fc562287ba0c22ce4d846b14be5bdc8469",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3bef9da_1965fe6e",
        "filename": "lib/bdev/crypto/vbdev_crypto.c",
        "patchSetId": 6
      },
      "lineNbr": 730,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2019-01-10T16:08:37Z",
      "side": 1,
      "message": "is this correct then, or should it be an offset within that crypto block size?",
      "range": {
        "startLine": 730,
        "startChar": 45,
        "endLine": 730,
        "endChar": 52
      },
      "revId": "cc08f6fc562287ba0c22ce4d846b14be5bdc8469",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6993788_1777d2ab",
        "filename": "lib/bdev/crypto/vbdev_crypto.c",
        "patchSetId": 6
      },
      "lineNbr": 740,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2019-01-10T15:56:59Z",
      "side": 1,
      "message": "^ increment the index, hence officially stop setting up that crypto_op and get to the next one",
      "range": {
        "startLine": 740,
        "startChar": 2,
        "endLine": 740,
        "endChar": 14
      },
      "revId": "cc08f6fc562287ba0c22ce4d846b14be5bdc8469",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}