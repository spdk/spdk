{
  "comments": [
    {
      "key": {
        "uuid": "996ee616_f0913f48",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 8
      },
      "lineNbr": 369,
      "author": {
        "id": 1014643
      },
      "writtenOn": "2019-01-28T10:02:35Z",
      "side": 1,
      "message": "ibv_pd is protection domain allocated for __device__ context. I think, it should stay in spdk_nvmf_rdma_device.",
      "revId": "119941a481f510375804a9805af6dede4974ad5b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0e63645_97df0dc6",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 8
      },
      "lineNbr": 369,
      "author": {
        "id": 1014643
      },
      "writtenOn": "2019-01-29T20:35:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "996ee616_f0913f48",
      "revId": "119941a481f510375804a9805af6dede4974ad5b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7934bddf_dc8f8bf2",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 8
      },
      "lineNbr": 1322,
      "author": {
        "id": 1014643
      },
      "writtenOn": "2019-01-28T10:02:35Z",
      "side": 1,
      "message": "What\u0027s a reason to change \"device\" to \"port\" ? Do you see any possibility that memory management capabilities will be different between ports on the same device?",
      "revId": "119941a481f510375804a9805af6dede4974ad5b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c43ae083_d1861d8e",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 8
      },
      "lineNbr": 1322,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2019-01-28T17:35:55Z",
      "side": 1,
      "message": "In Zahra\u0027s use case, there can potentially be different protection domains for different listen addresses. The protection domains and memory registrations are also done up front by their application for other reasons, hence this hook mechanism.\n\nThe \"hook\" API in the NVMe driver we defined wants the listen address passed as an argument to get the protection domain. In practice on the target side it will return the same protection domain for each listen address on the same ibv_context, but the initiator will use different ones for different addresses.\n\nTo allow for maximum flexibility, I suggested she move the pd/map to the port because technically that\u0027s allowed. I\u0027d consider moving it back to the device and just asserting that the hook always returns the same pd for a given ibv_context on the target side if there was a technical advantage for doing so. What do you think?",
      "parentUuid": "7934bddf_dc8f8bf2",
      "revId": "119941a481f510375804a9805af6dede4974ad5b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3272f23b_dbde824a",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 8
      },
      "lineNbr": 1322,
      "author": {
        "id": 1014643
      },
      "writtenOn": "2019-01-29T20:35:52Z",
      "side": 1,
      "message": "That\u0027s fine. Having PD per port needs some changes in SRQ feature (SRQ should be created per PD) But we will deal with that.",
      "parentUuid": "c43ae083_d1861d8e",
      "revId": "119941a481f510375804a9805af6dede4974ad5b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25970ed8_6c328737",
        "filename": "lib/nvmf/rdma.c",
        "patchSetId": 8
      },
      "lineNbr": 1942,
      "author": {
        "id": 1014643
      },
      "writtenOn": "2019-01-28T10:02:35Z",
      "side": 1,
      "message": "spdk_nvmf_rdma_listen can be called more than once ( for example, target listens on two ports).\nI think, nvmf_rdma_map_ops as global variable makes more sense than an object on stack.",
      "revId": "119941a481f510375804a9805af6dede4974ad5b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}