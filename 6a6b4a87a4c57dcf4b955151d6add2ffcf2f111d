{
  "comments": [
    {
      "key": {
        "uuid": "245c1dfa_bb9b35c8",
        "filename": "lib/nvme/nvme_ctrlr.c",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-10-02T02:07:53Z",
      "side": 1,
      "message": "this can be an assert() - it is not legal to pass NULL to this function - if someone does, we should let it crash instead of just returning silently",
      "revId": "6a6b4a87a4c57dcf4b955151d6add2ffcf2f111d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89a50d5d_51924e06",
        "filename": "lib/nvme/nvme_ctrlr.c",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2017-10-02T02:45:21Z",
      "side": 1,
      "message": "This is optional to the caller. If not specified, then use the default ctrlr opts configuration. In this case, it\u0027s OK to be NULL.",
      "parentUuid": "245c1dfa_bb9b35c8",
      "revId": "6a6b4a87a4c57dcf4b955151d6add2ffcf2f111d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e018a5dd_d26b60cf",
        "filename": "lib/nvme/nvme_ctrlr.c",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-10-02T18:15:36Z",
      "side": 1,
      "message": "Right - it\u0027s OK to pass NULL to a future spdk_nvme_connect() function to request default settings.  But there is no reason to call this function with a NULL opts pointer.",
      "parentUuid": "89a50d5d_51924e06",
      "revId": "6a6b4a87a4c57dcf4b955151d6add2ffcf2f111d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d75f6bf_0764217e",
        "filename": "lib/nvme/nvme_ctrlr.c",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2017-10-02T18:59:20Z",
      "side": 1,
      "message": "Yes. It shall be a valid opts here. Will add an assert() here. Same change for the default_io_qpair_opts()",
      "parentUuid": "e018a5dd_d26b60cf",
      "revId": "6a6b4a87a4c57dcf4b955151d6add2ffcf2f111d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9306993e_7fa5ac64",
        "filename": "lib/nvme/nvme_ctrlr.c",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-10-02T02:07:53Z",
      "side": 1,
      "message": "I don\u0027t understand this check.  If opts_size \u003d\u003d sizeof(*opts) then we do not need any of the FIELD_OK checks below.  Shouldn\u0027t this check be removed?",
      "revId": "6a6b4a87a4c57dcf4b955151d6add2ffcf2f111d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "523eb0b3_8864876d",
        "filename": "lib/nvme/nvme_ctrlr.c",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2017-10-02T02:45:21Z",
      "side": 1,
      "message": "In Daniel\u0027s comment at https://review.gerrithub.io/#/c/370634/17/lib/nvme/nvme.c@524\n\nThis is to be compatible with future shared libary. Also there is a note in the comments of this API, the opts_size shall be sizeof(spdk_nvme_ctrlr_opts). Add a check here to have the default value if the size check is not equal here. Just to be robust.\n\nMaybe my understanding is wrong and Daniel can comment on this. Also for the get_default_io_qpair_opts() handling.",
      "parentUuid": "9306993e_7fa5ac64",
      "revId": "6a6b4a87a4c57dcf4b955151d6add2ffcf2f111d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f561abb5_c4c8e26e",
        "filename": "lib/nvme/nvme_ctrlr.c",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-10-02T18:15:36Z",
      "side": 1,
      "message": "If user\u0027s binary was compiled with sizeof(opts) \u003d\u003d 20, but current sizeof(opts) \u003d\u003d 32, then we should still allow user to pass 20 for sizeof(opts).  Your FIELD_OK checks below make sure that we only fill in up to 20 bytes of data.",
      "parentUuid": "523eb0b3_8864876d",
      "revId": "6a6b4a87a4c57dcf4b955151d6add2ffcf2f111d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16f215d0_d3e26efa",
        "filename": "lib/nvme/nvme_ctrlr.c",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2017-10-02T20:25:33Z",
      "side": 1,
      "message": "Thanks for making this clear.",
      "parentUuid": "f561abb5_c4c8e26e",
      "revId": "6a6b4a87a4c57dcf4b955151d6add2ffcf2f111d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b0a6050_60656719",
        "filename": "test/unit/lib/nvme/nvme_ctrlr.c/nvme_ctrlr_ut.c",
        "patchSetId": 2
      },
      "lineNbr": 1418,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-10-02T02:07:53Z",
      "side": 1,
      "message": "we should not test passing a NULL opts pointer\n\nthink of it this way - we have many many functions which take pointers - we do not check all of them to see if any of the parameters are NULL - the expectation is that they are *not* NULL, unless there is some specific case where a NULL value would be useful\n\nin this case, that is not useful - just do not call this function if you do not have a pointer to an opts structure",
      "revId": "6a6b4a87a4c57dcf4b955151d6add2ffcf2f111d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77e6c5ac_5f2882e9",
        "filename": "test/unit/lib/nvme/nvme_ctrlr.c/nvme_ctrlr_ut.c",
        "patchSetId": 2
      },
      "lineNbr": 1418,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2017-10-02T02:55:56Z",
      "side": 1,
      "message": "If no user specified ctrlr opts here (i.e., NULL), the ctrlr will be initialized with default setting. This is to check this case.",
      "parentUuid": "3b0a6050_60656719",
      "revId": "6a6b4a87a4c57dcf4b955151d6add2ffcf2f111d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52b4d122_c1fe9471",
        "filename": "test/unit/lib/nvme/nvme_ctrlr.c/nvme_ctrlr_ut.c",
        "patchSetId": 2
      },
      "lineNbr": 1418,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-10-02T18:15:36Z",
      "side": 1,
      "message": "but no controllers are initialized here - this function is only initializing the opts structure",
      "parentUuid": "77e6c5ac_5f2882e9",
      "revId": "6a6b4a87a4c57dcf4b955151d6add2ffcf2f111d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db396c6c_92c3d977",
        "filename": "test/unit/lib/nvme/nvme_ctrlr.c/nvme_ctrlr_ut.c",
        "patchSetId": 2
      },
      "lineNbr": 1422,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-10-02T02:07:53Z",
      "side": 1,
      "message": "we should handle inconsistent opts sizes - at least where user passes in opts size smaller than expected",
      "revId": "6a6b4a87a4c57dcf4b955151d6add2ffcf2f111d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ea57369_c5e5cb5a",
        "filename": "test/unit/lib/nvme/nvme_ctrlr.c/nvme_ctrlr_ut.c",
        "patchSetId": 2
      },
      "lineNbr": 1422,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2017-10-02T20:25:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db396c6c_92c3d977",
      "revId": "6a6b4a87a4c57dcf4b955151d6add2ffcf2f111d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}