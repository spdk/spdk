{
  "comments": [
    {
      "key": {
        "uuid": "2c678634_93f0d54b",
        "filename": "examples/nvme/identify/identify.c",
        "patchSetId": 1
      },
      "lineNbr": 740,
      "author": {
        "id": 1011204
      },
      "writtenOn": "2019-02-27T10:02:22Z",
      "side": 1,
      "message": "I think this line is not required.",
      "range": {
        "startLine": 740,
        "startChar": 2,
        "endLine": 740,
        "endChar": 22
      },
      "revId": "71524cb31ab01fc49a2af5a584a6502749fc24c2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86a09d2d_a5038337",
        "filename": "examples/nvme/identify/identify.c",
        "patchSetId": 1
      },
      "lineNbr": 740,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2019-02-27T17:52:33Z",
      "side": 1,
      "message": "If the value is 0, then the field is considered invalid and the controller-level property (AWUN in this case) should be used instead. I debated whether to do an else here that printed out the AWUN value (which may not be 0) when NAWUN is 0, but instead I opted to just not print out the value at all.",
      "parentUuid": "2c678634_93f0d54b",
      "range": {
        "startLine": 740,
        "startChar": 2,
        "endLine": 740,
        "endChar": 22
      },
      "revId": "71524cb31ab01fc49a2af5a584a6502749fc24c2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b50669b6_d723ec38",
        "filename": "examples/nvme/identify/identify.c",
        "patchSetId": 1
      },
      "lineNbr": 744,
      "author": {
        "id": 1011204
      },
      "writtenOn": "2019-02-27T10:02:22Z",
      "side": 1,
      "message": "same here.",
      "range": {
        "startLine": 744,
        "startChar": 2,
        "endLine": 744,
        "endChar": 23
      },
      "revId": "71524cb31ab01fc49a2af5a584a6502749fc24c2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e8c4841_5c70d536",
        "filename": "examples/nvme/identify/identify.c",
        "patchSetId": 1
      },
      "lineNbr": 748,
      "author": {
        "id": 1011204
      },
      "writtenOn": "2019-02-27T10:02:22Z",
      "side": 1,
      "message": "same here.",
      "range": {
        "startLine": 748,
        "startChar": 2,
        "endLine": 748,
        "endChar": 22
      },
      "revId": "71524cb31ab01fc49a2af5a584a6502749fc24c2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8711535d_9c555938",
        "filename": "examples/nvme/identify/identify.c",
        "patchSetId": 1
      },
      "lineNbr": 752,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-02-28T16:22:16Z",
      "side": 1,
      "message": "are these fields (this one and next two) governed by nsfeat.ns_atomic_write_unit?  description of this bit in the 1.3 spec indicates it only governs NAWUN, NAWUPF and NACWU\n\nbut reading NABSN/NABO/NABSPF, these definitely refer only to the namespace-specific write unit parameters - so this is probably correct as you have it (seems like the ns_atomic_write_unit bit could be documented a bit more clearly)",
      "revId": "71524cb31ab01fc49a2af5a584a6502749fc24c2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2473084c_290039b9",
        "filename": "examples/nvme/identify/identify.c",
        "patchSetId": 1
      },
      "lineNbr": 753,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-02-28T16:22:16Z",
      "side": 1,
      "message": "is this 0-based?  NABSN description in the 1.3 spec doesn\u0027t say that it is",
      "revId": "71524cb31ab01fc49a2af5a584a6502749fc24c2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5c18de5_7e7d33c9",
        "filename": "examples/nvme/identify/identify.c",
        "patchSetId": 1
      },
      "lineNbr": 763,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-02-28T16:22:16Z",
      "side": 1,
      "message": "not sure this is 0-based either\n\nthe spec actually says that if NABSN and NABSPF are 0, then NABO must also be 0 - I think that\u0027s probably another hint that none of these boundary values are 0-based",
      "revId": "71524cb31ab01fc49a2af5a584a6502749fc24c2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}