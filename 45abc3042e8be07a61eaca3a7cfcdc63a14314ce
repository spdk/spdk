{
  "comments": [
    {
      "key": {
        "uuid": "69c061e7_a1fe7487",
        "filename": "include/spdk/bdev.h",
        "patchSetId": 16
      },
      "lineNbr": 1096,
      "author": {
        "id": 1011221
      },
      "writtenOn": "2019-01-02T08:46:48Z",
      "side": 1,
      "message": "Just to elaborate on previous comment.\nShouldn\u0027t all the handling of returned histogram be done within the provided callback ?",
      "range": {
        "startLine": 1096,
        "startChar": 9,
        "endLine": 1096,
        "endChar": 77
      },
      "revId": "45abc3042e8be07a61eaca3a7cfcdc63a14314ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d9f6564_bac74ad1",
        "filename": "include/spdk/bdev.h",
        "patchSetId": 16
      },
      "lineNbr": 1096,
      "author": {
        "id": 1011211
      },
      "writtenOn": "2019-01-03T08:38:17Z",
      "side": 1,
      "message": "Histogram provided in callback is allocated per each request. User can handle it synchronously or asynchronously. I don\u0027t think we should force user to handle it synchronously.",
      "parentUuid": "69c061e7_a1fe7487",
      "range": {
        "startLine": 1096,
        "startChar": 9,
        "endLine": 1096,
        "endChar": 77
      },
      "revId": "45abc3042e8be07a61eaca3a7cfcdc63a14314ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b03d4dd_d162b16c",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 16
      },
      "lineNbr": 1757,
      "author": {
        "id": 1014600
      },
      "writtenOn": "2019-01-02T08:56:03Z",
      "side": 1,
      "message": "Still, I\u0027m confused with relationship between shared_resource and histogram. In histogram creation, it seems that there is no relationship between shared_resource and histogram. So why we need to destroy histogram only when shared_resource-\u003eref \u003d\u003d 0?",
      "revId": "45abc3042e8be07a61eaca3a7cfcdc63a14314ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9d28d64_a571b4e1",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 16
      },
      "lineNbr": 1757,
      "author": {
        "id": 1011211
      },
      "writtenOn": "2019-01-03T08:38:17Z",
      "side": 1,
      "message": "Whenever we enable histograms we want to allocate histogram structure for each existing channel.\nFor each newly created channel during enabled histograms we also allocate histogram.\n\nWe should destroy per-channel histogram during channel destroy because otherwise we would cause memory leak.\nAfter histogram disable call we destroy all remaining histograms of this bdev.",
      "parentUuid": "4b03d4dd_d162b16c",
      "revId": "45abc3042e8be07a61eaca3a7cfcdc63a14314ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e5f569c_3b314d95",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 16
      },
      "lineNbr": 1757,
      "author": {
        "id": 1014600
      },
      "writtenOn": "2019-01-03T08:54:49Z",
      "side": 1,
      "message": "In spdk_bdev_channel_create(), it seems that every channel has it\u0027s own unique histogram, but may share same shared_resource, so spdk_bdev_channel_create() may increase shared_resource-\u003eref or create new shared_resource. So, we should destroy histogram whenever a channel is destroyed, but only decrease shared_resource-\u003eref and destroy shared_resource only when shared_resource-\u003eref \u003d\u003d 0.\n\nMy point is relationship between channel and shared_resource is multiple to single, but relationship between channel and histogram is one to one. So we should destroy histogram whenever a channel is destroy, regardless what the shared_resource-\u003eref it is.\n\nThanks.",
      "parentUuid": "e9d28d64_a571b4e1",
      "revId": "45abc3042e8be07a61eaca3a7cfcdc63a14314ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d09c9562_4849ba1d",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 16
      },
      "lineNbr": 1757,
      "author": {
        "id": 1014600
      },
      "writtenOn": "2019-01-03T13:26:01Z",
      "side": 1,
      "message": "I think spdk_bdev_channel_destroy() should be changed as following:\n\n  @@ -2043,6 +2043,10 @@ spdk_bdev_channel_destroy(void *io_device, void *ctx_buf)\n        _spdk_bdev_abort_buf_io(\u0026mgmt_ch-\u003eneed_buf_small, ch);\n        _spdk_bdev_abort_buf_io(\u0026mgmt_ch-\u003eneed_buf_large, ch);\n \n+       if (ch-\u003ehistogram) {\n+               spdk_histogram_data_free(ch-\u003ehistogram);\n+       }\n+\n        _spdk_bdev_channel_destroy_resource(ch);\n }\n\nWhat do you think?",
      "parentUuid": "9e5f569c_3b314d95",
      "revId": "45abc3042e8be07a61eaca3a7cfcdc63a14314ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "391b1e18_3d58f2dd",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 16
      },
      "lineNbr": 1757,
      "author": {
        "id": 1011211
      },
      "writtenOn": "2019-01-03T15:47:16Z",
      "side": 1,
      "message": "Yes, I agree, thanks!.",
      "parentUuid": "d09c9562_4849ba1d",
      "revId": "45abc3042e8be07a61eaca3a7cfcdc63a14314ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a57dd77_11d0793c",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 16
      },
      "lineNbr": 4224,
      "author": {
        "id": 1011221
      },
      "writtenOn": "2019-01-02T08:31:05Z",
      "side": 1,
      "message": "Shouldn\u0027t ctx-\u003ehistogram be freed here as well ?",
      "range": {
        "startLine": 4223,
        "startChar": 0,
        "endLine": 4224,
        "endChar": 11
      },
      "revId": "45abc3042e8be07a61eaca3a7cfcdc63a14314ce",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}