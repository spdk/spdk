{
  "comments": [
    {
      "key": {
        "uuid": "42ca6f74_fcfaf973",
        "filename": "examples/nvme/perf/perf.c",
        "patchSetId": 4
      },
      "lineNbr": 254,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2017-11-22T16:56:05Z",
      "side": 1,
      "message": "The arguments to calloc are (num elements, size of one element) - you have the arguments reversed. Now, they\u0027re just multiplied together so the allocation works out the same either way, but it\u0027s best to do them according to the docs.",
      "revId": "b4d67073c5e2d22e8fc2b5f0c392d0c1f89c9293",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3eb7c9f_64bcdfd1",
        "filename": "examples/nvme/perf/perf.c",
        "patchSetId": 4
      },
      "lineNbr": 484,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2017-11-22T16:56:05Z",
      "side": 1,
      "message": "For function definitions, we put the return type on its own line.",
      "revId": "b4d67073c5e2d22e8fc2b5f0c392d0c1f89c9293",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e066a227_efbc30af",
        "filename": "examples/nvme/perf/perf.c",
        "patchSetId": 4
      },
      "lineNbr": 518,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2017-11-22T17:09:07Z",
      "side": 1,
      "message": "The metadata could either be the first or last 8 bytes of metadata, depending on the Identify Namespace DPS field, bit 3.",
      "revId": "b4d67073c5e2d22e8fc2b5f0c392d0c1f89c9293",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ace54ff_d0094c40",
        "filename": "examples/nvme/perf/perf.c",
        "patchSetId": 4
      },
      "lineNbr": 523,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2017-11-22T17:09:07Z",
      "side": 1,
      "message": "This doesn\u0027t need to be in the lba_count loop.",
      "revId": "b4d67073c5e2d22e8fc2b5f0c392d0c1f89c9293",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "785d1a9d_2ae8b1c6",
        "filename": "examples/nvme/perf/perf.c",
        "patchSetId": 4
      },
      "lineNbr": 541,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2017-11-22T17:09:07Z",
      "side": 1,
      "message": "Type 1 and Type 2 are the only types we are supporting here, I think, so this comment doesn\u0027t really help. (We return early above for Type 3.)",
      "revId": "b4d67073c5e2d22e8fc2b5f0c392d0c1f89c9293",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6067469e_f855277c",
        "filename": "examples/nvme/perf/perf.c",
        "patchSetId": 4
      },
      "lineNbr": 580,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2017-11-22T17:09:07Z",
      "side": 1,
      "message": "This should probably only be called in submit_io() (which is called once per task at startup) instead of on every submit_single_io() call.",
      "range": {
        "startLine": 580,
        "startChar": 3,
        "endLine": 580,
        "endChar": 29
      },
      "revId": "b4d67073c5e2d22e8fc2b5f0c392d0c1f89c9293",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}