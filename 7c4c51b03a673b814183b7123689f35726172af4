{
  "comments": [
    {
      "key": {
        "uuid": "5c557630_2d8373af",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2019-07-10T08:54:35Z",
      "side": 1,
      "message": "I don\u0027t understand why you need to track so many things to ensure the band can be erased. Isn\u0027t it as simple as saying it has no valid data? You should only be marking the data as invalid once the write to whatever other band it went to is complete, so I\u0027m not getting where the extra complexity is coming from.\n\nIf you keep the counters on the band that\u0027s the source of the data being moved instead of on the target, can\u0027t you eliminate the bitmap?",
      "revId": "7c4c51b03a673b814183b7123689f35726172af4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd069a28_4c5cba6a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1015368
      },
      "writtenOn": "2019-07-10T10:26:13Z",
      "side": 1,
      "message": "Since we rely on the non-volatile cache to recover data from any band that isn\u0027t closed, we have to make sure that the data being moved from one band to another is stored on a closed band, before the source band can be erased. Otherwise we\u0027d lose moved data if power was lost after the source band got erased, but before the destination band was closed.\n\nThe counters are actually kept on the band that is being source of the data, while the bitmap is kept on the band being the destination. When a band is closed, its bitmap is checked to find bands that have its data moved to this one and decrement their counters.",
      "parentUuid": "5c557630_2d8373af",
      "revId": "7c4c51b03a673b814183b7123689f35726172af4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}