{
  "comments": [
    {
      "key": {
        "uuid": "1eb7b5bc_f1e25a2b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2017-12-29T12:14:57Z",
      "side": 1,
      "message": "Separating 1 and 2 into separate patch is impossible?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 54
      },
      "revId": "94a1b9dcded2a5ad4a5551eccc06b50d59257b9a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc16d84f_97b5dac1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2017-12-30T07:54:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1eb7b5bc_f1e25a2b",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 54
      },
      "revId": "94a1b9dcded2a5ad4a5551eccc06b50d59257b9a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c58164b_01decb8b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2017-12-29T12:14:57Z",
      "side": 1,
      "message": "Please name this algorithm if possible because another algorithm may coexist.",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 34
      },
      "revId": "94a1b9dcded2a5ad4a5551eccc06b50d59257b9a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b0d4013_c2065dce",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 805,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-01-02T23:41:58Z",
      "side": 1,
      "message": "I don\u0027t understand this math; can you expand on why we are counting outstanding I/O against the QoS limit?  I think we should also be tracking submissions, not completions.\n\nThis seems like it should just be something like:\n\n    if (ch-\u003eio_submitted_per_ms \u003e\u003d ch-\u003eqos_max_ios_per_ms) {\n        break;\n    }",
      "revId": "94a1b9dcded2a5ad4a5551eccc06b50d59257b9a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce1aebe7_0edaef12",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 805,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2018-01-03T14:55:00Z",
      "side": 1,
      "message": "Yes. Here it is tracking the submissions and completed in this microsecond. The ch-\u003eio_outstanding is reflecting the submissions at this point. As this function is also called in the normal IO path besides the periodical QoS poller. The io_completed_per_ms reflects in this microsecond, how many IOs already been finished. The sum of io_completed_per_ms and io_outstanding is the overall allowed budget in this microsecond. As the io_outstanding is a dynamic value only count the current active IOs and not the overall IOs that has been issued. The other way is that we may also have a specific member like io_submitted_per_ms for the same purpose as the sum of io_compelted_per_ms and io_outstanding. Here I just track the io_completed_per_ms.",
      "parentUuid": "4b0d4013_c2065dce",
      "revId": "94a1b9dcded2a5ad4a5551eccc06b50d59257b9a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41602cbe_f30684c5",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 844,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-01-02T23:41:58Z",
      "side": 1,
      "message": "I\u0027m also not clear why the I/O is enqueued on the nomem_io queue - I think we should always queue QoS I/O on the QoS queue, and only add I/O to the nomem queue if it fails due to ENOMEM.",
      "revId": "94a1b9dcded2a5ad4a5551eccc06b50d59257b9a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "598c3342_4091e1e7",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 845,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2017-12-29T12:14:57Z",
      "side": 1,
      "message": "Why not you enqueue to the qos_io queue unconditionally and then dequeue from the qos_io queue if the rate limit is not enforced? Is it impossible for your method to do that?\n\nDid you look my patch?  and I would like to hear your impression.",
      "range": {
        "startLine": 838,
        "startChar": 0,
        "endLine": 845,
        "endChar": 3
      },
      "revId": "94a1b9dcded2a5ad4a5551eccc06b50d59257b9a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13ec6ab6_4f256437",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 845,
      "author": {
        "id": 1011207
      },
      "writtenOn": "2017-12-29T12:53:18Z",
      "side": 1,
      "message": "I think that shall also work here. For the nomem_io case, as there is already no memory condition happened and always need to clean these IOs first. I will add a UT case to examine this code later.\n\nI will definitely look at your patch. As I have other work on going, please be patient. :)",
      "parentUuid": "598c3342_4091e1e7",
      "range": {
        "startLine": 838,
        "startChar": 0,
        "endLine": 845,
        "endChar": 3
      },
      "revId": "94a1b9dcded2a5ad4a5551eccc06b50d59257b9a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "687faf60_7f16590f",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 845,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2017-12-30T07:54:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "13ec6ab6_4f256437",
      "range": {
        "startLine": 838,
        "startChar": 0,
        "endLine": 845,
        "endChar": 3
      },
      "revId": "94a1b9dcded2a5ad4a5551eccc06b50d59257b9a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1affac93_f160c984",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 929,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-01-02T23:41:58Z",
      "side": 1,
      "message": "This probably needs to account for the actual time between poll_qos calls, not just hard-coded to 1000, since the QoS timer poller may not run immediately due to other pollers.",
      "range": {
        "startLine": 929,
        "startChar": 45,
        "endLine": 929,
        "endChar": 51
      },
      "revId": "94a1b9dcded2a5ad4a5551eccc06b50d59257b9a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12cf4405_d89b93ac",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 933,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-01-02T23:41:58Z",
      "side": 1,
      "message": "I don\u0027t think we should roll unused I/Os per ms into the next ms - this will just result in allowing more I/Os in the next ms than the defined ios_per_sec limit.",
      "revId": "94a1b9dcded2a5ad4a5551eccc06b50d59257b9a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce1072c4_4c9e8952",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 2038,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-01-02T23:41:58Z",
      "side": 1,
      "message": "Can this go in the if (status \u003d\u003d SPDK_BDEV_IO_STATUS_SUCCESS) block below?",
      "revId": "94a1b9dcded2a5ad4a5551eccc06b50d59257b9a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}