{
  "comments": [
    {
      "key": {
        "uuid": "19fb241a_4bd4f205",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-07-25T19:01:19Z",
      "side": 1,
      "message": "SPDK_TEST_OCSSD?",
      "revId": "0048f148eb7734bce1e9da81dba8e5ab2487e72f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "098b7667_0140b61e",
        "filename": "autotest.sh",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-07-25T19:01:19Z",
      "side": 1,
      "message": "what does the lsblk output look like with an ocssd?\n\ni guess i thought that for ocssd, the namespaces are not reported as block devices, and that pblk would create the block device instead?\n\nmaybe this check is fine, but i\u0027d like to see what the lsblk output looks like first to see if there\u0027s a better way to avoid running parted on ocssd devices",
      "revId": "0048f148eb7734bce1e9da81dba8e5ab2487e72f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06fbd667_141f3760",
        "filename": "autotest.sh",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-07-25T19:01:19Z",
      "side": 1,
      "message": "unrelated whitespace change",
      "revId": "0048f148eb7734bce1e9da81dba8e5ab2487e72f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44291bbb_7301b004",
        "filename": "autotest.sh",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-07-25T19:01:19Z",
      "side": 1,
      "message": "unrelated whitespace change",
      "revId": "0048f148eb7734bce1e9da81dba8e5ab2487e72f",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}