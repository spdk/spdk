{
  "comments": [
    {
      "key": {
        "uuid": "875eaa7e_7331d6ff",
        "filename": "CHANGELOG.md",
        "patchSetId": 14
      },
      "lineNbr": 44,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2018-07-12T01:31:36Z",
      "side": 1,
      "message": "A sentence or two defining zero-copy would be good here with docs having a much more expanded explanation of course. I believe zero-copy can be thought of in a few different ways",
      "revId": "ad9f32909a37f0e582e97d2520f7221f752e56ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05e86caa_376e4984",
        "filename": "include/spdk/bdev.h",
        "patchSetId": 14
      },
      "lineNbr": 647,
      "author": {
        "id": 1011327
      },
      "writtenOn": "2018-07-12T04:49:15Z",
      "side": 1,
      "message": "Ideally the buffers should be allocated without a context switch. Since this design is expecting a callback, I am assuming there will be one.\n\nOne can still do a callback in the same thread context, however for write path to trigger R2T/RDMA_READ it probably will re-enter the rdma state machine. When it unwinds after zcopy_start into rdma codepath, the local stack context will be invalid.\nFor example:\nspdk_nvmf_rdma_request_process\n spdk_nvmf_request_exec\n  spdk_nvmf_ctrlr_process_io_cmd\n   nvmf_bdev_ctrlr_write_cmd\n    spdk_bdev_zcopy_start(..., populate\u003dfalse, req-\u003eqpair-\u003etransport-\u003eops-\u003ereq_r2t, req);\n     spdk_bdev_io_submit\n      bdev-\u003efn_table-\u003esubmit_request\n       Allocate buffers\n       callback_fn()\n        spdk_nvmf_rdma_request_r2t\n         spdk_nvmf_rdma_request_process\n\nOnce it unwinds to rdma_request_process, the code should not rely on anything on stack. This is something one can\u0027t strictly enforce.",
      "revId": "ad9f32909a37f0e582e97d2520f7221f752e56ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ff21313_e5ee6a2f",
        "filename": "include/spdk/bdev.h",
        "patchSetId": 14
      },
      "lineNbr": 647,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-07-12T16:09:37Z",
      "side": 1,
      "message": "Hi Sriram,\n\nGreat observation.  bdev layer will allow the stack to unwind before calling the callback function.  See spdk_bdev_io_complete -\u003e _spdk_bdev_io_complete in lib/bdev/bdev.c.  If we are in the submit request context, we will send a message to the calling thread to invoke the completion callback.\n\n-Jim",
      "parentUuid": "05e86caa_376e4984",
      "revId": "ad9f32909a37f0e582e97d2520f7221f752e56ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "842d5f24_fd1850da",
        "filename": "include/spdk/bdev_module.h",
        "patchSetId": 14
      },
      "lineNbr": 368,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2018-07-12T01:31:36Z",
      "side": 1,
      "message": "do we use \"SG buffer\" terminology anywhere else? Maybe just leave it at \"Array of iovecs to transfer\"",
      "revId": "ad9f32909a37f0e582e97d2520f7221f752e56ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e39bc7a_e78446ce",
        "filename": "include/spdk/bdev_module.h",
        "patchSetId": 14
      },
      "lineNbr": 374,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2018-07-12T01:31:36Z",
      "side": 1,
      "message": "So technically this isn\u0027t the total size, its the total number of blocks :)",
      "revId": "ad9f32909a37f0e582e97d2520f7221f752e56ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "898b9391_68d13791",
        "filename": "include/spdk/bdev_module.h",
        "patchSetId": 14
      },
      "lineNbr": 380,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2018-07-12T01:31:36Z",
      "side": 1,
      "message": "\"Real\" seems a little odd, as opposed to \"fake\"? Maybe \"populated with data from the backing device\"?",
      "revId": "ad9f32909a37f0e582e97d2520f7221f752e56ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b966dcd_4de2c17a",
        "filename": "include/spdk/bdev_module.h",
        "patchSetId": 14
      },
      "lineNbr": 383,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2018-07-12T01:31:36Z",
      "side": 1,
      "message": "So I think I know the answer to this but just in case, what\u0027s the use case for commit \u003d false?",
      "revId": "ad9f32909a37f0e582e97d2520f7221f752e56ef",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}