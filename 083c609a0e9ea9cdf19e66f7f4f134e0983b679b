{
  "comments": [
    {
      "key": {
        "uuid": "9584b209_52a30700",
        "filename": "test/lvol/resize.sh",
        "patchSetId": 7
      },
      "lineNbr": 107,
      "author": {
        "id": 1017532
      },
      "writtenOn": "2020-01-28T01:25:09Z",
      "side": 1,
      "message": "I would suggest to use `[[ $(foo) \u003d\u003d \"$bar\" ]]` and `(( $(bar) \u003d\u003d foo / eek ))` instead. :) That said, I think it would be nice to call jq only once so there\u0027s no need to use cmd subst inside each test. E.g. https://paste.ofcode.org/39ti7Hd7asDpmVMxa7939ay or similar.",
      "range": {
        "startLine": 102,
        "startChar": 1,
        "endLine": 107,
        "endChar": 0
      },
      "revId": "083c609a0e9ea9cdf19e66f7f4f134e0983b679b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "506d61d8_eef27fb4",
        "filename": "test/lvol/resize.sh",
        "patchSetId": 7
      },
      "lineNbr": 107,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2020-01-29T10:10:38Z",
      "side": 1,
      "message": "I was originally rewriting those tests to bash to make them easier to debug. They were written with xtrace in mind, and single braces with string comparisons seemed to produce cleanest xtrace output. See the comparisons below:\n\n$ [ \"$(echo \"a b\")\" \u003d\u003d \"a b\" ]\n++ echo \u0027a b\u0027\n+ \u0027[\u0027 \u0027a b\u0027 \u003d\u003d \u0027a b\u0027 \u0027]\u0027\n\n$ [[ $(echo \"a b\") \u003d\u003d \"a b\" ]]\n++ echo \u0027a b\u0027\n+ [[ a b \u003d\u003d \\a\\ \\b ]]\n\n$ a\u003d42; b\u003d2;\n$ [ \"$(echo 42)\" \u003d\u003d \"$((a / b))\" ]\n++ echo 42\n+ \u0027[\u0027 42 \u003d\u003d 21 \u0027]\u0027\n\n$ (( $(echo 42) \u003d\u003d $a / $b ))\n++ echo 42\n+ ((  42 \u003d\u003d 42 / 2  ))\n\n\njq is fast enough, so I also sacrifice those few microseconds to run it multiple times to make the output look much nicer. Also, if the test fails, the last xtrace will directly tell you what went wrong.\n\nThinking about this now, I like `((  42 \u003d\u003d 42 / 2  ))` more than `\u0027[\u0027 42 \u003d\u003d 21 \u0027]\u0027` ðŸ˜œ On the other hand the division could be a bit harder to tackle when we use bigger numbers. I\u0027m probably fine with either",
      "parentUuid": "9584b209_52a30700",
      "range": {
        "startLine": 102,
        "startChar": 1,
        "endLine": 107,
        "endChar": 0
      },
      "revId": "083c609a0e9ea9cdf19e66f7f4f134e0983b679b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78bce012_2c545ee3",
        "filename": "test/lvol/resize.sh",
        "patchSetId": 7
      },
      "lineNbr": 165,
      "author": {
        "id": 1011256
      },
      "writtenOn": "2020-01-27T18:08:47Z",
      "side": 1,
      "message": "I don\u0027t think we really need this.\nLet\u0027s stick to the version from PS5 and just fix the place where the trap is placed in the test function.",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 165,
        "endChar": 1
      },
      "revId": "083c609a0e9ea9cdf19e66f7f4f134e0983b679b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d97293cb_b4fb4fda",
        "filename": "test/lvol/resize.sh",
        "patchSetId": 7
      },
      "lineNbr": 170,
      "author": {
        "id": 1011256
      },
      "writtenOn": "2020-01-27T18:08:47Z",
      "side": 1,
      "message": "Why do we need to set a trap with nbd_stop disks for tests which don\u0027t run NBD?\nThis will cause confusing output in case of error.",
      "range": {
        "startLine": 170,
        "startChar": 5,
        "endLine": 170,
        "endChar": 20
      },
      "revId": "083c609a0e9ea9cdf19e66f7f4f134e0983b679b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}