{
  "comments": [
    {
      "key": {
        "uuid": "265d6321_8faea183",
        "filename": "include/spdk/blob.h",
        "patchSetId": 15
      },
      "lineNbr": 148,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-10-05T17:49:08Z",
      "side": 1,
      "message": "we should clarify more how this is to be specified:\n\nfor example:\nbstype set to all zeroes is a special value meaning no bstype defined\nduring init, bstype is set to a string denoting the type of blobstore (BLOBFS, LVOLSTORE)\nduring load, bstype may be set to:\n1) a string to compare with the bstype on disk, if they do not match, or the on disk bstype is all zeroes, the load operation will fail with -E_SOME_ERRNO\n2) all zeroes, in which case the load operation will not depend at all on bstype stored on disk\n\nnow that we are allowing options to be passed during the load, we also need to specify that cluster_sz and num_md_pages only apply during init() and are ignored during load()",
      "revId": "2ec3886e315cf641ea67075bd2396799e9ec2603",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3802b9d2_452d22d4",
        "filename": "include/spdk/blob.h",
        "patchSetId": 15
      },
      "lineNbr": 148,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-10-05T18:07:49Z",
      "side": 1,
      "message": "also thinking that we should have something like:\n\nstruct spdk_bs_type {\n  char bstype[SPDK_BLOBSTORE_TYPE_LENGTH];\n};\n\nThis could be used in spdk_bs_opts, spdk_blob_store and spdk_super_blob.  It also gives us a convenient structure to pass as a parameter (instead of char *) for the spdk_bs_get/set_bstype functions I recommend later in this review.",
      "parentUuid": "265d6321_8faea183",
      "revId": "2ec3886e315cf641ea67075bd2396799e9ec2603",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a322e655_f132532c",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 15
      },
      "lineNbr": 1368,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-10-05T17:49:08Z",
      "side": 1,
      "message": "lets just make this all zeroes",
      "revId": "2ec3886e315cf641ea67075bd2396799e9ec2603",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed7b103f_2c2e1ad7",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 15
      },
      "lineNbr": 1421,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-10-05T17:49:08Z",
      "side": 1,
      "message": "should we just use memcpy here instead of snprintf?  or if we are going to use snprintf, then we should clearly clarify in the header file documentation that bstype is a NUL-terminated ASCII string (i.e. anything after the \\0 is ignored and not compared)",
      "revId": "2ec3886e315cf641ea67075bd2396799e9ec2603",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b4fee1e_c13c0af9",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 15
      },
      "lineNbr": 1609,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2017-10-05T17:30:15Z",
      "side": 1,
      "message": "ctx-\u003esuper has been read from disk (untrusted data), so we shouldn\u0027t assume that bstype is null terminated - strcmp() may run off the end of the buffer if malicious/buggy software writes a bogus superblock.",
      "revId": "2ec3886e315cf641ea67075bd2396799e9ec2603",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05f1c463_e7416ea7",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 15
      },
      "lineNbr": 1611,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2017-10-05T17:30:15Z",
      "side": 1,
      "message": "Please use snprintf() here even though we know the string will always fit in this case - sprintf() is on the banned functions list of the security part of our release checklist.",
      "revId": "2ec3886e315cf641ea67075bd2396799e9ec2603",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5d2a304_181d66be",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 15
      },
      "lineNbr": 1611,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-10-05T18:07:49Z",
      "side": 1,
      "message": "I don\u0027t think we should put this BLOBFS here in the blobstore code.\n\nHow about instead we add spdk_bs_get/set_bstype functions.  blobfs can then load with a NULL bstype.  If after bs load, bstype is empty (it finds this by calling spdk_bs_get_bstype), it can call spdk_bs_set_bstype.  If its already BLOBFS, do nothing.  Otherwise fail the spdk_fs_load operation.",
      "parentUuid": "05f1c463_e7416ea7",
      "revId": "2ec3886e315cf641ea67075bd2396799e9ec2603",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53263ea2_9ba79206",
        "filename": "lib/blob/blobstore.c",
        "patchSetId": 15
      },
      "lineNbr": 1667,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-10-05T17:49:08Z",
      "side": 1,
      "message": "I\u0027m not sure about using this here.  For example, cluster_sz and num_md_pages are ignored during load since they are on-disk fields that can\u0027t be changed.  I think we need to specify that in the documentation.  And if we do, then we really cannot fail the load operation if they pass cluster_sz or num_md_pages \u003d\u003d 0.",
      "revId": "2ec3886e315cf641ea67075bd2396799e9ec2603",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88f65190_39f5fab9",
        "filename": "lib/blob/blobstore.h",
        "patchSetId": 15
      },
      "lineNbr": 53,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-10-05T17:49:08Z",
      "side": 1,
      "message": "I\u0027m thinking we don\u0027t have an UNKNOWN string - we just have all zeroes be the definition of unknown bstype (then this is a bit more backward compatible too with version 1)",
      "revId": "2ec3886e315cf641ea67075bd2396799e9ec2603",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a04fa608_5e698e5f",
        "filename": "lib/blob/blobstore.h",
        "patchSetId": 15
      },
      "lineNbr": 183,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-10-05T18:07:49Z",
      "side": 1,
      "message": "Daniel and I are thinking now that we may not need this version bump.  If we treat \"undefined\" bstype as all zeroes, then this matches the current format (since all reserved bits are already set to 0)",
      "revId": "2ec3886e315cf641ea67075bd2396799e9ec2603",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1dfce0d_38c32fec",
        "filename": "lib/blobfs/blobfs.c",
        "patchSetId": 15
      },
      "lineNbr": 470,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2017-10-05T17:30:15Z",
      "side": 1,
      "message": "Please use snprintf() rather than sprintf().",
      "revId": "2ec3886e315cf641ea67075bd2396799e9ec2603",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f1c94d4_d2112dea",
        "filename": "lib/blobfs/blobfs.c",
        "patchSetId": 15
      },
      "lineNbr": 662,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2017-10-05T17:30:15Z",
      "side": 1,
      "message": "Here as well.",
      "revId": "2ec3886e315cf641ea67075bd2396799e9ec2603",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c54c60e3_a2387315",
        "filename": "lib/blobfs/blobfs.c",
        "patchSetId": 15
      },
      "lineNbr": 664,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-10-05T17:49:08Z",
      "side": 1,
      "message": "I need to think about this some more.  This will actually break v1 blobfs blobstores.",
      "revId": "2ec3886e315cf641ea67075bd2396799e9ec2603",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}