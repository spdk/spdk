{
  "comments": [
    {
      "key": {
        "uuid": "36d9e9a3_30acc131",
        "filename": "test/unit/lib/nvme/nvme_pcie.c/nvme_pcie_ut.c",
        "patchSetId": 11
      },
      "lineNbr": 101,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-11-15T18:46:48Z",
      "side": 1,
      "message": "is it OK for this function to ever get called with these unit tests, if both g_remove_cb_done \u003d\u003d false and g_device_is_enumerated \u003d\u003d false?\n\nif not, then I\u0027d suggest:\n\nSPDK_CU_ASSERT_FATAL(g_remove_cb_done || g_device_is_enumerated);\n\nif that is OK, then I would suggest:\n\nif (!g_remove_cb_done \u0026\u0026 !g_device_is_enumerated) {\n  return -1;\n}\n\nif (g_vfio_is_enabled) {\n/* code */\n}\n\nif (g_add_device) {\n  uevent-\u003eaction \u003d SPDK_NVME_UEVENT_ADD;\n} else {\n  action \u003d UEVENT_REMOVE;\n}\n\nreturn 0;\n\nit makes all of this simpler to read",
      "revId": "756669bcef287f83977143f9c7f1791ca41d0212",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f269972_0e98fb5f",
        "filename": "test/unit/lib/nvme/nvme_pcie.c/nvme_pcie_ut.c",
        "patchSetId": 11
      },
      "lineNbr": 101,
      "author": {
        "id": 1014536
      },
      "writtenOn": "2019-11-18T05:08:55Z",
      "side": 1,
      "message": "Thanks jim,\n    Sorry, there exists an issue, that is if do this at the beginning , \n g_remove_cb_done  and g_remove_cb_done  are initialized as false.\nif (!g_remove_cb_done \u0026\u0026 !g_device_is_enumerated) {\n  return -1;\n}\nalways return -1.\nand it also need to sub conditions,so\nchanged a little, and moved return value to 1, that loop can continue.",
      "parentUuid": "36d9e9a3_30acc131",
      "revId": "756669bcef287f83977143f9c7f1791ca41d0212",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32de2534_eea5df25",
        "filename": "test/unit/lib/nvme/nvme_pcie.c/nvme_pcie_ut.c",
        "patchSetId": 11
      },
      "lineNbr": 101,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-11-18T05:48:36Z",
      "side": 1,
      "message": "I see only code movement. Any clarification or improvement after your change?",
      "parentUuid": "0f269972_0e98fb5f",
      "revId": "756669bcef287f83977143f9c7f1791ca41d0212",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a1e98b7_60452b53",
        "filename": "test/unit/lib/nvme/nvme_pcie.c/nvme_pcie_ut.c",
        "patchSetId": 11
      },
      "lineNbr": 101,
      "author": {
        "id": 1014536
      },
      "writtenOn": "2019-11-18T06:20:20Z",
      "side": 1,
      "message": "hi shuhei,\n please see patch set 12.\nI think the change what want to do is make it more directly.\ng_add_device -\u003e SPDK_NVME_UEVENT_ADD rather than !g_add_device;\n\nbut indeed there\u0027s no large differences.",
      "parentUuid": "32de2534_eea5df25",
      "revId": "756669bcef287f83977143f9c7f1791ca41d0212",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7049ad8_cdf1d663",
        "filename": "test/unit/lib/nvme/nvme_pcie.c/nvme_pcie_ut.c",
        "patchSetId": 11
      },
      "lineNbr": 101,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-11-18T06:52:45Z",
      "side": 1,
      "message": "I think add operation is not important for this test. So I wanted to emphasize that.\nAnd returning 0 is important, and so if () return 0 else return 1 will clarify that.\n\nBut your change is OK",
      "parentUuid": "0a1e98b7_60452b53",
      "revId": "756669bcef287f83977143f9c7f1791ca41d0212",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7fa825e_f72a0d42",
        "filename": "test/unit/lib/nvme/nvme_pcie.c/nvme_pcie_ut.c",
        "patchSetId": 11
      },
      "lineNbr": 340,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-11-15T18:46:48Z",
      "side": 1,
      "message": "is there any case where it is OK if g_ctrlr !\u003d ctrlr?\n\nif not, then it would be better to do:\n\nSPDK_CU_ASSERT_FATAL(g_ctrlr \u003d\u003d ctrlr);\nfree(g_ctrlr);\ng_ctrlr \u003d NULL;\n\nand avoid the if statement",
      "revId": "756669bcef287f83977143f9c7f1791ca41d0212",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0a760e5_c2aeaa87",
        "filename": "test/unit/lib/nvme/nvme_pcie.c/nvme_pcie_ut.c",
        "patchSetId": 11
      },
      "lineNbr": 340,
      "author": {
        "id": 1014536
      },
      "writtenOn": "2019-11-18T05:08:55Z",
      "side": 1,
      "message": "remove condition \"if (g_ctrlr \u003d\u003d ctrlr)\"\ndone.",
      "parentUuid": "d7fa825e_f72a0d42",
      "revId": "756669bcef287f83977143f9c7f1791ca41d0212",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31500352_3ab4d2b9",
        "filename": "test/unit/lib/nvme/nvme_pcie.c/nvme_pcie_ut.c",
        "patchSetId": 11
      },
      "lineNbr": 340,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-11-18T05:48:36Z",
      "side": 1,
      "message": "Oh, this change means you don\u0027t grasp the whole logic.\nThis function is called even when g_ctrlr is NULL, and that case is normal.\nSo the previous version should be valid.\n\nIf you change, please do CU_ASSERT(ctrlr !\u003d NULL), CU_ASSERT(g_ctrlr \u003d\u003d NULL || g_ctrlr \u003d\u003d ctrlr);",
      "parentUuid": "e0a760e5_c2aeaa87",
      "revId": "756669bcef287f83977143f9c7f1791ca41d0212",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "caddd01e_2e037d70",
        "filename": "test/unit/lib/nvme/nvme_pcie.c/nvme_pcie_ut.c",
        "patchSetId": 11
      },
      "lineNbr": 340,
      "author": {
        "id": 1014536
      },
      "writtenOn": "2019-11-18T06:20:20Z",
      "side": 1,
      "message": "hi shuhei,\n    we can do this \"free(g_ctrlr)\" althrough g_ctrlr is NULL, Am I right? If I\u0027m wrong , please \ncorrect me?",
      "parentUuid": "31500352_3ab4d2b9",
      "revId": "756669bcef287f83977143f9c7f1791ca41d0212",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ec3ca11_e6bcf3a1",
        "filename": "test/unit/lib/nvme/nvme_pcie.c/nvme_pcie_ut.c",
        "patchSetId": 11
      },
      "lineNbr": 340,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-11-18T06:52:45Z",
      "side": 1,
      "message": "I think Jimâ€™s suggestion is that we should add assert. In this function we ensure that the asserts are true. I was not good at but I actually wanted to add assert",
      "parentUuid": "caddd01e_2e037d70",
      "revId": "756669bcef287f83977143f9c7f1791ca41d0212",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}