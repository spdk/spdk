{
  "comments": [
    {
      "key": {
        "uuid": "82d67054_63f99b94",
        "filename": "lib/sock/sock.c",
        "patchSetId": 14
      },
      "lineNbr": 53,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2019-06-05T17:33:03Z",
      "side": 1,
      "message": "Having looked at the new version a bit, I\u0027m going to make another suggestion here. You have a map of placement_id -\u003e group. The group is ref counted for each socket. You then have these three functions (ignore spdk_sock_remove_sock_group_from_map_table for now because it is special):\n\nspdk_sock_map_placement_id_to_group\nspdk_sock_remove_placement_id_from_map_list\nspdk_sock_find_sock_group_from_map_list\n\nI\u0027d model this using these three operations:\n\n/* Look up the group for a placement_id. Do not take a reference. */\nstatic struct spdk_sock_group *group\nspdk_sock_map_lookup(int placement_id);\n\n/* Insert a group into the placement map. If the group is already in the map, take a reference. */\nstatic void\nspdk_sock_map_insert(int placement_id, struct spdk_sock_group *group);\n\n/* Release a reference to the group for a given placement_id. If the reference count is 0, remove the group. */\nstatic void\nspdk_sock_map_release(int placement_id);\n\nI think this gets rid of the weird bool parameter on the current find operation and makes the API more intuitive. You\u0027ll still need a fourth function to forcibly remove a group from the map anywhere that it appears (i.e. spdk_sock_remove_sock_group_from_map_table) that\u0027s used in the shutdown path.",
      "revId": "a0645a934b8dc9abc7940853824c739992ac172c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}