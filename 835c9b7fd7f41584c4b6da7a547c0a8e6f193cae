{
  "comments": [
    {
      "key": {
        "uuid": "0c12641e_21c5a5ef",
        "filename": "lib/event/rpc/subsystem_rpc.c",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-02-21T01:40:13Z",
      "side": 1,
      "message": "the top layer should be object?",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 79,
        "endChar": 32
      },
      "revId": "835c9b7fd7f41584c4b6da7a547c0a8e6f193cae",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd9f1f8a_53db234e",
        "filename": "lib/event/rpc/subsystem_rpc.c",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-02-21T18:56:13Z",
      "side": 1,
      "message": "As I understand JSON, only arrays guarantee order. Order in object is not guaranteed this why this need to be array.",
      "parentUuid": "0c12641e_21c5a5ef",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 79,
        "endChar": 32
      },
      "revId": "835c9b7fd7f41584c4b6da7a547c0a8e6f193cae",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "736e73b6_7f494342",
        "filename": "lib/event/rpc/subsystem_rpc.c",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-02-21T01:40:13Z",
      "side": 1,
      "message": "Just outputting the following may be enough?\n\n{\n  \"dependency\":\n  [\n    {\n       \"name\": \"iscsi\",\n       \"depends_on\": \"scsi\"\n    },\n    {\n      \"name\": \"nbd\",\n      \"depends_on\": \"bdev\"\n    }\n  ]\n}",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 82,
        "endChar": 2
      },
      "revId": "835c9b7fd7f41584c4b6da7a547c0a8e6f193cae",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38e88e4b_5b210f9e",
        "filename": "lib/event/rpc/subsystem_rpc.c",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-02-21T18:56:13Z",
      "side": 1,
      "message": "1. Do we need \u0027\u0027\u0027 { \"dependency\": \u0027\u0027\u0027 part?\n2. \"depends_on\" - this need to be a list because subsystem might have multiple dependencies.",
      "parentUuid": "736e73b6_7f494342",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 82,
        "endChar": 2
      },
      "revId": "835c9b7fd7f41584c4b6da7a547c0a8e6f193cae",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0b35a3d_5791b0ec",
        "filename": "lib/event/subsystem.c",
        "patchSetId": 2
      },
      "lineNbr": 264,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-02-21T01:40:13Z",
      "side": 1,
      "message": "Do we have to allocate here?\nPython is easier than C to extract items from the list.",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 264,
        "endChar": 53
      },
      "revId": "835c9b7fd7f41584c4b6da7a547c0a8e6f193cae",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fe83d88_a0a20269",
        "filename": "lib/event/subsystem.c",
        "patchSetId": 2
      },
      "lineNbr": 264,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-02-21T08:27:18Z",
      "side": 1,
      "message": "Here, calculating the number of subsystems and then alloc() will be simple?\nOr move this for_each loop into subsystem_rpc.c and write name into the JSON-array one by one?",
      "parentUuid": "f0b35a3d_5791b0ec",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 264,
        "endChar": 53
      },
      "revId": "835c9b7fd7f41584c4b6da7a547c0a8e6f193cae",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "feff99c0_3d55d2fa",
        "filename": "lib/event/subsystem.c",
        "patchSetId": 2
      },
      "lineNbr": 264,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-02-21T18:56:13Z",
      "side": 1,
      "message": "I wanted to avoid exposing internal logic from this file. But if everyone if fine with this I will do as you wrote.",
      "parentUuid": "1fe83d88_a0a20269",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 264,
        "endChar": 53
      },
      "revId": "835c9b7fd7f41584c4b6da7a547c0a8e6f193cae",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2687129c_65293351",
        "filename": "scripts/rpc.py",
        "patchSetId": 2
      },
      "lineNbr": 396,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-02-21T01:40:13Z",
      "side": 1,
      "message": "It looks that\n-  when --subsystem is skipped, output just list of all subsystems.\n-  when --subsystem is specified, output list of depend_on\u0027s to the subsystem.\n\nTwo separated RPCs will be easier to handle?\n-  get_subsystems.\n-  get_subsystem_dependencies.",
      "range": {
        "startLine": 396,
        "startChar": 0,
        "endLine": 396,
        "endChar": 138
      },
      "revId": "835c9b7fd7f41584c4b6da7a547c0a8e6f193cae",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a06d27c5_8d87f21e",
        "filename": "scripts/rpc.py",
        "patchSetId": 2
      },
      "lineNbr": 396,
      "author": {
        "id": 1011230
      },
      "writtenOn": "2018-02-21T18:56:13Z",
      "side": 1,
      "message": "yes, and no :)\nMy goal was: if \u0027--subsystem\u0027 is skipped - print all subsystems but in init order - the sorted by dependency, list of subsystems.\nIf \u0027--subsystem\u0027 is specified - print *sorted* list of dependencies only for specified subsystem. But now I think I failed to do that because dependency list is not sorted like submodule list :D",
      "parentUuid": "2687129c_65293351",
      "range": {
        "startLine": 396,
        "startChar": 0,
        "endLine": 396,
        "endChar": 138
      },
      "revId": "835c9b7fd7f41584c4b6da7a547c0a8e6f193cae",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}