{
  "comments": [
    {
      "key": {
        "uuid": "0d76bf44_732a3496",
        "filename": "include/spdk/nvmf.h",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-06-28T19:56:00Z",
      "side": 1,
      "message": "This function should likely operate on a transport now instead of a target.\n\nAlso, if this occurs at run time, it will need to remain asynchronous.",
      "revId": "613a35c4764fcf005b01ce69cda5ffcb20825163",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ebd3764e_e0ea9203",
        "filename": "include/spdk/nvmf.h",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 1014365
      },
      "writtenOn": "2018-06-28T23:42:37Z",
      "side": 1,
      "message": "This function does act on the transport.  The tgt argument is used to find the transport for the trid-\u003etrtype.\n\nThe operation of adding the transports to the channels was asynchrounous. That\u0027s no longer done in this function anymore.  This function simply calls the transport\u0027s  listen function to add the listener.  That was always done directly, not asynchronously.",
      "parentUuid": "0d76bf44_732a3496",
      "revId": "613a35c4764fcf005b01ce69cda5ffcb20825163",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e821dfa6_de9a8595",
        "filename": "include/spdk/nvmf.h",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-07-10T15:58:24Z",
      "side": 1,
      "message": "Can you make the function signature something like:\n\nint spdk_nvmf_transport_listen(struct spdk_nvmf_transport *transport, struct spdk_nvme_transport_id *trid, spdk_nvmf_transport_listen_done cb_fn, void *cb_arg);",
      "parentUuid": "ebd3764e_e0ea9203",
      "revId": "613a35c4764fcf005b01ce69cda5ffcb20825163",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6c26dd6_5bfec4fb",
        "filename": "include/spdk/nvmf.h",
        "patchSetId": 2
      },
      "lineNbr": 695,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-06-28T19:56:00Z",
      "side": 1,
      "message": "When the transport was created, the target was already assigned. I think either spdk_nvmf_tgt_transport_create should be asynchronous and automatically add the transport to the target, or spdk_nvmf_tgt_transport_create shouldn\u0027t take the target as a parameter and let it later get associated via this function.",
      "revId": "613a35c4764fcf005b01ce69cda5ffcb20825163",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "195abb08_ebe8f187",
        "filename": "include/spdk/nvmf.h",
        "patchSetId": 2
      },
      "lineNbr": 695,
      "author": {
        "id": 1014365
      },
      "writtenOn": "2018-06-28T23:42:37Z",
      "side": 1,
      "message": "You originally asked me to break the transport creation and target assignment up into 2 functions, but if you want the transport create to assign it to the target I can merge the 2 functions.  The only reason the tgt gets passed to the create transport function is that it gets passed all the way down the the create function in the transport table.  I can look into if that\u0027s really necessary anymore. Let me know.",
      "parentUuid": "c6c26dd6_5bfec4fb",
      "revId": "613a35c4764fcf005b01ce69cda5ffcb20825163",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4fefe75_88b5f3dc",
        "filename": "include/spdk/nvmf.h",
        "patchSetId": 2
      },
      "lineNbr": 695,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2018-07-10T15:58:24Z",
      "side": 1,
      "message": "I\u0027m ok with either strategy, but my comment says it has to be one way or the other. Either:\n\n1) spdk_nvmf_tgt_transport_create can be made asynchronous and spdk_nvmf_add_transport can be removed.\n\n2) spdk_nvmf_tgt_transport_create becomes instead spdk_nvmf_transport_create and is synchronous and doesn\u0027t take the tgt as a parameter. And spdk_nvmf_add_transport becomes spdk_nvmf_tgt_add_transport but otherwise mostly works the same way.\n\nI slightly prefer #2 and I think #2 also leads to solutions for some other unrelated problems we have.",
      "parentUuid": "195abb08_ebe8f187",
      "revId": "613a35c4764fcf005b01ce69cda5ffcb20825163",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}