{
  "comments": [
    {
      "key": {
        "uuid": "1706e211_93ec404d",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 1471,
      "author": {
        "id": 1011218
      },
      "writtenOn": "2017-09-20T15:15:04Z",
      "side": 1,
      "message": "what\u0027s the math behind this?",
      "range": {
        "startLine": 1471,
        "startChar": 15,
        "endLine": 1471,
        "endChar": 18
      },
      "revId": "f88dec1d37f12f10d0ed98e8ec5a63b809989b4c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b57bae92_a3fdb819",
        "filename": "lib/bdev/bdev.c",
        "patchSetId": 3
      },
      "lineNbr": 1471,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2017-09-27T00:15:51Z",
      "side": 1,
      "message": "I wanted to wait until several I/O complete after an ENOMEM condition before we try to resubmit I/O again.  For NVMe, default is 512 requests per queue pair - this means that if we hit an ENOMEM condition, we\u0027ll wait for 128 of them to complete before we start sending more on this channel.\n\nThat may seem like a lot, but if there are still 384 I/O outstanding, that is far above the queue depth that maxes out an NVMe device.  And this is only for one channel.",
      "parentUuid": "1706e211_93ec404d",
      "range": {
        "startLine": 1471,
        "startChar": 15,
        "endLine": 1471,
        "endChar": 18
      },
      "revId": "f88dec1d37f12f10d0ed98e8ec5a63b809989b4c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}