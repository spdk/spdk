{
  "comments": [
    {
      "key": {
        "uuid": "05bfa98a_597da164",
        "filename": "lib/iscsi/conn.c",
        "patchSetId": 23
      },
      "lineNbr": 1149,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-02-26T21:04:12Z",
      "side": 1,
      "message": "should this also call spdk_iscsi_conn_destruct(conn)?  the previous code would do this if spdk_iscsi_conn_handle_incoming_pdus() returned \u003c 0, via the goto",
      "revId": "05a28e80254821819b48b0fb0ae5bc66ffc89591",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c84a256b_ad7e4de3",
        "filename": "lib/iscsi/conn.c",
        "patchSetId": 23
      },
      "lineNbr": 1149,
      "author": {
        "id": 1011275
      },
      "writtenOn": "2018-02-27T01:22:19Z",
      "side": 1,
      "message": "Hi Jim,\nI am afraid that your understanding is not correct. Previously I also add this destruct statement. However  you can see in spdk_iscsi_conn_execute. If it checks the state (ISCSI_CONN_STATE_Exiting), it will destruct the connection. So If added here, there will be a double free. The reason is that some operations are asynchronous, and I faced this issue during my debug.",
      "parentUuid": "05bfa98a_597da164",
      "revId": "05a28e80254821819b48b0fb0ae5bc66ffc89591",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03e16ae7_a9a2b262",
        "filename": "lib/iscsi/conn.c",
        "patchSetId": 23
      },
      "lineNbr": 1149,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-02-27T17:45:02Z",
      "side": 1,
      "message": "OK - I understand now.  Thanks for your explanation.",
      "parentUuid": "c84a256b_ad7e4de3",
      "revId": "05a28e80254821819b48b0fb0ae5bc66ffc89591",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de0d7812_f03d0ef1",
        "filename": "lib/iscsi/conn.c",
        "patchSetId": 23
      },
      "lineNbr": 1166,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-02-26T23:17:12Z",
      "side": 1,
      "message": "I think we should extract this and make this independent timer function before current patch.\n\nThe reason is that after this patch, spdk_iscsi_conn_handle_nop() will never be called if no new request.",
      "range": {
        "startLine": 1166,
        "startChar": 6,
        "endLine": 1166,
        "endChar": 32
      },
      "revId": "05a28e80254821819b48b0fb0ae5bc66ffc89591",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5341e80_142d551f",
        "filename": "lib/iscsi/conn.c",
        "patchSetId": 23
      },
      "lineNbr": 1166,
      "author": {
        "id": 1011275
      },
      "writtenOn": "2018-02-27T01:22:19Z",
      "side": 1,
      "message": "It will still be called. I do not think that this will not be called. If that, our test will be failed.",
      "parentUuid": "de0d7812_f03d0ef1",
      "range": {
        "startLine": 1166,
        "startChar": 6,
        "endLine": 1166,
        "endChar": 32
      },
      "revId": "05a28e80254821819b48b0fb0ae5bc66ffc89591",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b85de3c7_79dde742",
        "filename": "lib/iscsi/conn.c",
        "patchSetId": 23
      },
      "lineNbr": 1166,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-02-27T01:36:26Z",
      "side": 1,
      "message": "Hi Ziye, \n\nYes, if I understand correctly, this will be called in normal condition because nopin and nopout are exchanged periodically.\n\nMy concern is whether we can detect the timeout of NOPOUT from the initiator when the initiator crashes because this will not be called if the target does not receive request.\n\nBesides conn_handle_nop() should run based on the timer but conn_execute() runs based not on the timer but on the epoll_wait. Hence anyway I think conn_handle_nop() should be extracted even if test passes.\n\nIf my understanding is wrong, please revise it.\n\nThanks,\nShuhei",
      "parentUuid": "b5341e80_142d551f",
      "range": {
        "startLine": 1166,
        "startChar": 6,
        "endLine": 1166,
        "endChar": 32
      },
      "revId": "05a28e80254821819b48b0fb0ae5bc66ffc89591",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f3b1394_b838cc61",
        "filename": "lib/iscsi/conn.c",
        "patchSetId": 23
      },
      "lineNbr": 1166,
      "author": {
        "id": 1011275
      },
      "writtenOn": "2018-02-27T01:41:16Z",
      "side": 1,
      "message": "Hi Shuhei,\n\nI understand your concerns, this will be done in the next patch in my plan(use a timer) but not this patch. My first priority is to make epoll polling work.",
      "parentUuid": "b85de3c7_79dde742",
      "range": {
        "startLine": 1166,
        "startChar": 6,
        "endLine": 1166,
        "endChar": 32
      },
      "revId": "05a28e80254821819b48b0fb0ae5bc66ffc89591",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "479244a0_bb3fed53",
        "filename": "lib/iscsi/conn.c",
        "patchSetId": 23
      },
      "lineNbr": 1166,
      "author": {
        "id": 1011275
      },
      "writtenOn": "2018-02-27T01:52:38Z",
      "side": 1,
      "message": "Also Shuhei, do you check the logic in spdk_iscsi_conn_handle_nop?  Currently with my patch, this function will still be executed as the usual see in loop in spdk_iscsi_poll_group_poll. Currently the approach maybe not quite efficient, but should not have the issue mentioned by you. If we have this issue, it should be the issue already existing.",
      "parentUuid": "6f3b1394_b838cc61",
      "range": {
        "startLine": 1166,
        "startChar": 6,
        "endLine": 1166,
        "endChar": 32
      },
      "revId": "05a28e80254821819b48b0fb0ae5bc66ffc89591",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a93cfad2_983c6c95",
        "filename": "lib/iscsi/conn.c",
        "patchSetId": 23
      },
      "lineNbr": 1166,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2018-02-27T02:07:27Z",
      "side": 1,
      "message": "Hi Ziye, I\u0027m sorry that you are right and no issue occur as I said.\nI checked poll_group_poll() is registered as a poller per core and work as same as before.\nI got wrong that you already integrated iscsi_poll_group to sock_group.\n\nThank you so much.",
      "parentUuid": "479244a0_bb3fed53",
      "range": {
        "startLine": 1166,
        "startChar": 6,
        "endLine": 1166,
        "endChar": 32
      },
      "revId": "05a28e80254821819b48b0fb0ae5bc66ffc89591",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3b6bdab_602824ea",
        "filename": "lib/iscsi/iscsi_subsystem.c",
        "patchSetId": 23
      },
      "lineNbr": 841,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-02-26T21:04:12Z",
      "side": 1,
      "message": "it should be ok to call spdk_sock_group_poll() on sock_group with no connections - so I don\u0027t think this check is needed",
      "revId": "05a28e80254821819b48b0fb0ae5bc66ffc89591",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4cdada2_c2c6dbe8",
        "filename": "lib/iscsi/iscsi_subsystem.c",
        "patchSetId": 23
      },
      "lineNbr": 957,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-02-26T21:04:12Z",
      "side": 1,
      "message": "can this be an assert instead?  it would match the assert on line 870\n\n(of course this will be different due to the differences introduce by my patch this morning)",
      "revId": "05a28e80254821819b48b0fb0ae5bc66ffc89591",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45cab294_fa13a1cb",
        "filename": "lib/iscsi/iscsi_subsystem.c",
        "patchSetId": 23
      },
      "lineNbr": 957,
      "author": {
        "id": 1011275
      },
      "writtenOn": "2018-02-27T01:38:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e4cdada2_c2c6dbe8",
      "revId": "05a28e80254821819b48b0fb0ae5bc66ffc89591",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}