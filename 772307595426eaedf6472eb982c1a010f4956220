{
  "comments": [
    {
      "key": {
        "uuid": "b78741df_a813c669",
        "filename": "mk/spdk.lib_deps.mk",
        "patchSetId": 8
      },
      "lineNbr": 112,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-09-25T17:47:08Z",
      "side": 1,
      "message": "this should be $(BDEV_DEPS)\n\nyou may not need util and the json libs now, but I\u0027d suggest just using $(BDEV_DEPS) now since you\u0027ll need them eventually",
      "revId": "772307595426eaedf6472eb982c1a010f4956220",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc1aeafe_89b653f6",
        "filename": "mk/spdk.lib_deps.mk",
        "patchSetId": 8
      },
      "lineNbr": 112,
      "author": {
        "id": 1015371
      },
      "writtenOn": "2019-09-26T08:55:58Z",
      "side": 1,
      "message": "The dependencies are added incrementally in each patch, because the verification builds are now checking for any mismatch between shared library dependencies and ones defined here, so this needs to be an exact list (or maybe the builds always did this, I didn\u0027t have a chance to work with this part of the codebase earlier).",
      "parentUuid": "b78741df_a813c669",
      "revId": "772307595426eaedf6472eb982c1a010f4956220",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "167bcaac_6865a45c",
        "filename": "mk/spdk.lib_deps.mk",
        "patchSetId": 8
      },
      "lineNbr": 112,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-09-26T23:22:41Z",
      "side": 1,
      "message": "Ah OK.  Never mind my comment then.",
      "parentUuid": "fc1aeafe_89b653f6",
      "revId": "772307595426eaedf6472eb982c1a010f4956220",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fae82ff_5e34e79b",
        "filename": "mk/spdk.modules.mk",
        "patchSetId": 8
      },
      "lineNbr": 36,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-09-25T17:47:08Z",
      "side": 1,
      "message": "currently the first two BLOCKDEV_MODULES_LIST lines include the bdev modules, the third line contains other SPDK dependency libraries for the first two lines\n\nso I\u0027d put bdev_zone_block either at the end of the second line, or create a new third line just for bdev_zone_block (to keep the second line from getting too long)",
      "revId": "772307595426eaedf6472eb982c1a010f4956220",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0295234f_f8c16254",
        "filename": "mk/spdk.modules.mk",
        "patchSetId": 8
      },
      "lineNbr": 36,
      "author": {
        "id": 1015371
      },
      "writtenOn": "2019-09-26T08:55:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5fae82ff_5e34e79b",
      "revId": "772307595426eaedf6472eb982c1a010f4956220",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ba0c3f5_6abc2ba1",
        "filename": "module/bdev/zone_block/vbdev_zone_block.c",
        "patchSetId": 8
      },
      "lineNbr": 62,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-09-25T17:47:08Z",
      "side": 1,
      "message": "so the spec allows zone size (ZSZE) and capacity (ZCAP) to be different - I think your new bdev module should also support that; it will ensure we can model that with the FTL that will be built on top",
      "revId": "772307595426eaedf6472eb982c1a010f4956220",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ce867b4_8d42f50b",
        "filename": "module/bdev/zone_block/vbdev_zone_block.c",
        "patchSetId": 8
      },
      "lineNbr": 62,
      "author": {
        "id": 1015371
      },
      "writtenOn": "2019-09-26T08:55:58Z",
      "side": 1,
      "message": "I\u0027m currently unsure what would be a use case for specifying a ZCAP for a zone device built on top of a regular bdev and the best way to handle that. ZCAP values in a proper zoned device could be different for each zone, so would we want an interface where the user could override the value for some given list of zones during creation, or do we want a global ZCAP? If the value is global, why differentiate it from ZSZE?\nAt the moment FTL only works with all chunks/zones having equal size - OC spec does allow for different chunk sizes, but it\u0027s an optional behavior.",
      "parentUuid": "2ba0c3f5_6abc2ba1",
      "revId": "772307595426eaedf6472eb982c1a010f4956220",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb41f857_3cd85e28",
        "filename": "module/bdev/zone_block/vbdev_zone_block.c",
        "patchSetId": 8
      },
      "lineNbr": 62,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-09-26T23:22:41Z",
      "side": 1,
      "message": "Zoned devices may report sizes that are the capacity rounded up to the nearest power of 2.  This enables conversion between an LBA and its zone/offset.  For example, if size is exactly 16384 blocks, but capacity is 16000 blocks, to generate the LBA for zone 5 offset 21, you just do:\n\n(5 \u003c\u003c 14) + 21\n\nSimilarly if you have to convert from an LBA back to the zone/offset, it\u0027s a bit mask/shift operation rather than a div (the latter is expensive and we try to avoid in the SPDK I/O path).\n\nChristoph Hellwig says there will be zoned namespace devices that do this, so we should be prepared.",
      "parentUuid": "0ce867b4_8d42f50b",
      "revId": "772307595426eaedf6472eb982c1a010f4956220",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb7373ff_36f904b6",
        "filename": "module/bdev/zone_block/vbdev_zone_block.c",
        "patchSetId": 8
      },
      "lineNbr": 62,
      "author": {
        "id": 1015344
      },
      "writtenOn": "2019-09-27T09:21:26Z",
      "side": 1,
      "message": "Hi Jim,\nShould we put this requirement (zone capacity must by power of 2) to zone bdev interface description?",
      "parentUuid": "cb41f857_3cd85e28",
      "revId": "772307595426eaedf6472eb982c1a010f4956220",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a87c143_64c7355a",
        "filename": "module/bdev/zone_block/vbdev_zone_block.c",
        "patchSetId": 8
      },
      "lineNbr": 62,
      "author": {
        "id": 1015371
      },
      "writtenOn": "2019-10-07T08:26:34Z",
      "side": 1,
      "message": "Ok, I understand the use case now. So to be clear - the module would allow for specifying both ZCAP (which can be any value) and ZSZE (which from what I understand needs to be a power of two?). If so, maybe it\u0027d be better to calculate ZSZE to be the ZCAP rounded up to the nearest power of 2 and let the user supply ZCAP only?",
      "parentUuid": "cb7373ff_36f904b6",
      "revId": "772307595426eaedf6472eb982c1a010f4956220",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cd80a00_c34e5ee4",
        "filename": "module/bdev/zone_block/vbdev_zone_block.c",
        "patchSetId": 8
      },
      "lineNbr": 62,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-10-08T19:46:48Z",
      "side": 1,
      "message": "Oh yes - I like that idea.",
      "parentUuid": "8a87c143_64c7355a",
      "revId": "772307595426eaedf6472eb982c1a010f4956220",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77c923be_67be9b55",
        "filename": "module/bdev/zone_block/vbdev_zone_block.c",
        "patchSetId": 8
      },
      "lineNbr": 70,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-09-25T17:47:08Z",
      "side": 1,
      "message": "we can just make it an error if the user passes 0\n\nthe error would actually be better from an API perspective, since it removes the needs to publish the default",
      "revId": "772307595426eaedf6472eb982c1a010f4956220",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "154fe3d6_8481c079",
        "filename": "module/bdev/zone_block/vbdev_zone_block.c",
        "patchSetId": 8
      },
      "lineNbr": 70,
      "author": {
        "id": 1015371
      },
      "writtenOn": "2019-09-26T08:55:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "77c923be_67be9b55",
      "revId": "772307595426eaedf6472eb982c1a010f4956220",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ac152b1_9c4cc4b1",
        "filename": "module/bdev/zone_block/vbdev_zone_block.c",
        "patchSetId": 8
      },
      "lineNbr": 79,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2019-09-25T17:47:08Z",
      "side": 1,
      "message": "return not needed at the end of a void function (we typically omit them in SPDK)",
      "revId": "772307595426eaedf6472eb982c1a010f4956220",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e854f8e_19b78a66",
        "filename": "module/bdev/zone_block/vbdev_zone_block.c",
        "patchSetId": 8
      },
      "lineNbr": 79,
      "author": {
        "id": 1015371
      },
      "writtenOn": "2019-09-26T08:55:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ac152b1_9c4cc4b1",
      "revId": "772307595426eaedf6472eb982c1a010f4956220",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}