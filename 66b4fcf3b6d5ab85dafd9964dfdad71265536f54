{
  "comments": [
    {
      "key": {
        "uuid": "0770e954_240f2ab3",
        "filename": "test/unit/lib/bdev/bdev_raid.c/bdev_raid_ut.c",
        "patchSetId": 5
      },
      "lineNbr": 1551,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-05-15T04:36:08Z",
      "side": 1,
      "message": "staying lba\u003d0 here is easier to read because initialization and update are close.",
      "revId": "66b4fcf3b6d5ab85dafd9964dfdad71265536f54",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2450a94_7d045f2e",
        "filename": "test/unit/lib/bdev/bdev_raid.c/bdev_raid_ut.c",
        "patchSetId": 5
      },
      "lineNbr": 1551,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2019-05-15T16:36:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0770e954_240f2ab3",
      "revId": "66b4fcf3b6d5ab85dafd9964dfdad71265536f54",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58447ada_a5217c1c",
        "filename": "test/unit/lib/bdev/bdev_raid.c/bdev_raid_ut.c",
        "patchSetId": 5
      },
      "lineNbr": 1555,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-05-15T04:36:08Z",
      "side": 1,
      "message": "we should cover the cases of io_len \u003c g_strip_size and io_len \u003e g_strip_size? How about using (g_strip / 2) + g_strip_size * i ?",
      "range": {
        "startLine": 1555,
        "startChar": 11,
        "endLine": 1555,
        "endChar": 34
      },
      "revId": "66b4fcf3b6d5ab85dafd9964dfdad71265536f54",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "473b323e_61f9fed4",
        "filename": "test/unit/lib/bdev/bdev_raid.c/bdev_raid_ut.c",
        "patchSetId": 5
      },
      "lineNbr": 1555,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2019-05-15T16:37:36Z",
      "side": 1,
      "message": "So the raid module sets the split for bdev to strip size so it\u0027s not possible to get an IO large than a strip. The raid code itself will check this in raid_bdev_start_rw_request() and assert(FALSE) if that happens. With this patch I was just removing the random nature of the test but I can see an improvement here where we remove the assert from the code under test and CU_ASSERT that the IO is failed in this.  I\u0027ll put it on the list, let me know if you disagree. The current test, as is, tests something smaller than strip and then strip size which seemed like two good boundaries for UT",
      "parentUuid": "58447ada_a5217c1c",
      "range": {
        "startLine": 1555,
        "startChar": 11,
        "endLine": 1555,
        "endChar": 34
      },
      "revId": "66b4fcf3b6d5ab85dafd9964dfdad71265536f54",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ec80a31_7aa7c4b1",
        "filename": "test/unit/lib/bdev/bdev_raid.c/bdev_raid_ut.c",
        "patchSetId": 5
      },
      "lineNbr": 1555,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-05-16T01:51:19Z",
      "side": 1,
      "message": "Thank you for correcting me. My comment was wrong. The general bdev layer splits IO to raid bdev, so both your change and the existing code are correct. Why I was wrong was that I thought that the existing code was (rand() % g_strip_size) + (g_strip_size * i).\n\nI have seen you add removing assert and adding tests in subsequent patches. But I was wrong and keeping assert will be better. Sorry for bothering you.",
      "parentUuid": "473b323e_61f9fed4",
      "range": {
        "startLine": 1555,
        "startChar": 11,
        "endLine": 1555,
        "endChar": 34
      },
      "revId": "66b4fcf3b6d5ab85dafd9964dfdad71265536f54",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}