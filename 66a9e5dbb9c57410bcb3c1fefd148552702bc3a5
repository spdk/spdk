{
  "comments": [
    {
      "key": {
        "uuid": "90f3d4d8_9a7053ec",
        "filename": "lib/nvme/nvme_qpair.c",
        "patchSetId": 11
      },
      "lineNbr": 472,
      "author": {
        "id": 1011289
      },
      "writtenOn": "2019-10-03T15:51:30Z",
      "side": 1,
      "message": "I don\u0027t totally see the purpose of while loop using i, why not just drain the queue until empty or until you break because one couldn\u0027t be resubmitted.  Keep the counter and then after the loop assert that i \u003d\u003d ret, or just print a warn if not? I could be missing something though....",
      "revId": "66a9e5dbb9c57410bcb3c1fefd148552702bc3a5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9fa52c3_e5af5d21",
        "filename": "lib/nvme/nvme_qpair.c",
        "patchSetId": 11
      },
      "lineNbr": 472,
      "author": {
        "id": 1011223
      },
      "writtenOn": "2019-10-03T22:38:10Z",
      "side": 1,
      "message": "The intent was to maintain the behavior of the old code. We have always only submitted as many as we complete. That was done mostly, I think, because that is the logical limit of how many we can resubmit. But I didn\u0027t want to rock the boat too much by changing that behavior.",
      "parentUuid": "90f3d4d8_9a7053ec",
      "revId": "66a9e5dbb9c57410bcb3c1fefd148552702bc3a5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7227f3a0_004db2f5",
        "filename": "lib/nvme/nvme_qpair.c",
        "patchSetId": 11
      },
      "lineNbr": 474,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2019-10-03T19:54:57Z",
      "side": 1,
      "message": "I think you need to make nvme_qpair_submit_request return EAGAIN or EBUSY or something when it needs to queue something up, and then do the queueing in the generic layer. That way you can just check the return code here.",
      "revId": "66a9e5dbb9c57410bcb3c1fefd148552702bc3a5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}