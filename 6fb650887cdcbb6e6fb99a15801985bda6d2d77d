{
  "comments": [
    {
      "key": {
        "uuid": "9fcd44c2_010c61be",
        "filename": "doc/jsonrpc.md",
        "patchSetId": 9
      },
      "lineNbr": 1089,
      "author": {
        "id": 1013793
      },
      "writtenOn": "2018-07-06T12:07:38Z",
      "side": 1,
      "message": "Is this UUID concept specific to a Logical Volume? I\u0027ve seen a UUID also for Malloc BDevs, so it seems to be generic.\n\nIf so, then this concept should be explained elsewhere and all cases where \"name\" can be the name or the UUID should mention that explicitly, for example for delete_bdev.",
      "revId": "6fb650887cdcbb6e6fb99a15801985bda6d2d77d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8329218e_b8d0a303",
        "filename": "doc/jsonrpc.md",
        "patchSetId": 9
      },
      "lineNbr": 1089,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-07-06T19:02:07Z",
      "side": 1,
      "message": "It is not specific to logical volumes - but not all bdev modules support it.\n\nThe main difference is that for logical volumes, the UUID is stored in metadata on disk.  For ephemeral/temporary bdevs (like malloc and null) there is no persistence obviously.\n\nWe are also getting rid of delete_bdev - each bdev module will have its own RPC method for deleting its type of bdev.",
      "parentUuid": "9fcd44c2_010c61be",
      "revId": "6fb650887cdcbb6e6fb99a15801985bda6d2d77d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c33fed9_eaee1ef5",
        "filename": "doc/jsonrpc.md",
        "patchSetId": 9
      },
      "lineNbr": 1272,
      "author": {
        "id": 1013793
      },
      "writtenOn": "2018-07-06T12:07:38Z",
      "side": 1,
      "message": "Should this perhaps use the same format as the parameters, i.e. a table?",
      "revId": "6fb650887cdcbb6e6fb99a15801985bda6d2d77d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "879f8ea2_c28a84fd",
        "filename": "doc/jsonrpc.md",
        "patchSetId": 9
      },
      "lineNbr": 1272,
      "author": {
        "id": 1011222
      },
      "writtenOn": "2018-07-06T19:02:07Z",
      "side": 1,
      "message": "Good idea.\n\nUnfortunately none of the other RPCs describe the response in table format.  I\u0027d suggest we leave this as-is for now to keep it consistent.  A lot of the other RPCs don\u0027t describe simple responses in a table, but they probably should.\n\nI\u0027ve added a low-hanging fruit Trello card to change these response sections:\n\nhttps://trello.com/c/2tTyNbXB/12-modify-jsonrpcmd-to-describe-responses-in-table-format",
      "parentUuid": "8c33fed9_eaee1ef5",
      "revId": "6fb650887cdcbb6e6fb99a15801985bda6d2d77d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e8a151c_6d9994ff",
        "filename": "doc/jsonrpc.md",
        "patchSetId": 9
      },
      "lineNbr": 1272,
      "author": {
        "id": 1010525
      },
      "writtenOn": "2018-07-06T20:06:28Z",
      "side": 1,
      "message": "The responses of some RPC methods are bare strings, bools, etc. rather than objects, so a table would not be appropriate for those.  However, it might be a good idea to do a one-time switch of some/all of these RPCs to return an object to allow for future extensibility without API breaks.",
      "parentUuid": "879f8ea2_c28a84fd",
      "revId": "6fb650887cdcbb6e6fb99a15801985bda6d2d77d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}