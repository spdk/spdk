{
  "comments": [
    {
      "key": {
        "uuid": "a9dd9684_9b66e28c",
        "filename": "include/spdk/sock.h",
        "patchSetId": 20
      },
      "lineNbr": 62,
      "author": {
        "id": 1016578
      },
      "writtenOn": "2019-11-28T06:04:10Z",
      "side": 1,
      "message": "this is error indication (not length of something).\n\nworth documentation what is consumer can/expected to do when error occurs",
      "range": {
        "startLine": 62,
        "startChar": 33,
        "endLine": 62,
        "endChar": 36
      },
      "revId": "564145588b801b88cf9fcbafb0f1c751efc1a2c5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c7f5f25_cf4aada9",
        "filename": "include/spdk/sock.h",
        "patchSetId": 20
      },
      "lineNbr": 67,
      "author": {
        "id": 1016578
      },
      "writtenOn": "2019-11-28T06:04:10Z",
      "side": 1,
      "message": "worth putting a comment that these two fields are used by the socket provider, so the consumer must not assume/use them.",
      "range": {
        "startLine": 65,
        "startChar": 1,
        "endLine": 67,
        "endChar": 23
      },
      "revId": "564145588b801b88cf9fcbafb0f1c751efc1a2c5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72d4e26b_f8e14752",
        "filename": "include/spdk_internal/sock.h",
        "patchSetId": 20
      },
      "lineNbr": 141,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-12-06T07:47:45Z",
      "side": 1,
      "message": "The purpose of this increment of sock-\u003ecb_cnt is for the case when sock_close() is called in req-\u003ecb_fn()?\nIt doesn\u0027t looks that req-\u003ecb_fn() accesses sock-\u003ecb_cnt in it.\n\nIf wrong, when spdk_sock_close() will observe sock-\u003ecb_cnt \u003e 0 ?\n\nIf possible, will you add unit test for sock-\u003ecb_cnt?",
      "range": {
        "startLine": 141,
        "startChar": 1,
        "endLine": 141,
        "endChar": 16
      },
      "revId": "564145588b801b88cf9fcbafb0f1c751efc1a2c5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1ac9660_3684a388",
        "filename": "include/spdk_internal/sock.h",
        "patchSetId": 20
      },
      "lineNbr": 141,
      "author": {
        "id": 1010531
      },
      "writtenOn": "2019-12-10T16:21:14Z",
      "side": 1,
      "message": "Yes - this is to catch the case where the user calls spdk_sock_close from within a completion callback for a writev_async. We need to let the stack unwind before releasing the memory in that case because calling spdk_sock_close may actually abort other remaining requests.\n\nI can add a unit test for it.",
      "parentUuid": "72d4e26b_f8e14752",
      "range": {
        "startLine": 141,
        "startChar": 1,
        "endLine": 141,
        "endChar": 16
      },
      "revId": "564145588b801b88cf9fcbafb0f1c751efc1a2c5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7833daf_ae9a55d7",
        "filename": "include/spdk_internal/sock.h",
        "patchSetId": 20
      },
      "lineNbr": 163,
      "author": {
        "id": 1012251
      },
      "writtenOn": "2019-12-06T07:47:45Z",
      "side": 1,
      "message": "Same question as above.",
      "revId": "564145588b801b88cf9fcbafb0f1c751efc1a2c5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}